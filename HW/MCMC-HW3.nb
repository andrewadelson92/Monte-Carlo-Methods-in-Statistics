(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.2' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    224233,       4773]
NotebookOptionsPosition[    218147,       4623]
NotebookOutlinePosition[    219034,       4653]
CellTagsIndexPosition[    218858,       4646]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["MCMC:HW3", "Title",
 CellChangeTimes->{{3.694280543258505*^9, 3.694280546372974*^9}, {
  3.695649862279826*^9, 3.695649862367092*^9}, {3.696872721117362*^9, 
  3.69687272117374*^9}}],

Cell["Qi Chen(qc586)", "Author",
 CellChangeTimes->{{3.694280554835115*^9, 3.694280558973827*^9}}],

Cell[CellGroupData[{

Cell["Problem 1", "Section",
 CellChangeTimes->{{3.694280622276155*^9, 3.694280624070117*^9}}],

Cell["Suppose", "TextNoIndent",
 CellChangeTimes->{3.696872778667082*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Pi]", "(", 
    RowBox[{"a", ",", "b"}], ")"}], "\[Proportional]", 
   RowBox[{
    SuperscriptBox["a", "4"], 
    SuperscriptBox["b", "6"], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "a"}], "-", "b", "-", 
      RowBox[{"3", "a", " ", "b"}]}]]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696872788144587*^9, 3.6968728088581963`*^9}}],

Cell[TextData[{
 "for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", ",", " ", 
    RowBox[{"b", " ", ">", " ", "0"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " is required to be sampled. Find"
}], "TextNoIndent",
 CellChangeTimes->{{3.696872816745179*^9, 3.6968728242965107`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Pi]", "(", 
    RowBox[{"a", "|", "b"}], ")"}], " ", "and", " ", 
   RowBox[{"\[Pi]", "(", 
    RowBox[{"b", "|", "a"}], ")"}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.6968728291846237`*^9, 3.69687284084359*^9}}],

Cell[TextData[{
 "and hence find a transition density ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "(", 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"n", "+", "1"}]], ",", 
     RowBox[{
      SubscriptBox["b", 
       RowBox[{"n", "+", "1"}]], "|", 
      SubscriptBox["a", "n"]}], ",", 
     SubscriptBox["b", "n"]}], ")"}], TraditionalForm]]],
 " which has \[Pi] as the stationary density. ",
 "Implement the chain and use the output to evaluate the integral"
}], "TextNoIndent",
 CellChangeTimes->{{3.696872847911065*^9, 3.696872881986476*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"I", "=", 
   RowBox[{"\[Integral]", 
    RowBox[{"\[Integral]", 
     RowBox[{"a", " ", "b", " ", 
      RowBox[{"\[Pi]", "(", 
       RowBox[{"a", ",", "b"}], ")"}], 
      RowBox[{"\[DifferentialD]", "a"}], 
      RowBox[{"\[DifferentialD]", "b"}]}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696872887517548*^9, 3.696872901450726*^9}}],

Cell["\<\
Solution: According to the definition of the marginal density,\
\>", "TextNoIndent",
 CellChangeTimes->{{3.696875987447032*^9, 3.6968760177883387`*^9}}],

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{"\[Pi]", "(", 
    RowBox[{"a", "|", "b"}], ")"}], "=", 
   FractionBox[
    RowBox[{"\[Pi]", "(", 
     RowBox[{"a", ",", "b"}], ")"}], 
    RowBox[{"\[Pi]", "(", "b", ")"}]]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "4"], 
     SuperscriptBox["b", "6"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "a"}], "-", "b", "-", 
       RowBox[{"3", "a", " ", "b"}]}]]}], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
     RowBox[{
      SuperscriptBox["a", "4"], 
      SuperscriptBox["b", "6"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "a"}], "-", "b", "-", 
        RowBox[{"3", "a", " ", "b"}]}]], 
      RowBox[{"\[DifferentialD]", "a"}]}]}]]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "4"], 
     SuperscriptBox["b", "6"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "a"}], "-", "b", "-", 
       RowBox[{"3", "a", " ", "b"}]}]]}], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "b"}]], 
     SuperscriptBox["b", "6"], 
     RowBox[{
      SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
      RowBox[{
       SuperscriptBox["a", "4"], 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"3", "b"}]}], ")"}]}], "a"}]], 
       RowBox[{"\[DifferentialD]", "a"}]}]}]}]]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "4"], 
     SuperscriptBox["b", "6"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "a"}], "-", "b", "-", 
       RowBox[{"3", "a", " ", "b"}]}]]}], 
    RowBox[{
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{"-", "b"}]], 
     SuperscriptBox["b", "6"], 
     FractionBox["24", 
      SuperscriptBox[
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"3", " ", "b"}]}], ")"}], "5"]]}]]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "4"], 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{
         RowBox[{"-", 
          RowBox[{"(", 
           RowBox[{"1", "+", 
            RowBox[{"3", "b"}]}], ")"}]}], "a"}]], "(", 
       RowBox[{"1", "+", 
        RowBox[{"3", " ", "b"}]}], ")"}], "5"]}], "24"]}], 
  TraditionalForm]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696876019432537*^9, 3.696876070852825*^9}, {
  3.696876105366913*^9, 3.696876138845079*^9}, {3.696876186479033*^9, 
  3.696876254615695*^9}, {3.696876285353017*^9, 3.6968762895741673`*^9}}],

Cell["We can check that", "TextNoIndent",
 CellChangeTimes->{{3.6968767146400833`*^9, 3.6968767168892813`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     RowBox[{"\[Pi]", "(", 
      RowBox[{"a", "|", "b"}], ")"}], 
     RowBox[{"\[DifferentialD]", "a"}]}]}], "=", "1"}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.6968767192323914`*^9, 3.6968767326528683`*^9}, 
   3.696877599086852*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["a", "4"], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"3", "b"}]}], ")"}]}], "a"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"a", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"b", ">", "0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.696876154051108*^9, 3.69687617920654*^9}}],

Cell[BoxData[
 FractionBox["24", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"3", " ", "b"}]}], ")"}], "5"]]], "Output",
 CellChangeTimes->{3.696876180453076*^9}]
}, Open  ]],

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{"\[Pi]", "(", 
    RowBox[{"b", "|", "a"}], ")"}], "=", 
   FractionBox[
    RowBox[{"\[Pi]", "(", 
     RowBox[{"a", ",", "b"}], ")"}], 
    RowBox[{"\[Pi]", "(", "a", ")"}]]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["a", "4"], 
     SuperscriptBox["b", "6"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "a"}], "-", "b", "-", 
       RowBox[{"3", "a", " ", "b"}]}]]}], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
     RowBox[{
      SuperscriptBox["a", "4"], 
      SuperscriptBox["b", "6"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", "a"}], "-", "b", "-", 
        RowBox[{"3", "a", " ", "b"}]}]], 
      RowBox[{"\[DifferentialD]", "b"}]}]}]]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["b", "6"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "b"}], "-", 
       RowBox[{"3", "a", " ", "b"}]}]]}], 
    RowBox[{
     SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
     RowBox[{
      SuperscriptBox["b", "6"], 
      SuperscriptBox["\[ExponentialE]", 
       RowBox[{
        RowBox[{"-", 
         RowBox[{"(", 
          RowBox[{"1", "+", 
           RowBox[{"3", "a"}]}], ")"}]}], "b"}]], 
      RowBox[{"\[DifferentialD]", "b"}]}]}]]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["b", "6"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "b"}], "-", 
       RowBox[{"3", "a", " ", "b"}]}]]}], 
    FractionBox["720", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{"1", "+", 
        RowBox[{"3", " ", "a"}]}], ")"}], "7"]]]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"=", 
   FractionBox[
    RowBox[{
     SuperscriptBox["b", "6"], 
     SuperscriptBox[
      RowBox[{
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"-", 
         RowBox[{"b", "(", 
          RowBox[{"1", "+", 
           RowBox[{"3", "a"}]}], ")"}]}]], "(", 
       RowBox[{"1", "+", 
        RowBox[{"3", " ", "a"}]}], ")"}], "7"]}], "720"]}], 
  TraditionalForm]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696876311591016*^9, 3.696876324301838*^9}, {
  3.69687639903442*^9, 3.696876399549457*^9}, {3.6968764926566973`*^9, 
  3.696876520183535*^9}, {3.696876608931583*^9, 3.696876622809037*^9}, {
  3.696876675785081*^9, 3.696876692116893*^9}}],

Cell["We can check that", "TextNoIndent",
 CellChangeTimes->{{3.6968767146400833`*^9, 3.6968767168892813`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    SubsuperscriptBox["\[Integral]", "0", "\[Infinity]"], 
    RowBox[{
     RowBox[{"\[Pi]", "(", 
      RowBox[{"b", "|", "a"}], ")"}], 
     RowBox[{"\[DifferentialD]", "b"}]}]}], "=", "1"}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.6968767192323914`*^9, 3.6968767326528683`*^9}, {
  3.696877599086852*^9, 3.69687761228231*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Integrate", "[", 
  RowBox[{
   RowBox[{
    SuperscriptBox["b", "6"], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         RowBox[{"3", "a"}]}], ")"}]}], "b"}]]}], ",", 
   RowBox[{"{", 
    RowBox[{"b", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
   RowBox[{"Assumptions", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"a", ">", "0"}], "}"}]}]}], "]"}]], "Input",
 CellChangeTimes->{{3.696876154051108*^9, 3.69687617920654*^9}, {
  3.6968765908179703`*^9, 3.6968766044325867`*^9}}],

Cell[BoxData[
 FractionBox["720", 
  SuperscriptBox[
   RowBox[{"(", 
    RowBox[{"1", "+", 
     RowBox[{"3", " ", "a"}]}], ")"}], "7"]]], "Output",
 CellChangeTimes->{3.696876605341638*^9}]
}, Open  ]],

Cell[TextData[{
 "We want to find the transition density ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "(", 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"n", "+", "1"}]], ",", 
     RowBox[{
      SubscriptBox["b", 
       RowBox[{"n", "+", "1"}]], "|", 
      SubscriptBox["a", "n"]}], ",", 
     SubscriptBox["b", "n"]}], ")"}], TraditionalForm]]],
 " such that"
}], "TextNoIndent",
 CellChangeTimes->{{3.696878300372652*^9, 3.696878324563167*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Pi]", "(", 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"n", "+", "1"}]], ",", 
     SubscriptBox["b", 
      RowBox[{"n", "+", "1"}]]}], ")"}], "=", 
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"p", "(", 
      RowBox[{
       SubscriptBox["a", 
        RowBox[{"n", "+", "1"}]], ",", 
       RowBox[{
        SubscriptBox["b", 
         RowBox[{"n", "+", "1"}]], "|", 
        SubscriptBox["a", "n"]}], ",", 
       SubscriptBox["b", "n"]}], ")"}], 
     RowBox[{"\[Pi]", "(", 
      RowBox[{
       SubscriptBox["a", "n"], ",", 
       SubscriptBox["b", "n"]}], ")"}], 
     RowBox[{"\[DifferentialD]", 
      SubscriptBox["a", "n"]}], 
     RowBox[{"\[DifferentialD]", 
      SubscriptBox["b", "n"]}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696878326125128*^9, 3.696878362761475*^9}},
 CellTags->"eq: 1190041299861442990"],

Cell["Consider the marginal density", "TextNoIndent",
 CellChangeTimes->{{3.6968946987031527`*^9, 3.696894707581745*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Pi]", "(", 
    SubscriptBox["a", 
     RowBox[{"n", "+", "1"}]], ")"}], "=", 
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"p", "(", 
      RowBox[{
       SubscriptBox["a", 
        RowBox[{"n", "+", "1"}]], "|", 
       SubscriptBox["a", "n"]}], ")"}], 
     RowBox[{"\[Pi]", "(", 
      SubscriptBox["a", "n"], ")"}], 
     RowBox[{"\[DifferentialD]", 
      SubscriptBox["a", "n"]}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696894723556686*^9, 3.696894784315174*^9}, {
  3.696894939702083*^9, 3.6968949645357037`*^9}},
 CellTags->"eq: 2945818736449318105"],

Cell["Obviously,", "TextNoIndent",
 CellChangeTimes->{{3.696894793178218*^9, 3.6968947965078297`*^9}, {
  3.6968952521607113`*^9, 3.696895254149447*^9}, {3.6968958008328657`*^9, 
  3.696895801999216*^9}}],

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{"p", "(", 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"n", "+", "1"}]], "|", 
     SubscriptBox["a", "n"]}], ")"}], "=", 
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"\[Pi]", "(", 
      RowBox[{
       SubscriptBox["a", 
        RowBox[{"n", "+", "1"}]], "|", "u"}], ")"}], 
     RowBox[{"\[Pi]", "(", 
      RowBox[{"u", "|", 
       SubscriptBox["a", "n"]}], ")"}], 
     RowBox[{"\[DifferentialD]", "u"}]}]}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"=", 
   RowBox[{"\[Integral]", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox[
        SubscriptBox["a", 
         RowBox[{"n", "+", "1"}]], "4"], 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"3", "u"}]}], ")"}]}], 
           SubscriptBox["a", 
            RowBox[{"n", "+", "1"}]]}]], "(", 
         RowBox[{"1", "+", 
          RowBox[{"3", " ", "u"}]}], ")"}], "5"]}], "24"], 
     FractionBox[
      RowBox[{
       SuperscriptBox["u", "6"], 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           RowBox[{"u", "(", 
            RowBox[{"1", "+", 
             RowBox[{"3", 
              SubscriptBox["a", "n"]}]}], ")"}]}]], "(", 
         RowBox[{"1", "+", 
          RowBox[{"3", " ", 
           SubscriptBox["a", "n"]}]}], ")"}], "7"]}], "720"], 
     RowBox[{"\[DifferentialD]", "u"}]}]}]}], 
  TraditionalForm]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696894798248711*^9, 3.696894818034732*^9}, {
   3.696894852403686*^9, 3.696894861007743*^9}, {3.696894989299506*^9, 
   3.6968949899173822`*^9}, {3.6968950320460052`*^9, 3.6968950711263123`*^9}, 
   3.6968967266507683`*^9, {3.696896801731558*^9, 3.696896838590542*^9}}],

Cell["satisfies the stationary condition. Similarly,", "TextNoIndent",
 CellChangeTimes->{{3.69689514075753*^9, 3.6968951422545*^9}, {
  3.69689526934662*^9, 3.696895278919737*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Pi]", "(", 
    SubscriptBox["b", 
     RowBox[{"n", "+", "1"}]], ")"}], "=", 
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"p", "(", 
      RowBox[{
       SubscriptBox["b", 
        RowBox[{"n", "+", "1"}]], "|", 
       SubscriptBox["b", "n"]}], ")"}], 
     RowBox[{"\[Pi]", "(", 
      SubscriptBox["b", "n"], ")"}], 
     RowBox[{"\[DifferentialD]", 
      SubscriptBox["a", "n"]}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696895147782151*^9, 3.696895160393488*^9}}],

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{"p", "(", 
    RowBox[{
     SubscriptBox["b", 
      RowBox[{"n", "+", "1"}]], "|", 
     SubscriptBox["b", "n"]}], ")"}], "=", 
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"\[Pi]", "(", 
      RowBox[{
       SubscriptBox["b", 
        RowBox[{"n", "+", "1"}]], "|", "u"}], ")"}], 
     RowBox[{"\[Pi]", "(", 
      RowBox[{"u", "|", 
       SubscriptBox["b", "n"]}], ")"}], 
     RowBox[{"\[DifferentialD]", "u"}]}]}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"=", 
   RowBox[{"\[Integral]", 
    RowBox[{
     FractionBox[
      RowBox[{
       SuperscriptBox[
        SubscriptBox["b", 
         RowBox[{"n", "+", "1"}]], "6"], 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{"-", 
           RowBox[{
            SubscriptBox["b", 
             RowBox[{"n", "+", "1"}]], "(", 
            RowBox[{"1", "+", 
             RowBox[{"3", "u"}]}], ")"}]}]], "(", 
         RowBox[{"1", "+", 
          RowBox[{"3", " ", "u"}]}], ")"}], "7"]}], "720"], 
     FractionBox[
      RowBox[{
       SuperscriptBox["u", "4"], 
       SuperscriptBox[
        RowBox[{
         SuperscriptBox["\[ExponentialE]", 
          RowBox[{
           RowBox[{"-", 
            RowBox[{"(", 
             RowBox[{"1", "+", 
              RowBox[{"3", 
               SubscriptBox["b", "n"]}]}], ")"}]}], "u"}]], "(", 
         RowBox[{"1", "+", 
          RowBox[{"3", " ", 
           SubscriptBox["b", "n"]}]}], ")"}], "5"]}], "24"], 
     RowBox[{"\[DifferentialD]", "u"}]}]}]}], 
  TraditionalForm]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696895166379524*^9, 3.6968951825388393`*^9}, {
  3.696895212610111*^9, 3.6968952126725616`*^9}, {3.696897111870253*^9, 
  3.696897115206915*^9}, {3.6968971604881763`*^9, 3.696897206902824*^9}}],

Cell["\<\
So in principle we can sample from the marginal transition density, but the \
integrals are not easy to evaluate. Alternatively, We can verify that\
\>", "TextNoIndent",
 CellChangeTimes->{{3.696895297353887*^9, 3.6968953463044577`*^9}, {
  3.696895740649797*^9, 3.6968957621003437`*^9}, {3.696896168935714*^9, 
  3.6968961728753757`*^9}, {3.696897120485368*^9, 3.696897136333283*^9}}],

Cell[BoxData[{
 FormBox[
  RowBox[{"p", "(", 
   RowBox[{
    SubscriptBox["a", 
     RowBox[{"n", "+", "1"}]], ",", 
    RowBox[{
     SubscriptBox["b", 
      RowBox[{"n", "+", "1"}]], "|", 
     SubscriptBox["a", "n"]}], ",", 
    SubscriptBox["b", "n"]}], ")"}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"=", 
   RowBox[{
    RowBox[{"\[Pi]", "(", 
     RowBox[{
      SubscriptBox["a", 
       RowBox[{"n", "+", "1"}]], "|", 
      SubscriptBox["b", 
       RowBox[{"n", "+", "1"}]]}], ")"}], 
    RowBox[{"\[Pi]", "(", 
     RowBox[{
      SubscriptBox["b", 
       RowBox[{"n", "+", "1"}]], "|", 
      SubscriptBox["a", "n"]}], ")"}]}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"=", 
   RowBox[{
    FractionBox[
     RowBox[{
      SuperscriptBox[
       SubscriptBox["a", 
        RowBox[{"n", "+", "1"}]], "4"], 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{
          RowBox[{"-", 
           RowBox[{"(", 
            RowBox[{"1", "+", 
             RowBox[{"3", 
              SubscriptBox["b", 
               RowBox[{"n", "+", "1"}]]}]}], ")"}]}], 
          SubscriptBox["a", 
           RowBox[{"n", "+", "1"}]]}]], "(", 
        RowBox[{"1", "+", 
         RowBox[{"3", " ", 
          SubscriptBox["b", 
           RowBox[{"n", "+", "1"}]]}]}], ")"}], "5"]}], "24"], 
    FractionBox[
     RowBox[{
      SuperscriptBox[
       SubscriptBox["b", 
        RowBox[{"n", "+", "1"}]], "6"], 
      SuperscriptBox[
       RowBox[{
        SuperscriptBox["\[ExponentialE]", 
         RowBox[{"-", 
          RowBox[{
           SubscriptBox["b", 
            RowBox[{"n", "+", "1"}]], "(", 
           RowBox[{"1", "+", 
            RowBox[{"3", 
             SubscriptBox["a", "n"]}]}], ")"}]}]], "(", 
        RowBox[{"1", "+", 
         RowBox[{"3", " ", 
          SubscriptBox["a", "n"]}]}], ")"}], "7"]}], "720"]}]}], 
  TraditionalForm]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696895764214768*^9, 3.6968957953217363`*^9}, {
  3.696896183461434*^9, 3.696896217981526*^9}, {3.696896557761505*^9, 
  3.696896637488014*^9}},
 CellTags->"eq: 5557865785081713160"],

Cell[TextData[{
 "satisfies ",
 "Eq. (",
 
 CounterBox["DisplayFormulaNumbered", "eq: 1190041299861442990"],
 ") as"
}], "TextNoIndent",
 CellChangeTimes->{{3.696896165015197*^9, 3.696896165338442*^9}, {
  3.696896226136056*^9, 3.696896237596202*^9}}],

Cell[BoxData[{
 FormBox[
  RowBox[{"\[Integral]", 
   RowBox[{
    RowBox[{"p", "(", 
     RowBox[{
      SubscriptBox["a", 
       RowBox[{"n", "+", "1"}]], ",", 
      RowBox[{
       SubscriptBox["b", 
        RowBox[{"n", "+", "1"}]], "|", 
       SubscriptBox["a", "n"]}], ",", 
      SubscriptBox["b", "n"]}], ")"}], 
    RowBox[{"\[Pi]", "(", 
     RowBox[{
      SubscriptBox["a", "n"], ",", 
      SubscriptBox["b", "n"]}], ")"}], 
    RowBox[{"\[DifferentialD]", 
     SubscriptBox["a", "n"]}], 
    RowBox[{"\[DifferentialD]", 
     SubscriptBox["b", "n"]}]}]}], TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"=", 
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"\[Pi]", "(", 
      RowBox[{
       SubscriptBox["a", 
        RowBox[{"n", "+", "1"}]], "|", 
       SubscriptBox["b", 
        RowBox[{"n", "+", "1"}]]}], ")"}], 
     RowBox[{"\[Pi]", "(", 
      RowBox[{
       SubscriptBox["b", 
        RowBox[{"n", "+", "1"}]], "|", 
       SubscriptBox["a", "n"]}], ")"}], 
     RowBox[{"\[Pi]", "(", 
      RowBox[{
       SubscriptBox["a", "n"], ",", 
       SubscriptBox["b", "n"]}], ")"}], 
     RowBox[{"\[DifferentialD]", 
      SubscriptBox["a", "n"]}], 
     RowBox[{"\[DifferentialD]", 
      SubscriptBox["b", "n"]}]}]}]}], TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"=", 
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"\[Pi]", "(", 
      RowBox[{
       SubscriptBox["a", 
        RowBox[{"n", "+", "1"}]], "|", 
       SubscriptBox["b", 
        RowBox[{"n", "+", "1"}]]}], ")"}], 
     RowBox[{"\[Pi]", "(", 
      RowBox[{
       SubscriptBox["b", 
        RowBox[{"n", "+", "1"}]], "|", 
       SubscriptBox["a", "n"]}], ")"}], 
     RowBox[{"\[Pi]", "(", 
      SubscriptBox["a", "n"], ")"}], 
     RowBox[{"\[DifferentialD]", 
      SubscriptBox["a", "n"]}]}]}]}], TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"=", 
   RowBox[{
    RowBox[{"\[Pi]", "(", 
     RowBox[{
      SubscriptBox["a", 
       RowBox[{"n", "+", "1"}]], "|", 
      SubscriptBox["b", 
       RowBox[{"n", "+", "1"}]]}], ")"}], 
    RowBox[{"\[Pi]", "(", 
     SubscriptBox["b", 
      RowBox[{"n", "+", "1"}]], ")"}]}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"=", 
   RowBox[{"\[Pi]", "(", 
    RowBox[{
     SubscriptBox["a", 
      RowBox[{"n", "+", "1"}]], ",", 
     SubscriptBox["b", 
      RowBox[{"n", "+", "1"}]]}], ")"}]}], 
  TraditionalForm]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.6968962457453337`*^9, 3.69689631279819*^9}}],

Cell["In evaluating the integral, notice that", "TextNoIndent",
 CellChangeTimes->{{3.696896345501046*^9, 3.6968963573541937`*^9}, 
   3.696896709408244*^9}],

Cell[BoxData[{
 FormBox[
  RowBox[{"I", "=", 
   RowBox[{"\[Integral]", 
    RowBox[{"\[Integral]", 
     RowBox[{"a", " ", "b", " ", 
      RowBox[{"\[Pi]", "(", 
       RowBox[{"a", ",", "b"}], ")"}], 
      RowBox[{"\[DifferentialD]", "a"}], 
      RowBox[{"\[DifferentialD]", "b"}]}]}]}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"=", 
   FractionBox[
    RowBox[{"\[Integral]", 
     RowBox[{"\[Integral]", 
      RowBox[{"a", " ", "b", " ", 
       RowBox[{"kernel", "(", 
        RowBox[{"a", ",", "b"}], ")"}], 
       RowBox[{"\[DifferentialD]", "a"}], 
       RowBox[{"\[DifferentialD]", "b"}]}]}]}], 
    RowBox[{"\[Integral]", 
     RowBox[{"\[Integral]", 
      RowBox[{
       RowBox[{"kernel", "(", 
        RowBox[{"a", ",", "b"}], ")"}], 
       RowBox[{"\[DifferentialD]", "a"}], 
       RowBox[{"\[DifferentialD]", "b"}]}]}]}]]}], 
  TraditionalForm]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696896365909461*^9, 3.6968964146379642`*^9}, {
   3.69689647343808*^9, 3.696896488701152*^9}, 3.696904978658298*^9}],

Cell["where", "TextNoIndent",
 CellChangeTimes->{{3.696896493634716*^9, 3.69689649412605*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"kernel", "(", 
    RowBox[{"a", ",", "b"}], ")"}], "=", 
   RowBox[{
    SuperscriptBox["a", "4"], 
    SuperscriptBox["b", "6"], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "a"}], "-", "b", "-", 
      RowBox[{"3", "a", " ", "b"}]}]]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696896498611512*^9, 3.696896504915866*^9}}],

Cell["The exact value is given by", "TextNoIndent",
 CellChangeTimes->{{3.696904673207706*^9, 3.6969046786810713`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"I", "\[TildeTilde]", "1.4346109869758477`"}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.6969046803436317`*^9, 3.696904685551031*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"I2", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{
     SuperscriptBox["a", "4"], 
     SuperscriptBox["b", "6"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "a"}], "-", "b", "-", 
       RowBox[{"3", "a", " ", "b"}]}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.6969044485181637`*^9, 3.6969044803852377`*^9}}],

Cell[BoxData[
 FractionBox[
  RowBox[{
   RowBox[{"-", "43842"}], "-", 
   RowBox[{"43813", " ", 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"1", "/", "3"}]], " ", 
    RowBox[{"ExpIntegralEi", "[", 
     RowBox[{"-", 
      FractionBox["1", "3"]}], "]"}]}]}], "177147"]], "Output",
 CellChangeTimes->{3.696904554498406*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"I1", "=", 
  RowBox[{"Integrate", "[", 
   RowBox[{
    RowBox[{"a", " ", "b", " ", 
     SuperscriptBox["a", "4"], 
     SuperscriptBox["b", "6"], 
     SuperscriptBox["\[ExponentialE]", 
      RowBox[{
       RowBox[{"-", "a"}], "-", "b", "-", 
       RowBox[{"3", "a", " ", "b"}]}]]}], ",", 
    RowBox[{"{", 
     RowBox[{"a", ",", "0", ",", "\[Infinity]"}], "}"}], ",", 
    RowBox[{"{", 
     RowBox[{"b", ",", "0", ",", "\[Infinity]"}], "}"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.696904486591918*^9, 3.696904493768147*^9}}],

Cell[BoxData[
 RowBox[{"-", 
  FractionBox[
   RowBox[{"2", " ", 
    RowBox[{"(", 
     RowBox[{"541842", "+", 
      RowBox[{"506573", " ", 
       SuperscriptBox["\[ExponentialE]", 
        RowBox[{"1", "/", "3"}]], " ", 
       RowBox[{"ExpIntegralEi", "[", 
        RowBox[{"-", 
         FractionBox["1", "3"]}], "]"}]}]}], ")"}]}], "1594323"]}]], "Output",\

 CellChangeTimes->{3.696904613487631*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  FractionBox["I1", "I2"], "]"}]], "Input",
 CellChangeTimes->{{3.6969046564688663`*^9, 3.696904661291357*^9}}],

Cell[BoxData["1.4346109869758477`"], "Output",
 CellChangeTimes->{3.696904661770651*^9}]
}, Open  ]],

Cell[TextData[{
 "By use of the transition density ",
 "Eq. (",
 
 CounterBox["DisplayFormulaNumbered", "eq: 5557865785081713160"],
 "), ",
 "the MCMC simulation results for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "1000"}], TraditionalForm]]],
 " gives"
}], "TextNoIndent",
 CellChangeTimes->{{3.696905001887838*^9, 3.696905011770912*^9}, {
  3.697407715150432*^9, 3.697407752593494*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"I", "\[TildeTilde]", "1.435733"}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696905032811022*^9, 3.696905035227453*^9}}],

Cell["The convergence is monitored as follows:", "TextNoIndent",
 CellChangeTimes->{{3.697406418999754*^9, 3.697406438318684*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzs3Qm8rutcP34Zj5QUpUQcKnPInDFDhuSgpCJjJMopU4hjCEkimYsUMoYy
y5Ap81Ai4xHRYJ7n8vy87///s/ue69zPWs9a+1lr7/3s7+f1uvfaz3Tf133d
1/X9fKfrex17y+NvcJtTnuIUp7jTMd/+5wa3+N2fvuMdb3H3nz/1t19c5e53
vvUtT/Xt//z5d5ziFCd++/DmotFoNBqNRqPRaDQajUaj0Wg0Go1Go9FoNBqN
RqPRaDQajUaj0Wg0Go1Go9FoNBqNRqPRaDQajUaj0Wg0Go1Go9FoNBqNRqPR
aDQajUaj0Wg0Go1Go9FoNBqNRqPRaDQajUaj0Wg0Go1Go9FoNBqNRqPRaDQa
jUaj0Wg0Go1Go9FoNBqNRqPRaDQajUaj0Wg0Go1Go9FoNBqNRqPRaDQajUaj
0Wg0Go1Go9FoNBqNRqPRaDQajUaj0Wg0Go1Go9FoNBqNRqPRaDQajUaj0Wg0
Go1Go9FoNBqNRqPRaDQajUaj0Wg0Go1Go9FoNBqNRqPRaDQajUaj0Wg0Go1G
o9FoNBqNRqPRaDQajUaj0Wg0Go1Go9FoNBqNRqPRaDQajUaj0Wg0Go1Go9Fo
NBqNRqPRaDQajUaj0Wg0Go1Go9FoNBqNRqPRaDQajUaj0Wg0Go1Go9FoNBqN
RqPRaDQajUaj0Wg0Go1Go9FoNBqNRqPRaDQajUaj0Wg0Go1Go9FoNBqNRqPR
aDQajUaj0Wg0Go1Go9FoNBqNRqPRaDQajUaj0Wg0Go1Go9FoNBqNRqPRaDQa
jUaj0Wg0Go1Go9FoNBqNRqPRaDQajUaj0Wg0Go1Go9FoNBqNRqPRaDQajUaj
0Wg0Go1Go9FoNBqNRqPRaDQajUaj0Wg0Go1Go9EoePjDH7443/nOt7j0pS/d
Rx999NHHYXBc6UpXWnzhC1841PTQ2ANc4hKXWLzkJS9ZvOENb+ijjz766OMw
OI455pjFP/3TPx1qemjsAS5zmcssXv/61x/qZjQajUbj/8dP/MRPNOduKJpz
G41G4/BCc+7mojm30Wg0Di80524udsu5J5544uJ3f/d3F8cdd9ziFre4xeJ5
z3veHrSu0Wg0jj40524udsO5H/rQhxanOMUpFne6050mrn3sYx87vb73ve+9
N41sNBqNowjNuXuPb33rW4tPfOITi09/+tP7et2dcu7nPve5iV/xbMWXvvSl
xalOdarFM5/5zHU3sdFoNI4qNOfuDT72sY8t7nrXuy7Oec5zLk596lNPXOY4
4xnPOPX5He94x8UXv/jFPW3DTjn3uc997rR2bA5Pe9rTFte73vUW7373uxcv
felLFx/4wAcmXaLRaDQaq6M5d/348Ic/vDj72c++OMc5zjFx6yMf+cjFU5/6
1Im3HvWoRy3ufOc7L851rnNNfPzBD35wz9qxU8599KMfvbjd7W43+xmePcMZ
zrA4z3nOs7jmNa+5OM1pTrM461nPuvjGN76xruY2Go3GxqM5d/24/e1vv7j8
5S+/+NrXvrb0O7jqqle96uKEE07Ys3bslHPVz7jUpS51svfZ42z0Y4899iTv
n/nMZ57qqjTvNhqNxmpozl0/Lne5yy3+7M/+bNvvPfnJT57luHVhp5xLRzAe
rn/965/k/eOPP37iXDVURlzxildcPPvZzz7otjYajcbRgObc9eMud7nL4mY3
u9m237MOZ+S3dWI3ecuf//znJ34973nPu7jXve61uPWtbz35ke9+97vPfv/+
97//4h73uMc6mttoNBobj+bc9eMd73jH4vSnP/0U92TL4r33ve99U97Rm970
psUznvGMxXWve90pt+pVr3rVnrVjt+tzv/rVry6e9axnLe53v/tN8ecb3ehG
i8c85jGz37WO9wEPeMDBNrXRaDSOCjTn7g3w61WucpXFKU95ygM5y/W42tWu
tnjlK1+5p21YVx2qpz/96YsLXehCi//5n/85yfuf+cxnpnt5y1vectDXaDQa
jaMBzbl7i69//esT/77sZS9bvOhFL5r6+lOf+tS+XHudtR9vcpObTPz6xje+
cfHJT35y8fKXv3x6/aAHPWgt5280Go2jAc25+4cvf/nLi7e+9a2L97///Sez
GfcC6663/Ed/9EeLi1zkIouznOUsi4tf/OKLJz7xiWs7d6PRaBwNaM5dPx7y
kIcs7nnPe57kvQc+8IGL053udAd8y9a5WvO6l+g9DhqNRuPwQnPu+nHTm950
ca1rXevA67/4i7+YeNZ63Cc84QmLhz3sYdMaIXlW8q32Cs25jUajcXihOXf9
GDn3spe97MR/Iy52sYuttKZot2jObTQajcMLzbnrx8i55z//+af6jyPUWrzo
RS+6Z+1ozm00Go3DC8256wfOvfKVr3ygJuLd7na32ZoSt7rVraY1QzvFK17x
iqmWxnbHMcccs3joQx960PfTaDQajfWgOXf94C8Wv5UzdclLXnJx9atffdof
4O1vf/v0+Uc/+tHFbW9728VpT3valWpEjvjIRz6yeM5znrPtgXPFjhuNRqNx
eKA5d/2wJldulLU0d7jDHaaaxN/zPd8z1XaC7ANvL4T//d//3bN2fNd3fdeu
OL3RaDQae4Pm3P3DN7/5zenvf/zHf0y27l6jObfRaDQOLzTnHjp84QtfWHzl
K1/Zs/PvF+daZyx+zI9+3HHHLZ7//Ofv+TUbjUbjSERz7qHDmc50psUNb3jD
PTv/fnCuPRz4ya1BfvOb3zz5071u+7rRaDROjubcQwd75T3pSU/as/PvNee+
7W1vm/hVTlfFxz/+8enar3vd6/bs2o1Go3Ekojl3c7HXnHuf+9xn2stvDvbV
tY9wo9FoNP4Pzbmbi73m3OOPP37xp3/6p7OfqXF5y1vecs+u3Wg0GkcimnM3
F3vNufaxt5/9HK5xjWtM+xBthTe84Q2LG9zgBovznve8i0tf+tKLxz/+8Ytv
fetbe9HURqPROCzQnLu52GvO/exnP7s429nOtrjNbW5zkvdPOOGEKc776U9/
eulv3/SmN03fecQjHrF43/vet3jta187vZb7vB/7HDYajcahQHPu+mFvWXsG
rXLc+MY33rN27EfeMt7FlRe4wAWm2lpqXp773Oee1iAvw6c+9anpNy972ctO
9hmb176HjUajsYlozl0/XvOa1yy+//u/f6o9xb/6x3/8x0uPvVzLul/rc7/8
5S8vXvziF0++5he84AWLL37xi1t+/3nPe95UD3MOaklf4QpX2ItmNhqNxiFH
c+7egL+UHfugBz3okLXhcK1D9ZSnPGVxk5vcZPazf/7nf15c+MIX3ucWNRqN
xv6gOXfv8JCHPGTiPb7UQ4HDlXONt3Oe85yztabtwfSrv/qrJ3mPXXzta197
caELXWjKzXrGM56xX01tNBqNtaI5d+8gF+iVr3zlVCPiUOBw5Vy5yde97nWn
mG7l3Wc/+9nTe3wEgVxm7/31X//14l/+5V+mfSK83i4nutFoNA5HNOduLg5X
zgX6yAUveMGJP9W/lHv1fd/3fVNtq+Ctb33r9PmYj/W5z31uccYznnHx8pe/
fL+b3Wg0GgeF5tzNxeHMucF73vOeyXaVw2zPh4r73ve+i7ve9a6zv3vwgx+8
+O3f/u39aGKj0WisDc25m4sjgXO3wh3veMfFQx/60NnP7KVw85vffJ9b1Gg0
GgeH5tzNxV5x7oknnjjFU9V+lCf2sY99bO3XAPUjr3e9681+drWrXa1juo1G
44hDc+7mYi8411g585nPvLj97W8/1VoWixVzxcPrBl/zscceO9WHrLCvgmt+
5jOfWfs1G41GYy/RnLu5WDfnyifGdS984QtP8r69c9UA2Qt7V30N17S26GY3
u9nispe97OLHf/zHF//1X/+19ms1Go3GXqM5d3Oxbs69xz3usbjd7W43+9mt
bnWrqa7WXuBrX/va4h/+4R8Wf/mXfznlKn/lK1/Zk+s0Go3GXqM5d3Oxbs5V
q+LJT37y7Gd/8id/0nnEjUajsQ2aczcX6+ZccVS27hzw8eGS0/S3f/u3i5/6
qZ+a6l3zSdMH5mpeNRqNxn6jOXdzsW7Ofec737k49alPPe3DV2GfBjHXf/u3
f1vbtXaL5zznOVNb/u7v/m7x+c9/fvH+979/ev2DP/iDk4+60Wg0DiWaczcX
e5G3/OpXv3riMGtn/+qv/mpxpzvdaeJhexMcaqhXpW3qbIyQe/XIRz7yELSq
0Wg0/g/NuZuLvVqfq+7x7/3e7y1uetObLu55z3suPvCBD2z7GznN9iZQc2qv
co6d//rXv/7sZ+peX/GKV9yT6zYajcaqaM7dXBwudajuda97TbWUreW11pYt
am3vuqE2FT1gDm95y1sW5znPeRZ3uctdFr/5m7857Zmg5nOj0WjsJ5pzNxd7
zbnykuw3wG795je/Ofudxz3ucSerX/Hf//3f03vr9vW+613vWvzwD//wbFus
6bUvwgMf+MApp8p6Ym3odUeNRmM/0Zy7uVg35370ox+d8pZ/9md/djrUiMJj
P/ADPzBxmLyliq9//euL7/7u757ymEa84x3vWPzIj/zI2m3NG9/4xhOXfvnL
Xz7w3rWuda3pPe2v+Mmf/MnFda5znWlvwUaj0dgPNOduLtbJubFN+WWf+tSn
Tv933OhGN5o+f81rXjO9/vM///MDvxHDxavLwN8st3idwJ9qNGvLFa5whcm+
Pc1pTrN4wQtecLLvstO/93u/d8/qRR8MPvKRjyxe/OIXL/7xH/+xbfFGY4PQ
nLu5WBfnkvk4LGtzf+EXfmFxm9vcZuIsdm5is/KFz3KWsyy+9KUvTa/5ndm5
c7bsV7/61cXpT3/6yRbeC3ziE59YvPa1r538zTj3G9/4xuz35DO//vWv3/Z8
7OaHPexhi5/7uZ+bDmuR96Lt+tRaZzWt+RIuetGLTn3/wQ9+8KDPrS/ud7/7
TbXE1AzTR41GY3/RnLu5WBfnvu51r1tc4AIXOPD6h37ohw7kHqvJePGLX3zx
O7/zO1MdChx8t7vdbeIOB1vzN37jN052Tt+/+tWvvi9+XT5wudYjtO+0pz3t
tMZoK/je+c53vslH/dznPnfyoTsnLlQPeifA/Xzt1jLP6SL6y3l97z//8z+n
XOxb3OIW03s4c7d4yUteMtUIsR/xox71qMW1r33t6Zz//u//vutzNhqNnaM5
d3OxLs599rOfvfj5n//5A69xLj6At73tbZPsvsMd7jBxM1+u13zKeCM+6atc
5SrTd9/85jdPdhyf7l7ZuCPuf//7Ly50oQudrBaV+5DLvFWNKjqBe7/JTW5y
ss/sJ+izVfUGudJnO9vZpmue4xznmJ7Pv/7rvx743P/1FS5+9KMfPekv8rx/
+Zd/eXr/R3/0R1e845PiDW94wyxns9W1p/dnajT2D825m4t1ca56FzgiEMPl
Z8apZPnZz3726f3wL7/xhS984QM+5+c973mLc53rXIvTne50U5uuetWrLj71
qU8ddLtWBU7UZm3jU8Vn17zmNRc/9mM/ttTnHPj8DGc4w2TPyoemQ/C1O6f7
dD9bxVv5Ax7+8IcfWCOlZldgzwbv8YEDTv6lX/qlqXal98V0A2udvKf+5k7x
a7/2a5PeMeJDH/rQ4oIXvODiGte4xuQ3//jHP77jczcajZ2hOXdzsS7OZXex
U8lnEFsk/29729tOf/ktX/WqV03/T64S/ymeTV1I/GIvQPsCef0rv/IrB92u
nQL324dBLNr+gzhzO3zyk5+cYtQPeMADpvxsNSTFofUHPmbPj/nQAf/xWc96
1slGPuUpTznxvHuXsx2o5cUnD3zW/Nfm5Etf+tKTnEuO2iUvecnJP7BTf7br
ekYV9CMx40tc4hKTn1nsWNs+/OEP7+jcjUZjZ2jO3VysM28ZP5HJco3Fa+1l
+x3f8R3TwQfK7/m0pz3twPflUX3nd37n9JsaS1WzSg4WDpJfddxxxx3W9hXb
lp3rPk488cTpPXWb3a/3xIPnfOTxqT/mMY+Z9A/+ZKCT6LOsn3L+Y445ZuJv
tr9nppbm6O92rnvf+97TfN1pnU37LLJjg/iw//7v/36KqdOH4BGPeMSkUxzO
z6PRONLRnLu5WPf6XPaudUIXuchFJr7EqfiBb3TkCDalPX1qHFTckKxXlwoX
yf+9/e1vP71X45r7Ce2mB7zsZS+b7PCxnkb2SOBbr3Zx/OqXu9zlZs/Ln3zd
6153+j8frr4I1MK6+93vPv2fX1o/5rovetGLpvP+wR/8wbSGiT1KL/F7/c/m
3mnekzi7c7o/uPOd7zzF39UG8X7183teXZe60dg7NOduLtbNuVkzdMtb3nLi
g09/+tNTXYkakwSc4D35tuQ74Da+UXIe2Fg/8zM/M/1fjNWamJG3Xe/xj3/8
5Au2p8LoHz1YWP/DzuMz9vdMZzrTyeKzT3jCExY3v/nNF7/+678+3dNv/dZv
LY4//viJA/lsf/qnf3r23Nr70Ic+9MC9n/vc555ynkHcNr5155WLVSG+ilvx
vNwvMVwcr9+1cVnNr60gD077cb3nwDeO62vMGB784AdPuc2NRmNv0Jy7uVg3
5/7iL/7itJ61Ap+c97znPcCxuIQNrDaGmKR4IeAxcdCsj5G7bE8ikI8kTonD
A/5bPCXOyCbGBa6Bo9YBvOV84/1c5jKXmTg4MVOci+vAPKEzONif9k3AXXOg
R4h3B76bOtM4zVqp3//93z+ZnQmu7X11LNmob33rWyeeH2to7hRvf/vbp70p
8Dien6sFIkeajd5oNPYGzbmbi3VzLi4Sp5wDfpCr7DvWsspVwrM4TIzQGBMX
BXFD/FHXxfpOXuNlHHz+859/ev3Zz3528cIXvnCyD/0u9uPBwLmsFapwXblS
YtbW0NAf+HrlQaXOR4Wcsvvc5z6z55c/pR6m3wfvfe97pz5yD3K48V78vSPY
tWxS/ccHwAe/LFdrp6AviCmPcWF2+Jgv3Wg01ovm3M3FujnX+eZyZtlLZLU1
KXiFPWX9UPaKJ99TK5Ltymea/f+s88VbbOO8Jy86/MwH7TN+aLlXzuH1Vmtq
VwE78yEPeciB12ztS13qUtP6If5wsWb7FCbHesyhytof/w/Y9dYkXf7yl5/W
/LD1fUfdJ3Hw+973votTnepUEw/vxj98sKC7WCelPdqnbfLhnvKUp0y+cG2b
qx3SaDTWh+bczcW6OfdKV7rSgRzXILlEY00mXOk961DwI9sqtY9ip8qlxZ+p
jZzaGvyw4qRZk6rmcMAP6z0+0oMBPpUHHFi/6rx0hgc96EGTXQnWyoqhnnDC
CVMdJ7YxfYDPW23LQNzZ7/mixbaTn4Tj2Kv2XpA7VdcJBexrNqw+2qv6FNrK
B4Fr+erdj/bRZeRNaePcXhSNRmO9aM7dXKyLc62pvfWtbz3FPslpvuEg63LV
NArYcPJznv70p092boV8IN+3dtdfPmRrZSFxTPso4AdrVcfY4hvf+MbJ58z/
u0r+ru+w5fA9e5VNB9a78h/zGeM817PuJ7Fp/nE8rP3sP+t5/J5dnpoYgXrN
o68c2O14eivbka/+0pe+9HQdNTSdh19+nTUxa+5bhTVB3qdXNBqN/UFz7uZi
HZzr99bSqtHLJ8omIqetN8UV7FSx3AqxTP5jsl4bRlhfpJaENSm+W/2s/NT4
9MpXvvIU86x5Pvy4ro2Hcah9d7YCfkyusXiw+hNeW1sMfNrxd7tHNjx+9T7+
9ZmYp7yiJz7xiYsb3vCGE9+PdafYr/zGc/CZfQXmYE8l12BTh2Or3rEuvOIV
r5h85nOwpppu02gcDKxR55+iP4uxzOU/NP4/NOduLg6Wc+1fQP6PeVP4Sx0M
ebfqTLHlqk+UbcmGlKc05gXzReMzHMdHG1+tNbuB/RT4YF3b53J95TaJEWdd
q7yi6nMeEdtOGyvYtPqFDgG4zffsPcTWFON95zvfOb2nRiXfsP+/+93vnr5v
TdFoe8vXxslz8F05x3NQP3Mu71kb+QH4mtcBclAb50CnsN5aDF6Mm17hrz5o
HB1Qa00OAx1aToP1BMY9/Zq+aa5sVSNV3MIYutjFLjb5Uvw1Z7q2yjyac/cP
1oNa9yFutu692udwsJxrrctcjjCZjDfZTsnDdUS3Fb9lx3qPD7dC/o732ZPZ
JyE5WPKS/Fb8VJ1iPlbc4zfW16hbAYmd1n3pR/B5kwNzEGsWmwZxYXaovRec
ky2P49meeJRNzqYO5PbKr6oQ/+V7n8MVr3jFSX7NgS3Pbz8HezFVH771tde5
znUmeabWRs2H3g6uQZ7OgV5Ezrp3/fCsZz1rss29tjfCkQKcoG4lOb8fc2tT
EN3UGnRxG3ES/iXv4VqxGPrzsvmW39PVKswrenX2H2v8H5pz1w+2khydigc+
8IEHxnJ8s2NN3XVjp5xLVpl3fLBsWVyjBnCF+hSprZAcJNyU+8JHbEFrcbOn
gPPyCydPKTUj+aXJfOCbwtNyetiz+Y11OsmjUqsKv3m9Xb6PWLJ8oTlYn2P/
I3APsbGzRwNdQlxXrJmPvMpw/SJ/qoJcoYOM+wiwHZxPvvAc1NRIfeoR7NI8
O3qP8/ADs//laeX1KqCrGAt0GX4HfQjsmzy30aaWB8aXsWwt0+GExz72sZM/
xPjxzIyf3ht4e9Bv6VvyFwPr38kpuQvGZ2Ie6q1d//rXP1meAU6md8/Bufin
GidFc+76cdOb3vQkMTK+vfgqyUv5usY6XprLY10XdsK56hqae7iGzmu9izbX
vW8THxWH1P4nPelJBz5zT+onsQPFWfmara2hW9S1QriJjFT/Iu/x78pRNhZz
/oBc4INVO0nbyII5v6eYMPvM9XCFHKgxfytgJ2srsMNxbGLK2oXjrK3VFvpH
hTaoyzgifWO/Ava5vGttWbaeGdT5sP5WrpX+yvqn5DZZM5UctVovBKyhxS/b
+Z8TH6AH+ps+FsPWT/Sq1AobYf0QXfFwRvS95KnhBL7RVfSyQwV6W/bakENw
KNaNgdyBWndU39HL6GL0XTGfrIWjExsv41pB+YnR4UZYH8c33TgpmnPXj5Fz
2RZk6wh+wuTz7AVW5Vx2HBlV96WH1ElK7BOXskPlJNW1QWKCfEnsVvHdcAc/
pe/hDfpu9gog733HfHYufmb1JfiCl+UibQWyQm4T7mQL42z2uWtln8Eg9ZOr
Tzd7wquLDDgv/rTEpMgcNvy4JrfCdfmAxXDpHlvt/6PN5G70EXnRYtSpV2Wt
kX51X3QHOhB9rdoZ5N1W/cX+di7+QhB3468WMxCDF2cWf3PeOXjuWTO1X6AD
4XlynL9/K3zhC1+Y7i/ruiv0y+jvPByg741/ef76N+PsUOQc0RNdPzBe8Wqg
/ij+DfiGxr72nMSa5kAPFxdqnBTNuevHyLnk5lzdeHE+cnavsCrn4h/zaw7q
XJAJ9mZ3X/TgY4899sBcJDfYW9af2huOLBcDlZNT7TP2lH0P+JpxszWigX1v
9I/v+91O4Zzs5xHZc1D7rFESc9U+vDhCrrI+0Ge+z/YmL9xLtQmrDb4MbFY6
/h/+4R9O/t+5Nbf6M5xODlurFP7F2dn7R+1McdZwsfESXzeZhrcDMhO/8hmw
n+h57glv6osKuhFbHzcty5HWRvewX1BPhH+CLpGY8ri+qQI/83n6K5bDvhVT
YLdZtzXWGTvUoHe6p9GupZOTFwdb52WnEAPXRxkb2UODf4q+h4/TVuNefHbU
Dd71rndNMiH6ahB9aN010jcBzbnrB26SH5NcPzIk+bYVuGasb79OrMq5bKoq
u4Fd97jHPW7ykVq7w6frHtiqyd/BJ+aV2BlbLDote5PNXOsNO4+4ojwM/ChP
WP4FnzZ54zx8bbuRO3KLxjWmbLy/+Zu/mXKl+Mrp43ScOZsocG0ypdqSbFoy
iAxZpW1qW4gBa5O8r9T6SL4YRB/J+NDX4g/yRO2dkL1s8TZ7qOYc822rbwXy
ovjJwTMk+/j8yVG/1wbnSm423U88w+fe83trtdjY4urum4wlez17v5mrybwX
wK2uV/tYv6QO2Jve9KZprOhf49B9mTv0I2vV1PjQV4kJ8GeMPo69Av8+vcgc
4jNYZrPS3ebiIu6Zvrqu2p47AZ1Kf0Uv1I/a6b3IDuPCa/XW5/DMZz7zwPdx
SfbTWFYX9WhHc+76wV9szMlFEIeUU4SrYsOZW/gI96yzTtSIVTlXzLLGXcwx
9hV/Jt8vOR4fmJwff+X28o2T/+HMcIjfu186RcD3nNf8vmQjWc+vnBoZ2qvP
lvlul2HM/2X34p/rXe96U0zV+cWE9xp0D9cabUP2Dds+sV19F/0kNSflN7NN
2WrsCQeOcU48mZirXDJjis0e//5znvOcA77xxDdTBwwfPfnJT57+z8bXBrHg
xNZdQ+0tr/WZ63omdCIxgXWD34PNjkOzztlf160xa7zPN0zf0xb6QuL/+o6d
nvqV8SmJs6fWivORbduBHiheop/s/UAv20k9EnpR9pSWB+DZzMXfQX8vW3Mj
DyAxgBF0D2us+Ybw2TprlVnXRy/VZvqctWtZm+6e5BfqR3NpK8gHFXsRH+IP
0i+NeTTnrh/miNwo8k8tQ/KUvBPfBDlEqYWwl/6kVTmXLYMTyEFgczgS583a
U3PTeh66AxuDL5QtwT4dY5d4hM0W+ZW8IHu981+RMZHz1Y7Dkeoxze0DH8gL
0g77CJrn7LlwWGLIfIv61v/J1XGtLl5nC7n3VdeWsAH54cg9dlZ86fI78Zg8
pTGnOdCfuNj1yLH4TOk69f75392Xfsl+f8kvJs/YGnQVHKQOpvvwHLJ+2PXZ
9+CvMeC3bHXylH6CI7znb/Vb60fn9tz40r1n/6d1gd7FLjUf+Midn+yhK7Ct
KsQO6V/Z7yI5aol9uy9jNnXN3Je/1uLxM+W7vmNszOlxGRd0EuMl/gfcs0pe
k1wo3x/tU89TfsJ4Tfc4J2vdI56b8ymwmem/xoR8RnmYrjmXT87GNkf5mTxr
uthW4OOgX+kffhI6TnIJ8L88fLbqsvVsO4V74Rsz/l3jcM1x22s05+4fMo/N
7/3wI+0kbznyBy/4nbgYWVdrVeBBHJN1emQT+9E8qr5T4F8lW52TLSXuS4bG
rs26KTG8Ue9gXy+rR8i+8Tu+TzISr0S+WptA3ojvkXfizvGH4URc733xUnY2
/hdHxT3brSP0OdnHHsr1+KzlJWUvBPFP+hRYH2S9Db+j+5cX5DrWPsX2FgOX
N1pjxL4jlslXz1fgt0BeyWFzDTHMyPP3vOc9B9Y9AX9xdCf9yt5jJydW7Pm5
d7qJ2GnuJXsFZg00hLuW5cjM9RE/IxvHWlnwfPh0tCu6UBD73DVxfO4pa6Xp
a/rRZ4nv6jO6Kh3PveU5ZEzhY/83/uTVWz+U/TZqfezogGLfOM+z8uyMZXGR
+O+3Av1mWf6ZsWKs8kvYj1FsQnzDuUdb1zM3bkf7OrXMzaMK9+V9/okg+RDs
TfET89fr1FUdkbrlyY8M4gNhV68Tnhd5wSdB942fht5ypMCYYGvQp+j6r371
q3d1nubc/QXZuUqd4HVgp+tzyerjjjtukmXGVs1zCvCFOU32s8XYetbt1fmT
fXjI0PitHHhEXg8eYpeQn2TjuH5VTGmuXmJyjuVtVKTGpM9wC/8ifyQuqhyC
Y+NjqHYC+ysyDP9Zc+j6YqU4gqyOX0K/0BNSCyD7u/su2SnWSE/Bbe7V/Mz9
i+2yN9mo2dshnMEXiUvZO3Sz7FtU99Uzx8c8M9xWa2/qe7lVYKxlraVz03f4
3dk3zqO2hnbIE/NaH8qr8nvyn/3p+XjO7Huy0ufkDR9s9Q+w8X3PuNA/zke2
GC+JGdKB/MU/gX5juxlDYv5AnxKfkX/DHub7jR2Ow7IGAH951tHj6FT+enb6
3zhlT4lda1eNn9AFnI8eaYx6Tuw94z+5atvBd5bJTjypP+ka+t45cWX0GPxL
9zOerG+ds6vFcegMc6Dn8aFB9NCxJikdyPycy0s0xvX7HPDwOtdTJC6vbyvM
Y++PdXMOR8gVoB+Tcdqtj7Rd3+8Uzbn7C/POPNgP7KYOVXIXyeUR4kjkGxmC
l31XnCdyzl8yxN9qu5HteK3WViZ72Aj03jGPmF9MXMzefWR57GoySh71HHBp
9vpzTnq/eeI1nnHdrFXKnnwV+ASXkOHsF7yZ8/Gduy/nYDPG9mRH0t0Th9Nv
uN5vak0GHOG9rJGl47un1Pdw+B0/buSmuGtsU7qJe2LvJcbK38wXEFsu9kxs
RHLMfZD9bOucK/mk5LX7Syw+NmP4C5/xddKT4q/ApWSOdVD6Acfqi+TQVBs2
eoyaI+y81ADFn2R9+Jq+5Tz0g9indAR6gPf5WvSNduFs15cfAXy17oss9P/o
Kb6vfexE/C2PgF1bc/PFzvU3nWNcx23OOM+y+GogbuneR8RXH58HJGbu3GxR
Y0D82D3RP+keo51r/IrjGwtyIMh39imI1+tL4HMe65EGdMK5uhTWhvPLz4Ev
eZ25ndpqXs2BXn84rumqyL7do14knmP8zMmTrdCcu36YK2yiucNY5v/K62W+
qXVgt7UfyUkyrMZUExuNHVD9Y+Q++YUn/Y5cwAnsWfICR4+1kePDY4PIKQpi
B+DAZzzjGVMcy2t8b13LslxI/kzfY9vW/Eq/8z65TD6Tx2T5uIYhNvToR43/
k19Jf4xrkvhkcTqIg4ZDvUd2kYVes6Ncn183eTbsVj5F/m1HbO/0Na7l+2R/
0W3ktOBUvOPZ4tTkETl8jluqv52+kNis83sOfMqecb4TG9dYwa/hULIBjxmv
fjOC/9RYdw98sxXGAf8k2x93seXUrVDnrOboVjudTMseg3QAbdTn2qPf2a4+
c808l+gDDjkE9KroD9og9w+f8bm4j8BaGFzLDzACh9ERluXpBumn6qfx7OgJ
3h9rJZKz2hM/g+fFt4SDo+dUuU426Dfnow9mL0z6grzH1FkzTlLPbQS9Lr4Y
eRnmE92DnlZjEhXiuMvqc+8GdI+6hqHCeF5Wl/RQwVgxx/hI+OjNgWX11OVl
LKvtugzNuetH5KC5Qpeth9gSnT2v1frZKxxMveXkXpuvZAN/KLuIfIh+PQK/
sqnIAPqf+U0G+r/xO4L9EX6lK7KHvcbf9PrYfOwrflnjPzbOCP5Ba2DCsfKN
zOfkVDn0Pc6LvJY7Eyxb4wt80vyQIFebnRewu805+gXbjKxmY+o/+pW/ZHts
SDk+4Dvew1upd+z+cQ5+1tdsSDLXeXBurW1d60+R0+HN2LP+7zx0DP0S+xW3
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
0Jcz3/NMM/7TjoPZh7A5d3OxW84VxzLWUt818tBcMQ+3yvuPTzJ1HXFPdE1x
Q7q/8+GMzBPcg+OdN7Zp9emSU2R25oHf45hRJpv7+CG2NXknFwzfjjkT5FT8
fORZeM48dj18E17kp8z6G/4t/m7zLnJDO/SLdoVn2ReZ9zWnqXJF+peuHf9y
7D/fic6fI/U3/T97EzhiJ8nd9sxr/rd2kdnkrvbp83G/YDYvOeC38YXqj9S7
JI+zP1E4wLnpSq5ljKVGHvtcfmdq8Sfn09r01FgyDvCiHLbIef3mfus+THk2
dKv0ZeKmyQeOvHVorz6CxNtTL1puNF+99stVCA+QwfjYuEnfs+syNpPn66h+
j3pUH8fcYQ4kf96BN9lxfDzGmPwc1zPGXU9OlD7EOcYWPTN7dTnohOGI6ALp
H+971vmd9+s8q3mE+Dg5bPQ562vTL6l7jmv5tHw375t7xjQfNf1Zv47+ZePF
HIhPy8Evw5eiffIfMjf4+dMuc8pYiC8rteSim+Di+Kb4FjIGol96FqlXGl90
XdOsf5zT/CdPshdzcuzoCdEVxnhGbF3H3PrDVdGcu7nYDeemViH7jkzIGrbU
kUodpTmwT1xTzIyMIOeMLXLBXCH/Yn/iND4+OmVyNoxl+iTbDU/S1eOfMycS
t4r8YTuH2+MLMk+cjx0sXsZ3qlZCOCc5uewJNpZ55B7JWb+v8TfXliuUeFDa
KA5U9V7txCnV5+nga9cHzpn5TeeOb04fhHfHI98hu+RfyXvWLjYhP1ndgy/6
AP0990d2kXf4mHzzLMkeHDfunRgbRTvFqvVL1kR6lnjJb7U3NlPWjogXk3PG
SGLv7BbXTZ51fNZsztQIDoylyETyP/1E1le+oGvgXu9Hh6m2jO/xnWfvO7l3
1V+S7+C1rNPxOf+6eGPst9iwctfDa7mO79X8qTwfY6zWABmPasPr/+RB00GM
vaz3CbI3lIOvCAelFotxp93mEh73XvSW6Kve8/xxbvaMGPvL85L/rC+Mb69x
lHuOL0lfV5+I8YS3o/dkT6ZcU1+4nzyzmrNcebxyMHmS2q31Wfqb+mwOfgH6
sH5wXeMv841sIkvoAnQnz9I40xbjIefz7GsfaC+fgM/5gsxj8qP6K8iJ7FWa
ezZOE3/Qb8tiW8twpHKuHJ7oHKsc+wmyYdV2Jbd9L7AbzjV+jOf4qWod3ciK
ubp2kPUwQJeMPzp6qfaQx4k9ei+1m3FW4prsVXq3+WieZD+gKr/iI2QTsJnJ
B+dmz5oj+Djr/fhi6QPkkHkWGVXnn9/WGo85yL/oG5mTOJdPrObg1v1szGGv
o3t4j+6deBg+SzwtcrReM7I+drQ2AP5K3/MJkA36TZ4WLvf/gI6TWhvmd3Ke
s9bF52Q0ORvZ6D7oJ94Te0/tHfdM1lQ/X2pb+0tu43QgR3Gocc0GqnuSJ54q
xhvgXO+JWYh5pq6J2HbanOcVf0ntZ3+tA4s9hY/z3NOvybMx/vKbnCvjKnGK
6qPP3hNzh+dW+WSMJ2+lR+X6ctRT38OhzxLXcNBRMvaMAfyrvexHfmNxaK/p
nRkzNYcocU33YW7hj7pvs/kZf07WG/tOzhF/SV3zG/04tVeMmeg05gOOT97c
sgN/GjNkTc1bylHHWQ5yQp+JydZ5m3GQNrPHtSN5iLmHxPTJiqzP127crA/p
U/Tuuk9V9Pe8potmzuszumpy2eTer4ojlXP5rlKnVz/Lu9zq2E94FrgHP5Dj
W7VrN3ser4rdcC6u5WMzR8VXK+SFmitkYPaQrSAzE1vFfTXHLzWYEpOJLkln
5peK703uTWoqO/hc5UxGzpEZ5oL/0zOjZ+fwHl9Y8oWT90oui9UlvhYfsDWd
4UJ6dI0RkQfhYPKbvUeOgXhS5rJ+5hM0j7JmMjKIHeh6ZLl7jmxwH2MMNnKT
bpN6e+y75Ca5h5ob7FmkDmXOwQ6lX5BbZGriuGzO5OzWo/rPIo+zFie2VWRx
aisknl3jZHx7+JP8Z1fjj9ThIves1eDTZn/6vlwYz4PsZutnHxgy0W/Y2/qr
xg+W+Xa1MfyS/k1+F785u636BPK9as/kPfxkbCeXNbwSGZ3nmhqC2bN3laPG
DB360/jNGEtfO3/NXYjPQV1D75svnrN7ju81R10TXTmJrum3nnF8FQ72ecZA
jVOTX2Ie0XH5UuMfyPP3LMc+lOs31gYb20NfHeMtxgzezz4VdT11+t24piv6
f60pk6O+F595DvdhzvprTiTHWR/iUuPXfK99U+cI2zn6T2Ly9EOH2K6xTk6t
giOVc8EzYAuZJ2OM6lCDDmuO8QMeKuyGc9ki+nSsfwTsB/m95ORcDoHYHf2P
zUEPMn9S78h72VvOuJUPKZ8i8bLUWKbHmgd4ptYaTsySLhA5kPqMNdZlzgSp
l0EXpdtY+yCO5t7ErswjnCyXRTtcl8yK/NYm84stV7mJbKjrMSNLI7Mi12u+
iXvHYb5ba18kJpVrkoGem7abz9rDBtO3dc1vrdHk4BvAeWQrGe6c5oS5kf3s
2UW+W2352Aj4nEzxWm6O3+d71a4YdRxHbPaqr6Rf6BWx75wTn1l7xIbm08Qj
iVXQtfSRexNbSLydDridHUkG0vEqr2XfRHnrXvOBjzVFIt/re1kn5L5j65Ln
4tjhtNoe3xvvPbWnfE8uVs2TZv/XPqUbJU4/d/CP8iO4fn7nb+KQ9bvOXfdP
dtCN6pgb+xJfVO40b/VZYvR5j42QPMN8n7/YmBnv3xF7NffmnHPPMbau+eIZ
Za1x8hFHu1euVc5T+7HmK49H1lgZ02SPcZdz0Lv9rX0094znzpv5yLZPvczt
cCRzLuA2sq7uhXq4QG6AeZF8kv3GbjiX3EsOQ437JQ5Lvyf75+ookHHx5cQH
4Ui+ROI5434t+MWccE1yhb+Y3KeLBllLm7mQGg/sZ3PTgQ/cszydQJzGnMc7
/Jd+4zzJlSSPak2AxKUyl7L/Tl0bOMp6czU1g+vcH2N80e3HOBfeJd9wf2wI
Ml57tSX53Q65wKmN43Vyr+QjsYdwp/PxOeDp1PXFa/gCN/P3+p12imexm6JT
8G1Eno7+yrS13pN5V32J1Rb1LLMOk/3jPfdJ3+FD1R73aVzII+DD9DzsWee7
dLzY0pUr9XnGV3J3a1zT8/K5MRt5qv5E+pZOWdeF6NPI9ypj3Uu4JDWiRls1
R8a9MTjmNdc4pjZEF9TPzlfXs479mPO6/+oXobd45v6vja7pHlJPLd/TntH2
5S/Nc6zPc8y/rs9Sn2dOGH+1Jkn1Y1c9rdZZy7rf8QifOl9tC9275gLWo8ZX
c4x9Ph7RTTz76L4ZK/Wcy7h1PPibjKHUuvbeslrNI450zgU5rzVGdLjA2Fev
Ya4G6n5gt3nL9i/I/MFVcvxSfy91aMd9X1J3V86R+ZIaCJFrfD3008SJ6/re
7AVS9/4xlmteCVj3Xsc9O1eui//H7mSv1rwP8ZrIa35PtlPWuZgzODl+Qge5
VfVl9jEuC7fF36c/4lc0TyPvxrlJjlQ/GpvQPK9+2ZxDLYAqd+p39CEOlY/E
HvCaLHVvxj89Rn+JK7EbcASfrfMZh1kLBfqefCCPxeCTH81P6TP/j77gPpOz
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
O66XHObo/qkPzx9lLVJq5cTnrC9SV7D6wuXS+n9ynjOP46+J/zJxdEdyZFyT
PpHauN4nd+j69BTPg6zj3+fHI+PlpPMlOD//qN/huDxv+kPNv56TNfh5tInq
feWobc6hD6MP0HXEnNOX9cD/4g3V9pc7xscx2i/6UX2c7MewTGbOyeOaV5tj
TpeoB11llNX61HjVl9k/x5wA/gb3yP4WJzTejAvjlI5Cr/Jb/WJcGke1rVlv
pkZJnWPxq3uuqctgHmRtb75nzHtdubveo/uJnjI+69TyGu1Cz2Ds67n+Nefj
A88xxtWX5YGP16vrq/Rp8i9G7uYHGNuLk+fiDqMfof7O81jVX+/g+1gVm8C5
bBD+GkhtfrII1JA3xrKHxdGE3XJu9lEDXGa8Zj95czicRX9P/Tf8nDxRr+N3
TF0M8lbtHJxpPMdPZU6TfdXWzdqY1KHE8XW9O98qnT58XPeFiU80e75Xfq0y
LDGi7OUyyhztI0sjq/B/rSnrHoy72Pt4iH3NdkvsFx+YX5G7fKqJe/ncue3/
Qx8UD9Rf2Yfb77L3kN/G/+q+cw9irTU+l3WL+sdaSDpC/MpkK5kSG1Q/+Q1b
hJ4QX3SO2NLVxl5mF1S7e6tjzI8Z5XP6Ne/VWh/6jK8vMrtyL/1hzFsdj/DT
+P5Wv1u2/qTa8TVeDf7vefmOcaBvjTF2s3lE30luhO/qf/ckni3+YX8Jc0Q8
PrFF/qDsQYSnrfeiB7LHq77oHOH85Fclxlr3dnboi9wffaByWPKLct6s+c5r
56++8ewVYY66Xr1WvhPb0pis46XuZTlyfs0Lr++ba6mNNvd8qi4lTzljq47f
+v+6P/Ko083lYPGt01Ocw7kd5tmq2ATO5cf03Nn22etCzM+YZ1+QL0cjdsq5
chro3/Tw7Oll/bhxyP7zGVvDnMIRYPyIvaVuj+96L7KMjpn6MXXvN5wgr5Ud
beyyAaxjTr1BMd/E5vBn6hZn/oXfk7vCn5HzZ64mp4otoc2ZT3SKxADVqmNP
VRlDDkb2j37dnL/W4arxncS4fe6cfJ9yw+gP+td5xb+tcco+O2SQNhrD5i77
r3JF/iZHu7bFPbnPyJ98PuYH+Y42RYbWc6TuQ/T65CnxI4x21yivtjvqXkp0
MZwy7tHmqPsEzPlYHbXmE87A37VtO7FLxn4cr+ta9TX/QcaVGHPlXdzn2sYz
HY9+FPu9rn3ONWutiRy42bgA/gjj3Tmc1/MyH/w+uml04By+E/8wG3SZvhC/
SI7sK1j5ha9Dm+m+c7UZx6Pah/qMP2v8jmefHOHEXesYTS2xcZ0Qrp9bp5tn
rd+ijxur4dvsSVZ/M5djX9dpj+Nt7CdxL7ZFXducfSS8PhrqUFXUuBnfGlg7
hj/kJByN2AnnZp7I/7FeFtfEz2juG9fGrPeNU++lNm7yi7OuiP0LuKzKQXaL
eYFDjd3Ue5cjkX27xppwnh+/TfaK9R08lr3PQM5WahhE1rCJgN+Dz1R78T/O
I898R34RyJdwftznnGJRdAG1Ese9WDLP/RXbq/p+bJ3AWinvqbdlPtILXMO5
6crGKT+7dal0DfOdnKvrX8icMVZVa/ZHRrz3ve89SU3k2BLs17o+NJyQc2Xf
9pwnOc2Vl+UTRfdIX1S7Z7QFsi4qsig1IPPdZfWlwxk1DyrnwCPelx/HX+4Z
aEOt4RgfamQrPcbvKu9Hn6gxVHITb87ZTfGhhsecP7nkqeeb9psjxjO7G6/E
fqvrjHPN+jxrXQx62pgvnN9mDyJ9EB/AGAOpvDLnT82eOzUukvvLdd2TcTin
W9UaHXkv+/jmNZ2i+rhdQyzKvJrLS8tv+W2qDVzvbawxpa3WyrGrtF2Myvf1
T3zwdOtV9cNlOQijbpY8z1qLWw0Dax3JiuQqbIVN4VxyLHkrAVl+NPqUg1U5
l//YXGV7BqnxWu2/6t/NfI4dREan5g/eDchR4944Y5dk73i1FzKPMs/wpPhr
5ThzIeOTLW1e4frMJbEsc45+VeOM4x6x2WdBDJWfC+8GYofZw4sPnHyA2IVz
6yDZHeSOuc/OpxvUnAK2CtmcOau/fJdcTN4n//24Psj9RVaPsplMqrLBNdMP
tVbDXM6M3/GHiWeTp+RffPN0JvHCygEO5yFbsu8Q2ZrYocN9V7lY22asyJur
+zUsqytU1y5pd+WK6EfhCf4CSL1rY4o+Y8zgXnUUxaddV9vTp6mZW/ub7WXM
1FzycCQ/b3RKNrWj+k3T1uiIsa+yP1XGsBoldK3oWGP8ms/Y90dOoQO615o/
HJ0A9+d5Jw7Dx5x1xGOMdPSp1liseZtaKdrg8zHO6ftVr6o6QfVbjzyZmKjv
h6PkA4i/1LEy6iSOOf+SfEJ9gdO1k26f3BDj2nXIF/64OtYSV9mOd9Mfo49A
LWb5CbUfzQXXk7MYkJ+rxHU3gXONzWXrcH22aj7ZpmFVzqWXGJPJQyJj6dK1
pl/mPT4IJ/Dr8ptGbmevc4c5xi9lnBqbfKn4jD4YbrbWxtirMiAxXv9nl2Zu
ih/4K54cn3H2i2HLiZFlbWxkE16nh6ndG/md9bBkNduGXQJkY+aStqYWv8N9
kAHaGZ8z3vZbdgPbiWwhq4Ad5jtiGvpUroHX47xP3fnUdQ8PRM5X/cP5tT38
JG/IPWxV8y79U+1idRf9ZePTP9iw5HfyeOqaExyv/cnTrvlbczJMv1fZPNoO
eIQfXn9UW15cYW5PQ7oO7qt8pE3h4Yw9+o3r4h/2n+9HJtbz0QHCBfmrHYnz
eu6J0fHxQN0zrh74OPZ46jnT1VLjInWkfMd4cA5/6XHhxOSIeT2XS5b1dVk3
laPqYXMc4aj1Hsc9Cev/a66+w7mqzquuCtBZkwe41VGfv7hN3acnefHL6kDm
0IfGaWz/7LVd5ULGFzlDRzNHfYd88Xm9rvnl2dY9Q7e7j4xnf11XrDI6uPPF
XyA3PRATqnWBlmETOFceA7tjDtHRxSWPNqzKuXJ4stcVHdHYFL+NjWsssx0S
A5WrUWu1kB2RockhSn4/OUsXxBHhFLJUfNf5UwvBwRfrN6ltn/HODq75wd7X
Tja09RpkE7sn9eRwMLnErjE/zE2/tfYocopcTL6mOcBPknpHDvqGeFBdOyPX
NhyBc/jJ5C3lc2MQR4gH+12F8ae2RmyGKje1Q6yIjzkygcxgv6XGbnLS6BZs
M7ww7v1W5Qy7yj2RAbGvvY9bq+zFf4mNZl1NbRt71UHeVr+g74z5y2OO61iD
Is+PL3+0w+fWjtCzIGMnvnO6RPQ2feAe6++0q9rj9cArYsdyB6JXOUeuUfl9
WQ0jdhZ9zriLrhBfLb2IbPYdPnzca123vqBvjHpI7dP45JMD7z3jYsxvq+eQ
P5j18eORsWvs1Fyr6FXhtOSYe3biPny2Nf/J534fHa6O97kcNNcV68vek+MY
qf07F4Onp/AfVO73TMmN1IHM70b/QHxSVa4kb02/0re1YazvNdfGujYyc8H1
o/OLW1XQucmI7XCkcq5xTW67T2OZLPP/ehj3dCbjZ9k+65uMVTlXXoaxGI5N
/QjzPbWH5L2AHB86LxvO3Gfzku/kupikfrZXvN/w+/irHhjgxYxfthVfW3xj
9FCQz5GaBdHVY1/5jTHvvviSXBuPBmyPyLBxb1y5vHlNdzAP8Uz8h/g1cq7a
Nf7vu1lrVmU5WYYrzGXndE16gNwzNqTxRwc3V7M2hz6O4+SKWP+QvBJ+8+R8
uH/nBj5zzyC5qPW+UqNDP1TZZz7QNfjX2bOV88a933KoFSL+Gc6cqxtQr+2e
5vJralx4jIPXGG+OWpe4Hn6rH+LfqJwsVkpPoVNlbFQZWuU4mZw8hPQVm4U+
o7+NP2PW66qz1HPFP+q7xmTuo9ay5H/0HT56XBQ/tOsn/q+t2b8htnY4w5ip
63Vrfruj2uwZp97Lno3s+/BJ7tN903drveT6jPx2fIb8hdnnOH1WbebEkc1B
3JM4CT9RdFKfqTET251vQhvGvYdqLe1xHwZyRvuq3z1rEGoMeu58ZIR2Ws+d
GITzmz/s9mXrwbQvMYLUcY8eSoegayf/q+5VDVm/qIb4djhSORf4DNlX9EDj
w//rwf5iD/FBHY3YSQ5VagOzxYLk2pDdZLDXDjavuEXdRyNjjo4bf7LX4sJB
6keZG+wuPEF/zfqRWou4yhn8hUdq/SPz0Xyng6t5I0/JZ2xMXO/8ZELkTeRY
1m3j7NRviA1oHLHR+VPFxshYXMonCGQzn4rfJDeHzcTXyQYjw6u891v2rbUf
4UT+eN9VU4kPAMzl2HDuP3IydXDUx0y/eA5kbuLtDr7txH7jB9Au5/esRp6L
DRMfsXzvyOPUGnGesdZjjlq/yMG/UONv1deJd5KnW/d5r/aOfq7ys44fXKpf
6Ez0FL7EWtPXs0s9z9jdkc2JG3im5gJeCE8ZO9aOksnZ436Mp+B89nT2wEic
03g1VuhD0Rn1VexifS+m4f/JgSCP6v5QdXyz6+g8c309HpH55lnGWvrCGBqf
tb6o9np9bvRB9xAfKj0AUl/UuEifjmu86jzNWj3zI8/eODfOPB/9PvJj6lSF
8+loY43HGteP/7/We6v5bcafdkTnlqtgfxPIc6u5gn4zVwvFXz7i7FlgrOD8
arNlPR8dldyjL/Fj1FyirXAkc27A1iGXGyfFTjhXzb2MYX4YPkdjzVxLjFVc
qa7X4LcP4sOPfeN30YH5R8m35E2ZZ+FiHKjeQZUd/ELVZ4uTci6+Dah1i5Mf
xYaDWjOKPGZ3iC1FHsnLBvY8PpN/TH6ZQ3jaefAV2UMGywfQj+Q9/bnyarhU
HSu+l6qvxz62nrLWqQwn4Dt5jnzq49rR+BxwX+LnkRHsF3yQtQp08+TC1HNU
H6RnS/6T+/wa9HG/d07ncPCts8fFJ+u+cbUubY746fL5yA1jLlTqNpNNyUEn
H5NvpC/0Vb7nXrJXkLESm17eTHyt5rxn4/9ywtwDnnUudpI+V3tTzI2eRpci
79xb9kaueb7GnfEQ36G2JZc9zyC8F8SXk8P54t/E4RnX+t8Ydl/1mmP9lMo5
q3Dw3DHnr61jI74DXMiPnPa6V3qxZxv+yxiZa1N97ZlkvDlvdAhzz7nGeom4
Pvqh/jD+jbsxBr9s/ZfnaExmv2zncy90WXKKzMKd5rRzRn/MPNuqf41dYy92
uljICDU/yS0xfLy7k5pLRyrn8qfwx616HI3YCeeSw76PA8wXssz8q/vc0SPJ
y+jNeCy/9TrrwrMfDPmZPOEqZ+K7YqPyR/PpxL4wj8if5JeII2Zu4nt6c+wF
nBl/VfTw5CuRm6nroR1ZTyTejKPiPwe+b5/hEHaPsWWdUJUt+LNyCH8hkEfm
O3keW488T15Njujz5A/9pn7GTs39Vt1b/EzNjNjhcoVclz0tlsgvkDZlD76R
A7O/aV7Lk6VLaGvNS3G/YgL6ILyXg70D4YXYMrhnjOlWGRl/tO9E5vK9j3VK
6C3ZK7nG8rWPrBQzjQ+APCVLyfjkFuFhfgv9bn0IGWsMux/jILlq3tc+z8vv
EgfOHny5Ln7Vr3SvMd8mPnfPzPqscR00m5lfLePQM8rzYPtlvI4cux0PzOXx
zvGpQ2yaX2Bc51z9+OKzUGuoZu95v8ta9xzZwzOvx+eeNojDZj1N8iXwkWdl
DNTfuQ7d0pjOvlOjPz1+5cQOzHNjIc8w84JMkCOnn/hDai25PEPrE+Nrrodr
Vhu75pE5B/kQX9c6cKRyrhr59NRVj6MRO62Jwcapa0z5U8KV5hF9jx2htpd5
RC6JF4qJ4hTAZeEB9qP8DuOZ/zVxMFxu/IvPJibq+3RTtkH2rxQ7hdR8yPrf
zA08yN7TZvoumeB7bBX3bi6CuI44BBmA08l89SkgNXGjQ4jT4MToEWR01n4b
R9HlySYwn7NmON+PjK+yMHqKewB9MNaRj2zgq5V/SWdPfgs5CrjE9eg/sVfq
wVYd15lqt3Pju8hN67H1m/fly4WPU9sz+oG/fGdQfaOeJV+c9Xh1f1P2XOUp
Ms6zSR6b93BZfKTpI88FZ+aa8ffiY3I368n0iZgpnwO4Hz5R4y55UK7j+7W9
VV/yOb9MruG1OCZ/WTjVOMtv+FlGPtRH2RtCn6X+k7GGX+gB5lPW3+gTcQb+
x/RDuGkr3h25LbpbxlP6q64TN77pva4d35U20F1qDrvPxzwxHIi3xD0rb9b2
sevEN/S351b3IYrfPr+rtc09j8rlzkW/w/+jfeu8dE4++vwmNmq9B9eJPpJn
R88f7WP9mHiM55r1i/k8OW50huRz+E7W9XttzPCv+R07IjkuO8WRyrmN7bFT
zuUnS6wU3zmMO2Nu3KMeyDtxT/l7uBlS9yG5SalHkBr2GePyRgMc6T3XMcbJ
Yd8VB8XpVS5YQ2BOxP8XuUoW8ZGl5p7vkMPi0z4n6+o+JvRkOUy1hoY5mdiP
de7mobnFh0Q+sEXN58pp5ntkMxmAr70XGwy3sGn0R/Iy+MLt4RBb2tqJ7GGY
PR7EQNlezi0+CJ6Hvqg5qGR5ZA4bgGxxbXpR6nsl7yW2nFha3fclnDnnI85n
ifHVfdL1tc/dNxlJx6GnxXaq5wt3xM6TczSuYdGv+DM5eA7PyDmNqez7lLgd
XiD/jRc+xMj5GjvU9/KTc11y1fU8X9zAz+I++D/ST9Unk3gFHTE8kfgI/yK5
63rGoTbSM4PkSETWszMh9xFOS45c8qpwhzbqj5pLn9preW0cJeYSPjIWkndh
vPGTiEk7Pz+oMW0MswXFPL0n1lLX5OYa5gaZwMaMbmQ8s+/NT7af75ojxgD9
KrW76dh0inHfoZqnMOoXvp8cw+xNBPR7nIy3635xc+fgp6M71+9UnwJdxHOo
foO6z0juM/Z19qDPOmzP+53vfOeBdWqe3U7zc5tzNxe7qbeMW9my7CuH8Ti3
9tk4M5bNMePSPGF/8O+Q/RC/tHmEmyFj2l8+QvITr1ijYN47V2KZo2+s2o3i
d8a+99mwZH7ifOrbZU9sr3Gx9XSQ2g/V90S21b0W9Fl+Fz8ouWz9MbAvyVmf
5RrmK15nh9b9zP0OP6Teofs1n81h+gV+HEEfkaslzps4UThPH/E3iFMm5i1O
K1eQbPV9z1AM2XXxDZvEOV2z5jBphzbM5XGSSeMe6/zXWTOEXzxndmfi9FnL
+fznP3/id7I8fZ24tz6LziLfjZ1c5SMOxyXOy4cBfA6evfsy7vg34oOu8tx9
GpPJDc6z5TfRZtfDFa7FjnVvzhm9IjqQOETGmu9rT+0j54xdVm0lz8Vf4xH4
n2OfiwWkBkfdEza1inO91D70u5qXkH7M/7MONHGa7AHgMIfkYXsfP2Z/H/pv
5R+6hTmaseUwfj23WrsredLGjPwhMSS5TF47R/y+dAntSJ2I6MX8J+REnpX7
MF9rjJwMcM9iTOKyuS6QHXST6Jrpq1FHrPybGJJnSm+qddFrDSnj32vjN7/3
rOWfZE+W1B0gU+QVVBjPc/HerbAJnGuMeL5bHUcjdsO5bEP2ir/kG72QfTcC
Rxqn5jy/amRI9EM6a+RROJvcwWNsOvOBr9N8ZAPKP8raUbLceBdXjT5a91WL
bZs4J5kcOUsWxG/pIE+SZxM7iB5B9piLvk/+Zl2de9Z2nFrXl5pb5iuIGfI3
13WTWQ9sXlZ7vurjWV/h+mSh9/kzXRMnm/vkF9s0a1Mh9rg+Z0dlvQ//QGwj
8kqedHRu7/Fv8gtHPvsd+589Qq/KGsbIcm3Fy1mTFJmWz5PrlsPzCdjt3uMr
dG7PMHar8aTPwj/sOH2sfeQbO9/zYBdqH46kR9BHUt/R7zx38i/ynm+7coP+
1VfJKXN+1+efZAezf/ChZ+s72iH2kfVAqbMYDqYr+k7GnrFY97mqMt4c4Y+g
L5oD8X24n8hp/G4ueCbZD0CMLHwQ7os/JGMnsfecM7kL/EvyK0ZbLzmFdLaM
M0f2pqX3VVs+die9WVwDzFH9RFep363xVeOp1qmjQ3tG9Kh6XT4N8N3kmKf/
MsY8H3MsrxNfcj7xnvwm9ibdOX59r83V6k+W05j4NTmkD+nC8bd4/uFw46yu
USZLKsRzfUcbjVHPkN5h/NMvnXcn2ATOde/03nqIXZB/xnzdQ/xowk441xzD
gX7jYL+RT1lvz7ZgR7Etk2OTvbvNS/KAvKt6qDmVGox8nd4zRsH4HduWuZW9
VGIjmks1BjjGmHBCeCFzip2Y2lK1his5kvWSiVtmzS1u5ityL6kzSR+n+xtH
NbeYrCObyU7XjP+b3mzsRZev7fSb7LNOtpCJ4PvOIV6kn/g9fYe9ntr/ZF3d
DzdyObHm2GH88+4BF6WGCbsj8tp1+QggdUzCN7E32EnJZR3rWmT/i7nabnQA
PE53SN6xewE6VZ5N8pk8C/KYvZ59Etk+qeuVZ00vq3nqDn7g2JXhK+fDJ6m3
4h7IVb6XcIBrxZcYv7i2pC/Y1snTzve0wfgzjnBr4n2pER5fCF2AXzx6gHNq
k/20grqXg9/hM3OPn8LvrXmrdU74iD2PjNG0adwXOGM1rz1HOqz3tT/cWHW5
1Cr2Hf4TfmjfSZzDXM/5xKbrvtGxfbMWim6TeeZ+6bDVX02v1S/5vmcjTpT1
DuFB80iuWZ4tmZJ4qn7ns/adrN/NnDZ+zGvjxnmyjiU1S+LDSAw+18N99F3v
uxadKv6aQN+bu/Tl6IHmWPKaU9t9VWwC5y4DnZ+vJvmrRxtW5dzUKsRz9BNy
ga3iPTJETIdMI3fMFXILd/o8+Q2BWkp0xdSrx93GPXlQa7Q4V2R/gIf5hHAN
vdQcD38nH9F8GdduZB07uyr75442S7hZfiQbPrUi2KTaWNdHJo8kstW9uN/s
oeD7WWtC9sdOoQ/nHKlL5P+RVan1ERuLzEutjjFejiN8h1ym6+Av/gDQfvyk
b/S39vDFRqaQf+yEqmu4dzpG+jNy3fNN7on7wUFkr/wYdlFinLnX2NXi1kBH
oHvJ4WHLph5yOM5v2A2edXQldhqZhW+T95Q+qFySGtj+L8+rrklOfRQ2XfoX
D8jB43ux5jV5bfoPUqfMgTsje/WZNuGFmrM05gHVPCz9SEbHTxl577vGSPwz
GRvGP87xN/Uls9+CA/e4XmLZ/KnmoPHpWp5x6qrUmi2ulfw444JuY0ylNou+
MN7Y+H4/QgwA12fP5tihYgjmo3vWT/wS2Tep8rq2WQebfnMP5kbmPz+OGGv1
kbCHEzcA8tk9GA98ItH1tEufer76ofq42b/6wXldyzjJOnX/x9vJg1QLS796
xp4H3d53ndN33bsxD2wEYzZxXGC313GRvVEgcST65qrYZM4FMsFzi+52NGFV
zs0+ecax/ycHko1AbifHtwIv81kaz+wQ8z3+aL8XEzPnnUdeUGKhkDUa4zPh
O81ndGXnIuP5pCNrsm+l+eMvOUxWh1f8jf9LDDM1YsM/qQ9EN059OfKMTi9G
wTaIjo0rxIETEzSOyGq/zX57NReJDkwGjf645IFqH37TT+aq+8ILcpTnQMZE
L3debVWjGs+Sd+z+xDXJCLoTuZU9ieuehmQcGRp55m/sOXKU/RGOylrs+DBT
5zN5b2wIckkeSeoqyDGNfRd73NhLPcisQWLH5Tll3SrZR6eJ38Q4zNrj9LH7
T+1BvxPr5DPOdbzvGnRG4yH6TexldlCuq7/xBLmHo3Lf2sKeNvbGmkm1RpT6
afg+ucrmjPXOPtcXQfQV693ZT4l74pfsBWnMGZvxs8Y3uwxiLnw4dF26qfGA
Y41z883/617UaYfPjdkRdB/zTv8mz19uA7+svmRjJocvMJZxEBs89Yb1Ob08
+m/2K8ZPqXOdHGVcWs9pvoiZyMUC49jccx2+SrkLxqP7dn/mo/byI4B5nBpY
2pV1WuYdXYMcSW7+KjWAxXJ9V1zZeI1fLPOMfkTGRa/Qf3S/VbHpnJs4n5yS
ow2rcm58pjX/Ljxmvhp7I+j4fJfGHfmDx8hvejOZRL77PDFPvEy/NPfNl1ob
PDDvzCfylG4sd7fai1kDUvcJM5fIZj5b8j/7B7qG9Tj8RrUmns/ILbxQ9wsi
K8mwyFZ6QlDrNPibXNLEM/mIa0xN++jTZEl4CGdrR/yMZDC7mMwTXzWPtR3/
sCli03mG8lbIodjs7rX6fMX1yPzkiuun7Gec+mDkGblAt4hdi8PYAzigxqDr
Ht+xqUZ5nXrxZI/7dL+x+bQTr/l/8pzz/cTjksuT+0zcQDuMOfab8Zg9C7IO
Jeurxpo/9AC/52sXIyXbE4fVLrLYNap/PsCzuU8+S7lAWe+cfYv933k9z+Rl
5/xsOfeJn+KXTN4Nn2b200r9LPeineEielKtr5S9DVaB50qG4yLzNGOk2mLi
2sbfmJeRGDyuzn4N4qDmNv0jdr37rzoznl+2J3n81WIM6R8+LXPb/M98CL+D
OS8+O+6FCdpFhtMxjAW/y17CzhN/V+47fi7zI7UtyAzjjq66Kuhk/F1kEA5m
B5sn0SE969wfu4AsWRWbwLls2bEGhvlhPuOT+E2ONqzCuamjI791hFwB8kHe
wAh9nDoWbEP6n/kWmyi2MtlLjqWeBu6d41vAG+ZJ7FQ+ab/NuPY3ubjhFro4
HmM3kA3mZvgYn5kbda2RuZk8EVwZ+1cNi+QAjPsTkDH5fWrSVb+4e8fH5rnf
xs+U2K35zm4g83Fr/GdyOdkGqSGin/02OV+O+B/pDzgoMsVBx4kvNnk25AFb
g52nP/Qf/Sl5w+RrYnup0eP/4vbkS9Udwg/RmSrIstQnJruD8L4j/ew+3X/W
T9Ft3Av7kOyuObw1N51O4DM6B99/XW+bmg5BYmv8JGSkGBw/Cv70e/K21kEJ
9I3niVPoip5R7q3Ws+C38dd16Av63ljyvOUFR2fw/NiZfObuhwxKTNF3MiZy
JF8ndjr9yXilG22H6ILiptl3WT+5Dh9JdOjsjW08sMnob5lD8SvhWs84vhH6
Df3ZuMgY9ByBv8N4m9snFe/T4yA5mJkD5jWuTFwiMFbJkqwDD7KmKv6w5Isk
T6Huraw9OJ18EBNx/6n95Tts1YOpuU8Hi98nc9312dGel2e3KjaBc8m/uToY
5hIf3irjdxOxCueSRcbmON4he1eRWSPYoT6TyxP/pjmSHBFjf9leT3MgF1Jz
ou4LS+aLVdb3wnu+G59O1k+yQWpNBnN+rNfPjuBjymv3b42N35IjOTcZHFlr
noiB8m/hDO+Rb0HsRH2e+FnyRfRP/FCuE46H7I+DXwKyIdyHq9KnsRHTB+kP
/n3yvdrt+cx7eIUd734iT/MdctWhn6s/FY+yIcRo07epXwy+z3acy6VyTXJp
9HHy0+MG+nCQmFsOtox1r/U9Oo04Y/iArzZjjJ4Qmz/5AjiBzE3OMb/ymDtQ
r2/cza0/B+PO792PcZE2sB3ZPlnz7HnQH+iw+Dp6Xvyc7D4cyV+A9/Ic6A58
BMZK6p7gQTrrVjBGYvPzl+Dq+Oa9xkHVNtWHqXWWvCrtZJPQk/Bp2mWsJLYT
0Jndc4CHXTvxe5AT5fd01ApzG8eQGemv2t/Zm5FPJsg63zpWgA5Pd3cv/vJv
8GPgQ32duDHdP7WjzGnvHUx94LSHHPCMoe5daj7QT1bBJnBuYx6rcC5ejQw2
B8kgtmJyA8xP8ZQR/GmxseQ48B+llqDrOuecXTEH8iA2mANnql/BHsYLZIna
BVUOsw+zfpGenP0/k0vkEO/jI8o6gMhL509tJpycGnPkj+uRAXzL9GqyC9fi
V35CeVyAi3AgJB8rcizX167KH/IbnY8eHmhf/AU+l8fDJtVWedc+Az56bcu6
4+w/4dCuugcvPcF3ElP2f/fAvxcb2xF/ojEiRz3rKdnUkGuQLezz5Gemdu2y
+m76wfOPXRTgHD51zy7I/o3VdmczJBYauyLPL3F0/cHHL1ahT+P7xgE+5w+I
fZR8AP5XNVJwZWpFkP3uq9YODxKjZcuS26lPVvN5xQHCr8mzyX4V+iF1MRzy
c4w5eqJnYqz4TvLosoadbpO9OJYhOfmR/4F1uYmRz9ka7sNcMsbllPNlZQ9J
z5WNGt6SzxiY76MOnXklHs6H4dllD7FlIBPybOnreDKxYe/xSboO/Wb0rawC
/rfs1VCR55z6tDtF1tc72NN0dnmCYgTxYSe/YDtsEudWvcz88PyX7WV/NGDV
eC5fI/lsLmQPTzYCWZi1oKM9I/7Ch0WGJ/8lNRz0PftgVeD0zJP4wcR98C6f
TvzKDjZB6tLhn+SF1r1oyIJwatY/hI/MZbaPPKnIzsSu8F34hG1qzvs/Lqpr
fsWQwe9q7WTXYyvrkzGHB9+Q69X2APoNGxdXsA/cr7nL/qGX45bUFsH3ye9g
h7In2UdkeNYakiu4JjxQ84Crbza5JPyifi+mSRfAIRWxjbVf/7If2RSpszDe
T+op6v9aawzwOtvUOQO2XfJh2fNZJ4WL8LP7iB4UX6b7YxOxx7RZnkuQPahG
8J2mlhH/bp6nfssataojxMfDvouvA1+zZbIPs37zvJzbs00cnA7Er55rsMPo
BGzd5IG5Z5xb17YF9MC5fKcKNt5YyyXI+txV8oXiw9Cf9L/sIRJ9I+2yxig+
4wq+LX4f+dHLrkd3JhscGRPa7XfWLkfHoz+Yk+TBbnNetX9ZTiL/AT1tN6BX
GIvmInnguRlLbH9z0hidyxWYw6ZwLpmfuK05UGuEyVU4GrEq5xrryQXUZ8Yl
eeGgx+ACOmzVX8wTPDW3fxU/IHm5Ksitmt9BruN6tgD7M/UgUmuWL5GsNLe8
r+2es7+JneE/8j08nFhM1mKYL3Xv0Nh82p56kbFZ2LRjvXv6Sdbf+EtGJ0aG
q8mg1Jzw/2WQt8qOcs/GL/8kf3LionjSvGbT53zkH17Wfvk3fMv8rWR7/Mt0
pnBDdA5ygS2/TDbIT2djj2AP4ns6Bk4kD42L5OHiUPpt9idPDC97qQXxISbf
FPiDY+dGHvN70OP4492je1sVnsucfZdYoP71HeMgsUw2YdbGsb3oH56r3wTu
kT6jD/TxXO0hccbUFPF710rOED+9ZxLblwxPLbDqi00ONj/sVtCH2pkajBW5
p1VAf03/Zv+rrFOgi2SdpbGvz3YKugM5YXxnfdpcfsi6oE/og3OQ+7GdLrMM
7FlxDDruCH3j/VXjxZvAuXQmfic5Ie7bX3aWOKS4w1w/HQ3YSU0Mvhc+Hbo3
+4G9UueyuZc9B4LYgfy5ZL94Ttbr7iRH0Pir/iA+NucQ06JX4v66Hy9buu6R
Qkc3J6Kz40k6V3xk9Ona3tTZyO/DQdHtcQd+wj+JyVoXk3pKXjs/7seFVb/A
1/yduJ+9ndpVy5B9ToxftlFyxrLmFK/5jK8SN/uLS5PHzM5LXg7bx/inP3j2
yUfH22Rw7t+cmAO/qb7G7SP8LvWsArI5PgnyiP6TWkepdeC5iOMmvz3rduk8
rqOtuId+VWVWcvtwrjW3q4Juldytei7PO3lkNZaYWi383XiOnkBm09t3Cr/F
pSOyLwcfQuKfGUextbP2xJiaW5s3wjzQ11mziw/5DHA7HTVjfjvwxdbxkPlL
h2KDej50KHNq1VhRkHhQzZmio8fPvy7Q1fim6W/8MaOvBhK/Mnd2A3529m18
RXQ08jD+pbF21VbYBM7FD1WvM7cTD2Gb6ZOd7G+4Kdhp7Ucx3GXxDv6T7LcG
5LOxzb9rjmddAT6bi/9uBXOZ3yrr84D8S616PEMuk+1B7ED2Nz+uuUb+8FHW
fCJy1npHtia5Tqf3W7IJr441ZPCv6yYPL3Ix9ZQgawTYbaO+UCGO6DrLkDw0
fnrtxgvkrhiXtuE4PMR+0td8s8mDweexK6N3eBZZWxy9hex136mvT/awt8jD
OSQvBPfyP+AfduGytSH6K2uXcDx+Cee5P3IQPxiH8UPjQDoM+c4vnJy0yC7X
1fdZZzaXH7sMeFy/VND/wrdzMTe2pj452P3a6Gx0sbEmr/Fd+ZXPRF8ZO35D
fuNM/eH1KkgMll4p7iNnj48mulqt6bAV+HvrvAM+BlxLz2XDkaVZT7wq9CWZ
kDouFdbYGZM75fA50POtPWBH80vU2hXpy6zt2q2NC8asvqVT0RfkQKZGx3b5
biM2gXNxATkF8veqbUOPZSfsZN5uCnbKuXyYy/xHZAQ5CXiAzYXvQN4GeyRr
PsjLylGrILk9yd8UEzNn2c/0KXKFrIpuxddX68LFpymOgKPir/SX/BCnxTux
pegGWe85IjFin8npwiGpbZf6BWwvazToHrhh9KXzvzpH6t3PAZ/FLtIufCDP
icyWI8NWBn78rEk21uMnzX7i2c8stjsbk99dzDBrtyqf+GzOHqtt9wzIFHxq
DO12nYX8V+egU/GVzOU5gzZnza57cdBXVuWger34B8R26X+pP2V8jhCf9ZyN
h3Xo5YlLkMN88uINxgz9ie+WHkavqOtnd4vYjMY33xT90djdSSxUO6x/4qOo
SK6D+wG+Ac+CfF0lbsnWMfeWwbMe4/07Rbh0XOfIFsW9xlBiTLuN41aYA7jW
eHFu97ATH0ywCZwrvsX2MJ+T90pO4Vl+vmU6+n7BszJeV8lpWCd2yrmRTaMN
lDyqrP1IPop5aN7E5nOfnkXqH+x0f0m8gA+spaOT0mGB/Safiq6Z/aXlfJlX
7JPkIcudTL4VjsVNvj+n87NtkmOMtyOn6p7W+D+yKM9QPg39Di/GPshaBHoH
XUBfaFvqyS0D3aDGDCvE+Fwna1no2ORp/p8cKXkMngPdhL82a4T0i2eEW0cZ
TI5GR91LJEbKfnM/1n14XfOFRvBDinHzr45rjbaDWFJiA5G30Z3Y6vqm1mIA
8Vu6Gv1rXfuS4yV507iQz73WPF03PFt6Bh2X3rKbe8gcpuOIP9BV6LvJTXMN
sVhzJnY0v/ay9VVA/pqnc89QG8nrndrOI9jfo08D+OrME5xI96KLbjXmdgr2
OV1tt3b6JnAupNZ7cjqA7qffxQT3G3RaMXs+lLoPWOoYiB/tdT3K3ewrlHgb
H6wcS7KqxqEAL7GfgGxxBHRgc5Nfkdxbh56RPS/BODde+dTqGpO6ZiI1NeSh
pu/r3I8t5B6iZ5iXOCox0LrPn9xM/hLPLHVErTOse2e4X7oCW44cWGbP/b/2
zgXoirL+4xqiogmaOOMojISlIVAQlyAukinoaFOR0IgXEB2leSELs3AUuwlj
CQpKopmQ5S11EknwUlHmBUvTUgSlAhFNEy0ltaTL8/9/nub3vnv23fNyLs++
u2fP9zOzA+85+553zzm7+31+9yj4lPl8k2xIcpaIk2P7mn3GfvhnuafzufI9
sB6yvBtej/fJ75jWJN0X8UNafXBamP7F6wb4vPl+8DnymRGzYC2BHcwarVqd
Nawmy2qmOU+wW4kpcA6Y/cl3jC+B2Cvfv9VTNWtPdgONRLc5h/keuA+A9WIn
7mTfjdVj4Ucpp7s8jq1D3nccYg183x1pdiUQX43WyIPZvlyfNn/Xvvty8ZTO
piiaa765aB4tcbwsfMrco7GRsJ+4TxN/p94TfyF2CX5T7DH0uJZcjUqpVnO5
vrgHctzWV538l/h9kPsmNhXwPqI5H/jTbH49tma0jqNWiP/ErxnWyKaLaLsd
v+WroFdoIvam5SRj07CWYH/TXWLEnP+sz8xPTVwYnxv6ZjlUxFvxoRBHs/6r
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
uaVIc9uQ5pYizW1DmisqRZpbijS3FGluG9LcUqS5bUhzRaVIc0uR5pYizW1D
mluKNLcNaa6oFGluKdLcUqS5bUhzS5HmtiHNFZUizS1FmluKNLcNaW4p0tw2
pLmiUrZv3+42b96c9WHkhueff9797W9/y/owcsPvf//7rA8hN3BecH6I/7Fp
0yY/V1s430vq6aefzvowhBBCCCGEEEIIIYQQQgghhBBCCCGEEEIIIYQQQggh
hBBCCCGEEEIIIYQQQgghhBBCCCGEaHr++9//Zn0IqfH22293+Hwl7z3UPlnz
n//8p8Pnm+mz6Mz32gifRyXo82hDn4WoFnqTf/nLX3bve9/73L777us+/elP
+9kYReK6665ze+21V7vHK3nvofbJGvquMzdqn332cXvssYcbMmSIu++++0r2
efzxx/08pR49erj3vve97hvf+Ea71wm1T9YwB+fEE090e++9tzviiCPcZZdd
1m6f73//++7II490e+65pxs2bJj7xS9+kdo+eeGXv/yl23XXXd39999f8ngz
XStnnnmmO/zww9ttb775Zus+oa6DRjo3RBhmzZrlDj30UPfTn/7UX2cf+tCH
3KBBgwqz7rrjjjvc7rvv7rp169buuUree6h9suS1115zBx98sPvwhz/s5xPe
e++97vjjj3ddu3Z1v/3tb/0+b731luvbt6876aST/L1i+fLlfp1y8cUXt75O
qH2yZsuWLX7dcfbZZ7tHHnnELViwwO22225u4cKFrfvwPXLeXHnlle6JJ55w
M2bM8PfF6HylUPvkBfQQbWBuY1xzm+VagV69ernx48e7uXPnlmzvvPOOfz7U
ddBI54YIw5NPPune9a53uRUrVrQ+tn79en/NNfo8zDfeeMOdfPLJ/r0cdthh
7TS3kvceap+swc7neH7zm9+0Psbn8+53v9vNnDnT//zVr37Vde/e3f3jH/9o
3efrX/+669mzp/vnP/8ZdJ+swY7hvh/1sU+cONHf/41+/fr58yfKgAED3PTp
04Pvkxe45/fv37+d5jbTtcL6lONZtWpV2X1CXQeNdG6IMLCuZ11l6zcDjWI9
2sisWbPGHXLIIf76xm8Y9y1X8t5D7ZM1rKGXLl3a7vE+ffq4U0891f9/xIgR
7rOf/WzJ87/73e/8/eeBBx4Iuk/WcB/885//XPLYRz/6UTd06FD//61bt/rj
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
CCGEEEIIIYQQQgghhBBCCCFEM/J/SMP6pA==
    "], {{0, 411}, {477, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyNVV1s21QUPomvU6QWP5V1dFJnxs+qqavSDUGraYP8LclW0shtOjYhgePc
xKZubGwnXac9TUggXijwhiYh/t4qISExjZ9pGw/sZWhIU0e7VUggHjbxI6RJ
e4EuHF87tdelDEe+/vyd755z7vHJvY+VDakaBQD7IRwkeS5hWfL8JMGX5LxD
yxEEy104QNeybJp6VASYrTuWlE2KLx49JnatQBQehW7oh25Zsc1EsTjuql0t
3HfduQauQ7i6u7P9P6/uCrUVgIibqFGxlVnExwH404ppOZhfL/Kjc47pYjeH
XgsTRPyKi2sedlxc9vCbTDMlpRCfRiwoqlxBvIh4qBziayHs5cCu3iytU0tT
RLcWRcuoajoNpfsA8/+8ZvVGO952vHvsmcnD+BzEtb9ekdMuHka8qMiZScRP
IL7e1KYLPr5rOkkJ8VMA0R2NmVIC8S7Euap1sOT5iVpqI9fG759Qp44g3oL4
23q5MOHPXVbsFNYMdiC+q9K8W98BAE7UnPyUN5c7YBnShBeXq1ZoOuPWEfFb
M8ZhyfPJnbGbk5m2zxNqquDzl1+VDxUR9yP+hepZyYvF/WM6RT8HMlDXC+Ne
LJKmNlsv4x11KufFJbqDH9SbSxaq2sG8r/9ctXKSj6+bOutRzI2PWg2p5On5
YdnKZD2ffJHWS75/vgnTERkoGFDGUYE6rIEIEmQhiU8TLLRUQQMdGYpWigzF
t7ZmN5tnwwzyGjSZzcaxyJTezMBfjfm4ybQKpAY+hQayKvyOrBrSpfCtgVxt
Ez9eLrd8PwbpI3GyF+99ZJzsJ6NkDETyHHmeHCBpZMfIvvW5xdCK3Hxurft5
DSNSpptG3UW0OyDj+DMqDFxTx6os9DcGA8sp62VNufL2X6Faaaw2QbXCFZ14
UM35X/mb/BKOK/xqoOBv8Kv4W7lnLcZ9Vabt6mxYc2dVAm0642bx1pjFDuUd
8nHp5DdbAz9L5OxLV3sunazWF/oD1q0CfaNwpwCnhgI2/mP8j/hS/MP4J/Hf
uPe4L7hz3JfcV9xlELkL3EXuPPcd9xn3dehbbd5D69+eZd7O27V0qjV2pZAU
tgmPC2lhu/CkMB74E/qEESEn7ETLtvXvFo4Xrp4GR3Fs16dzLE8X6oDIw9gB
2ib/qhKqNJhjSpv1Wx3mN2j8mWSAjJD8hu4edXu+rYhlYulYAsTYrthYbCR2
yMXtqLGdaBvDMXNPdyqbrJQ69Lh7nkDKMOctraY64p54/FkxgUcbFfN1ZXhI
lHVdZCZbtKhNrSatDIN7bnpb+m2JnYeRLVcCznkBYP+fuPf9EHDHGgCLNkDf
0wE3iHvlIx8AnH1GaVhN/4yIRL7Ho7y6d4/31pPE/eunVus27mNd7wKsvdNq
/f1Rq7X2MfpfBbig/wvsj4TS
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{477, 411},
  PlotRange->{{0, 477}, {0, 411}}]], "Graphics",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.697406457584346*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 2", "Section",
 CellChangeTimes->{{3.694280622276155*^9, 3.694280624070117*^9}, {
  3.6942806873450603`*^9, 3.694280687468246*^9}}],

Cell["Suppose we wish to sample from", "TextNoIndent",
 CellChangeTimes->{3.696872911628071*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Pi]", "(", "x", ")"}], "\[Proportional]", 
   FractionBox[
    RowBox[{"exp", "(", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      SuperscriptBox["x", "2"]}], ")"}], 
    RowBox[{"1", "+", 
     SuperscriptBox["x", "2"]}]]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696872914736286*^9, 3.6968729326835003`*^9}}],

Cell[TextData[{
 "using a Metropolis-Hastings algorithm with density ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"q", "(", 
     RowBox[{
      SuperscriptBox["x", "\[Prime]"], "|", "x"}], ")"}], "=", 
    RowBox[{"N", "(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "\[Prime]"], "|", "x"}], ",", 
      SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], TraditionalForm]]],
 " for some \[Sigma] as the proposal density. "
}], "TextNoIndent",
 CellChangeTimes->{{3.696872941917178*^9, 3.696872993603991*^9}}],

Cell["\<\
Describe what you think might be the problems encountered if (i) \[Sigma] is \
too small and (ii) \[Sigma] is too big. Run the algorithm with such \[Sigma] \
to verify your conclusions.\
\>", "TextNoIndent",
 CellChangeTimes->{3.696872988005869*^9}],

Cell["\<\
Without using any theory, find what you think is a suitable \[Sigma] and run \
the algorithm with this \[Sigma] to evaluate\
\>", "TextNoIndent",
 CellChangeTimes->{{3.6968730076252737`*^9, 3.696873009094823*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"I", "=", 
   RowBox[{"\[Integral]", 
    RowBox[{"x", " ", 
     RowBox[{"\[Pi]", "(", "x", ")"}], 
     RowBox[{"\[DifferentialD]", "x"}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696873014295685*^9, 3.696873021747551*^9}}],

Cell[TextData[{
 "What happens if instead you use ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"q", "(", 
     RowBox[{
      SuperscriptBox["x", "\[Prime]"], "|", "x"}], ")"}], " ", "=", " ", 
    RowBox[{"N", "(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "\[Prime]"], "|", " ", 
       RowBox[{"\[Minus]", " ", "x"}]}], ",", " ", 
      SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], TraditionalForm]]],
 "."
}], "TextNoIndent",
 CellChangeTimes->{{3.696873029139439*^9, 3.69687305797092*^9}}],

Cell["Solution: The pdf of our choice of easy to sample density is", \
"TextNoIndent",
 CellChangeTimes->{{3.6968829902406816`*^9, 3.696882994439637*^9}, {
  3.6968973484139023`*^9, 3.6968973670005503`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"q", "(", 
    RowBox[{
     SuperscriptBox["x", "\[Prime]"], "|", "x"}], ")"}], "=", 
   RowBox[{
    FractionBox["1", 
     RowBox[{
      SqrtBox[
       RowBox[{"2", "\[Pi]"}]], "\[Sigma]"}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"-", 
      FractionBox[
       SuperscriptBox[
        RowBox[{"(", 
         RowBox[{
          SuperscriptBox["x", "\[Prime]"], "-", "x"}], ")"}], "2"], 
       RowBox[{"2", 
        SuperscriptBox["\[Sigma]", "2"]}]]}]]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.6968973711233387`*^9, 3.696897407066173*^9}}],

Cell["According to the Metropolis-Hastings algorithm,", "TextNoIndent",
 CellChangeTimes->{{3.69689788639102*^9, 3.696897897451025*^9}, {
  3.6968980490315733`*^9, 3.696898051147827*^9}}],

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{"p", "(", 
    RowBox[{
     SuperscriptBox["x", "\[Prime]"], "|", "x"}], ")"}], "=", 
   RowBox[{
    RowBox[{"min", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Pi]", "(", 
          SuperscriptBox["x", "\[Prime]"], ")"}], 
         RowBox[{"q", "(", 
          RowBox[{"x", "|", 
           SuperscriptBox["x", "\[Prime]"]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[Pi]", "(", "x", ")"}], 
         RowBox[{"q", "(", 
          RowBox[{
           SuperscriptBox["x", "\[Prime]"], "|", "x"}], ")"}]}]]}], "}"}], 
     RowBox[{"q", "(", 
      RowBox[{
       SuperscriptBox["x", "\[Prime]"], "|", "x"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"r", "(", "x", ")"}]}], ")"}], 
     StyleBox["1",
      FontWeight->"Bold"], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "\[Prime]"], "=", "x"}], ")"}]}]}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"=", 
   RowBox[{
    RowBox[{
     RowBox[{"r", "(", "x", ")"}], 
     RowBox[{
      OverscriptBox["q", "~"], "(", 
      RowBox[{
       SuperscriptBox["x", "\[Prime]"], "|", "x"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"r", "(", "x", ")"}]}], ")"}], 
     StyleBox["1",
      FontWeight->"Bold"], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "\[Prime]"], "=", "x"}], ")"}]}]}]}], 
  TraditionalForm]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696898053305533*^9, 3.696898139076777*^9}, {
  3.696898438837309*^9, 3.696898473086046*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    OverscriptBox["q", "~"], "(", 
    RowBox[{
     SuperscriptBox["x", "\[Prime]"], "|", "x"}], ")"}], "=", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Alpha]", "(", 
      RowBox[{
       SuperscriptBox["x", "\[Prime]"], ",", "x"}], ")"}], 
     RowBox[{"q", "(", 
      RowBox[{
       SuperscriptBox["x", "\[Prime]"], "|", "x"}], ")"}]}], 
    RowBox[{"r", "(", "x", ")"}]]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696898483698138*^9, 3.696898508927021*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"r", "(", "x", ")"}], "=", 
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"\[Alpha]", "(", 
      RowBox[{
       SuperscriptBox["x", "\[Prime]"], ",", "x"}], ")"}], 
     RowBox[{"q", "(", 
      RowBox[{
       SuperscriptBox["x", "\[Prime]"], "|", "x"}], ")"}], 
     RowBox[{"\[DifferentialD]", 
      SuperscriptBox["x", "\[Prime]"]}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696898151369616*^9, 3.69689818116542*^9}, {
  3.696898263958959*^9, 3.696898269959021*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Alpha]", "(", 
    RowBox[{
     SuperscriptBox["x", "\[Prime]"], ",", "x"}], ")"}], "=", 
   RowBox[{
    RowBox[{"min", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Pi]", "(", 
          SuperscriptBox["x", "\[Prime]"], ")"}], 
         RowBox[{"q", "(", 
          RowBox[{"x", "|", 
           SuperscriptBox["x", "\[Prime]"]}], ")"}]}], 
        RowBox[{
         RowBox[{"\[Pi]", "(", "x", ")"}], 
         RowBox[{"q", "(", 
          RowBox[{
           SuperscriptBox["x", "\[Prime]"], "|", "x"}], ")"}]}]]}], "}"}]}], 
    "=", 
    RowBox[{"min", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox[
        RowBox[{"\[Pi]", "(", 
         SuperscriptBox["x", "\[Prime]"], ")"}], 
        RowBox[{"\[Pi]", "(", "x", ")"}]]}], "}"}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.69689818446203*^9, 3.696898195207716*^9}, {
  3.69694680547375*^9, 3.696946820248975*^9}}],

Cell[TextData[{
 "Since ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["q", "~"], "(", 
    RowBox[{
     SuperscriptBox["x", "\[Prime]"], "|", "x"}], ")"}], TraditionalForm]],
  CellChangeTimes->{{3.696898053305533*^9, 3.696898139076777*^9}, {
   3.696898438837309*^9, 3.696898473086046*^9}}],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox["1",
     FontWeight->"Bold"], 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", "\[Prime]"], "=", "x"}], ")"}]}], TraditionalForm]],
  
  CellChangeTimes->{{3.696898053305533*^9, 3.696898139076777*^9}, {
   3.696898438837309*^9, 3.696898473086046*^9}}],
 " are two densities, we sample ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "\[Prime]"], TraditionalForm]]],
 " from ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["q", "~"], "(", 
    RowBox[{
     SuperscriptBox["x", "\[Prime]"], "|", "x"}], ")"}], TraditionalForm]],
  CellChangeTimes->{{3.696898053305533*^9, 3.696898139076777*^9}, {
   3.696898438837309*^9, 3.696898473086046*^9}}],
 " with density ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "(", "x", ")"}], TraditionalForm]]],
 " else we sample ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "\[Prime]"], TraditionalForm]]],
 " from ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", 
    RowBox[{"(", 
     RowBox[{
      SuperscriptBox["x", "\[Prime]"], "=", "x"}], ")"}]}], TraditionalForm]]],
 " with probability ",
 Cell[BoxData[
  FormBox[
   RowBox[{"1", "-", 
    RowBox[{"r", "(", "x", ")"}]}], TraditionalForm]]],
 ". But we do not know ",
 Cell[BoxData[
  FormBox[
   RowBox[{"r", "(", "x", ")"}], TraditionalForm]]],
 " as it involves an integral. The trick is we sample ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "\[Prime]"], TraditionalForm]]],
 " from ",
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "(", 
    RowBox[{
     SuperscriptBox["x", "\[Prime]"], "|", "x"}], ")"}], TraditionalForm]],
  CellChangeTimes->{{3.696898151369616*^9, 3.69689818116542*^9}, {
   3.696898263958959*^9, 3.696898269959021*^9}}],
 ", ",
 Cell[BoxData[
  FormBox["u", TraditionalForm]]],
 " from ",
 Cell[BoxData[
  FormBox[
   RowBox[{"U", "(", 
    RowBox[{"0", ",", "1"}], ")"}], TraditionalForm]]],
 ". If ",
 Cell[BoxData[
  FormBox[
   RowBox[{"u", "<", 
    RowBox[{"\[Alpha]", "(", 
     RowBox[{
      SuperscriptBox["x", "\[Prime]"], ",", "x"}], ")"}]}], TraditionalForm]]],
 ", ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "\[Prime]"], TraditionalForm]]],
 " automatically comes from ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    OverscriptBox["q", "~"], "(", 
    RowBox[{
     SuperscriptBox["x", "\[Prime]"], "|", "x"}], ")"}], TraditionalForm]],
  CellChangeTimes->{{3.696898053305533*^9, 3.696898139076777*^9}, {
   3.696898438837309*^9, 3.696898473086046*^9}}],
 "; otherwise we set ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "\[Prime]"], "=", "x"}], TraditionalForm]]],
 "."
}], "TextNoIndent",
 CellChangeTimes->{{3.696898611015061*^9, 3.696898679086102*^9}, {
   3.6968995573685637`*^9, 3.696899785939275*^9}, 3.696905590939187*^9}],

Cell[TextData[{
 "In our problem, if \[Sigma] is too small, then we can only generate ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "\[Prime]"], TraditionalForm]]],
 " too close to ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " from ",
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "(", 
    RowBox[{
     SuperscriptBox["x", "\[Prime]"], "|", "x"}], ")"}], TraditionalForm]],
  CellChangeTimes->{{3.696898151369616*^9, 3.69689818116542*^9}, {
   3.696898263958959*^9, 3.696898269959021*^9}}],
 ", which will not be able to cover the whole support. As a result, the \
sampling is too close to the initial value. This is demonstrated in the \
following histogram for the choice of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Sigma]", "=", "100"}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "TextNoIndent",
 CellChangeTimes->{{3.69694617368458*^9, 3.696946182576667*^9}, {
  3.696946359239222*^9, 3.6969465947000093`*^9}, {3.69694664141392*^9, 
  3.696946648908964*^9}, {3.696946704553979*^9, 3.696946710933161*^9}, {
  3.696946771828083*^9, 3.696946775809031*^9}, {3.696947505782033*^9, 
  3.6969475832563543`*^9}, {3.696947614613573*^9, 3.696947665818385*^9}, {
  3.6969477437410107`*^9, 3.6969477571050167`*^9}, {3.697406610520151*^9, 
  3.6974066327358913`*^9}, {3.69740675974837*^9, 3.6974068361176233`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3Ql4VNXdx3EIawCJVgEXYuLyqrggIKSvJqUQ4lPo20birrQEKFUhChpJ
6kJTRYsLWlyCVRRFU4nUlioVEKIpglJT0ASrYkzUqEEkJm5sIUD+L//Dc8dJ
QhaSuZkzd76f57mQuXPn5tzJzPzmnHvOuSdMmn7hVREdOnS4sfv+fy6c+LuR
6ekTb76o8/4biTfP+O2kTvt/eLxjhw4f7V90pQAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPnTn/4kI0eONMtHH33U
4P4VK1b47l+2bJlv/T333ONbv2/fvlb//o8//li+/fbbVj8eYp7/m2++WQYO
HCg/+tGPJC4uTvLy8oJdLABAPddcc4106NDBLBs3bmxw/5NPPum7//HHH/et
nzBhgm/93r17D/n3bt++XW699Vbp3r27lJSUtOkYwt2dd97p+1s4y9q1a4Nd
LABAPa3N3AcffFCSk5PN0pp67m233ebbL5nbNr/4xS/M89i5c2cpKiqSsrIy
qampCXaxAAD1tDZzm6PtxR988IFs3br1oJnc0szVOrS2P7ekLl1RUSHffPNN
i8volPP7779vsF7XFRcXm9+9c+fOFu3r888/l927d9dZV1tbK59++mmr2gJU
S45/8ODB5nk8/fTTW/U7AADto7WZe/XVV0vPnj3N4p8Hubm5cuKJJ9Zp5+zX
r5+pFzsuvPBC6dKli+/+yMhIOfroo+v8Xj2PPHr0aDnssMPMNt26dZOkpCST
g/W99tprcsopp5jtIiIi5Mc//rHJqSOPPNKU749//KNvW60T6rqUlBS59957
pVOnTqYszjabNm2S+Pj4OuXv2rWrpKamyq5du3z70d+h+5k6dao899xzctxx
x5ltta38qquuMt8z5s2bJ0cddZRZ37t3b7n++utb/HdpyfG/8sorpgx6zM6x
6+3hw4cfdJ/6t3T+ZnoeXr8PqHXr1kmvXr3Mej0XXP97AwAgMPwzd86cOfLX
v/61zjJlypQWn8/VDOjYsaNZ16dPH5Ndhx9+uLmt6/Pz8812P//5zxucf9RM
cixfvtzkXP1tnHxes2aNb9uCggKTm/770f81w531Wqd2aG455XPKqstLL71k
clIzx1l37LHH+vJMl/Hjx/v2o/2VnN+j/2vfJc1FZ9szzzzT/O8cv7M8/PDD
zf5NWnr8K1euPOg2w4YNa3Tfv/zlL33b6XcCrcP/z//8jy/X33nnnWbLBwBo
Hf/MbW5pLnO1fudklVOHqq6ulhEjRsiYMWMkOzvbrNu8ebNcd911vsdrH1un
z/Rnn31m6oq6Pjo6Wp566inTPq39pLUupus1I5z2Xq3TOft57LHHzHlMrbed
euqpvvV/+MMffOV2MleX8847T1atWmXqu3v27DH15QEDBph6r/P94LvvvpPj
jz/eVx6Hk7lOpmteaxuyf+5mZGSY52bDhg3mXKuuu+iii5r8exzK8Wu9W7fX
NmVdf9ppp5nbX375ZaP71/Z353uC1qGvuOIKX3n92yIAAIHnn7lap6u/+NcF
m8tczRhn3TnnnCO33367vP766wc9F9nY+Vz/tuy5c+fWeYzWM537Xn75ZdMG
6tRDNWP93XXXXc1m7vr16w/6nDj9j3T/Wv4hQ4b4MsrhZK6u8z9frZnt1Ov1
+4bDqUvq89KUQzl+x6BBg8y6s846q8l9O/Sx/n9XXfQ7kfM9CQDgjkCOFdLs
1Dbb+vVjbXe99tprTR3L0Vjm+ueKnpP19/e//913n7aD67lN53ZaWlqdbd96
660mM1frnVq3ra+8vFzuvvtuU3/2r7PqovVMh5O59bPeyWc9h+3PyUVtc27K
oRx//X23NHOVfzuDHldTdWMAQGAEenyutq9qfTc2NrZB9p599tm+nGssc7Vv
lrNe9+VvyZIldTLnww8/9N2ePn16nW21zbipzNXzrPX997//NVmp9+v5VD3v
rHXN888/36zzP+fsZK4ekz+tx+p6re/6a2nmHsrx1993SzNX67P+9X1dFi9e
3KLHAgBaL9CZW1lZ6Ts3q/W0Rx99tM65VaePjn/manY6Fi5c6Fv/0EMP1SmL
/+/U9lFtu3X6SdVvs502bVqTmdu3b98Gxzp58mRzn9ZvS0tLfesvuOCCBjnd
XObWH7fT0sw9lOOvv++WZu4DDzzg24/TxnzEEUeYOj4AwD2BzFxnnGhUVJR8
8cUXvm3T09N92+oYVqVjc5x12l9py5YtZr1mnXOOVsccad9pHSur/a+cPskn
n3yyrw/VpZde6tuPjkHSfWVmZppxL01l7jHHHNPgWJ3+WD169JCqqipfeZzf
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
aCvN3BEjRpj5HdVNN90kN998c4PtfvOb35gxQ24hc2E7MhdAW2l7sZ6/1T5T
w4YNk/PPP1969uwpb7/9trlf+xRfc801ZixPS+aIbC0yF7YjcwG0lY7J1b5R
Tz31lEybNk2GDx8uUVFR8vzzz5v7H330UZPJei2Effv2uVYOMhe2I3MBuGXP
nj3m/82bN5u6rtvIXNiOzAXgFWQubEfmAvAKMhe2I3MBeAWZC9uRuQC8gsyF
7chcAF5B5sJ2ZC4AryBzYTsyF4BXkLmwHZkLwCvIXNiOzAXgFWQubEfmAvAK
Mhe2I3MBeAWZC9uRuQC8gsyF7chcAF5B5sJ2ZC4AryBzYTsyF4BXkLmwHZkL
wCvIXNiOzAXgFWQubEfmAvAKMhe2I3MBeAWZC9uRuQACrba2VioqKqSqqqpd
fy+ZC9uRuQACoby8XDIzMyUmJkY6d+4sHTp0MEvv3r1l4MCBkp6eLtu2bXO1
DGQubEfmAmirsrIy6d+/v0RHR5tszc7OlkWLFklubq7MmzdPZsyYIbGxsSaP
S0tLXSsHmQvbkbkA2iotLU0SEhKkurq60W1qampk1KhRkpWV5Vo5yFzYjswF
0Fbx8fEyf/78ZrfLycmRuLg418pB5sJ2ZC6AtsrIyJDU1NRmt5s4caKkpKS4
Vg4yF7YjcwG0VWFhoURGRsro0aNNXXbdunVSXFwsJSUlUlBQIIsXL5bk5GTT
t2r16tWulYPMhe3IXACBoPmamJgoERERvj7L/ktSUpLk5+e7WgYyF7YjcwEE
0u7du03+5uXlyfLly6WoqEgqKyvbtM+VK1fK+eef3+wSFRVl+koDtiJzAbhp
+/bt8tlnn7VpH5s3b5ZVq1Y1u5x22mkm6wHbvP322742n4ULF5K5AFzxzDPP
yJFHHtkuv4u2Zdjqsccek8mTJ8vhhx8ud911F5kLoNXmzJljxugebNHzuN27
d/fdXrBggWvlIHNhK83c3/72t2QugDa7/PLLTZvZEUccIWeeeWadReen6tSp
k++2zlPlFjIXtiJzAQTKvn37ZPbs2dKrVy+59957zW0HbcsAmQsg8DZs2CCn
nnqqDB8+3MzBrMhcgMwF4I4dO3bIlClTzPWEtH8mmQuQuQDc9dJLL0nfvn3N
tYTIXIQ7MheA27Zu3Wr6V+n1hNoDmQtbkbkAvIbMha3IXABeQ+bCVmQuAK8h
c2ErMheA15C5sBWZC8BryFzYiswFQteaNWvk+uuvN9fJww/IXNiKzAVC1zvv
vCMDBgwwcxyfffbZMnfuXKmoqAh2sYKOzIWtyFwg9K1fv16uu+46Oeqoo6RL
ly5ywQUXyJIlS6SmpibYRQsKMhe2InMB79CM/ec//ymTJk0ycy5qBk+fPl02
bdoU7KK1KzIXtiJzAe8oLS2VWbNmyaBBg0x7c1xcnMmfjh07ysyZM4NdvHZD
5sJWZC4Q2r766ivJzs42OaM5269fP5kxY4a8++67vm3++te/mvveeuutIJa0
/ZC5sBWZC4Su1157zZy/1SUlJUWWLl0qe/bsabDd9u3bTeYuX748CKVsf2Qu
bEXmAqFr7dq1cttttx20r/LOnTtl9erV5mfN4S+//LK9ixc0ZC5sReYCoUuv
k3fOOecc9D4du6t126qqqnYuVfCRubAVmQuEll27dskll1wiY8aMkaFDh0pU
VJT52X8ZPXq0xMbGmr7LtbW1wS5yuyNzYSsyFwg9CxYsMGNwNVv0vas/+y9j
x46VX/3qV5KXlxfsogYFmQtbkblA6CooKDBzYaAuMhe2InMBeA2ZC1uRuUBo
0bqtvlcrKyvNHBj6c1NLOCJzYSsyFwgtDz/8sHm/fvDBB/Lyyy+bn5tagkn7
b+k4pvbuO03mwlZkLoBAKi8vl8zMTImJiZHOnTub8Uq6aB/qgQMHSnp6umzb
ts3VMpC5sBWZC4Q+//FAW7dulRdeeEG++OKLdi9HWVmZ9O/fX6Kjo0226pyU
ixYtktzcXJk3b56Zk1LHMGkea7u4W8hc2IrMBUKbZtlpp51mftYc0/ey1is7
deokK1asaNeypKWlSUJCglRXVze6jV77aNSoUZKVleVaOchc2IrMBUJXcXGx
ab+9+uqrTV1X/9fr961bt06mTZtm6pztKT4+XubPn9/sdjk5OeaaR24hc2Er
MhcIXc8884yceuqpvtvHHnusXHXVVeZnbVvW+u6WLVvarTwZGRmSmpra7HYT
J04012RwC5kLW5G5QOiaO3euactVGzduNBn797//3dz+5JNPTB34u+++a7fy
FBYWSmRkpJl7UuuyWt/WunhJSYkZ47R48WJJTk425XKuv+AGMhe2InOB0JWf
ny/du3c3+TV+/HiTd99//73J2cmTJ5u23vam+ZqYmCgRERG+Psv+S1JSkim3
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
n8yFTchcAF5G5sImZC4ALyNzYRMyF4CXkbmwCZkLwMvIXNiEzAXgZWQubELm
AvAyMhc2IXMBeBmZC5uQuQC8jMyFTchcAF5G5sImZC4ALyNzYRMyF4CXkbmw
CZkLwMvIXNiEzAXgZWQubELmAvAyMhc2IXMBeBmZC5uQuQC8jMyFTchcAF5G
5sImZC4ALyNzYRMyF4CXkbmwCZkLwMvIXNiEzAXQHmpra6WiokKqqqra9feS
ubAJmQvALeXl5ZKZmSkxMTHSuXNn8zmjS+/evWXgwIGSnp4u27Ztc7UMZC5s
QuYCcENZWZn0799foqOjTbZmZ2fLokWLJDc3V+bNmyczZsyQ2NhYk8elpaWu
lYPMhU1amrlDhgyRKVOmyDvvvBPsIgMIAWlpaZKQkCDV1dWNblNTUyOjRo2S
rKws18pB5sImLc3crl27yrHHHmu2A4DmxMfHy/z585vdLicnR+Li4lwrB5kL
m7Q0cw877DB58MEHTVsRADQnIyNDUlNTm91u4sSJkpKS4lo5yFzYhMwF4IbC
wkKJjIw0nzFal123bp0UFxdLSUmJFBQUyOLFiyU5Odn0rVq9erVr5SBzYRMy
F4BbNF8TExMlIiLC12fZf0lKSpL8/PxW7XvLli3msc0tAwYMkFdeeSXARwa0
DpkLwG27d+82+ZuXlyfLly+XoqIiqaysbNM+V6xYISNHjmx20XFJ2lcasAGZ
C8DLaFuGTchcAF5G5sImZC4ALyNzYRMyF4AbzjnnHNNvuSWLfva4hcyFTchc
AG5Ys2aN9OnTR6KiomTOnDly//33N7r885//dK0cZC5sQuYCcIuOx9V67N13
3x20MpC5sAmZC8BN9913n/Tq1avNY4Nai8yFTchcAG7au3evmZti69atQfn9
ZC5sQuYC8DIyFzYhcwF4GZkLm5C5ALyMzIVNyFwAXkbmwiZkLgAvI3Nhi7Ky
MhkxYgSZC8CzyFzYYO3atb5rWN5zzz1kLgBPInNhg4ULF8r48ePlqKOOkptu
uonMBeBJZC5sQOYCCAdkLmxA5gIIB2QubEDmAggHZC5sQOYCCAdkLmxA5gII
B2QubEDmAggHZC5sQOYCCAdkLmxA5gIIB2QubEDmAggHZC5sQOYCCAdkLmxA
5gIIB2QubEDmAggHZC5sQOYCCAdkLmxA5gIIB2QubEDmAggHZC5sQOYCCAdk
LmxA5gJoT7W1tVJRUSFVVVXt+nvJXNigtZl77LHHSmVlZbCLDyAElJeXS2Zm
psTExEjnzp3N54wuvXv3loEDB0p6erps27bN1TKQubCBZm5y8u+kV690GT16
yf73wVUSF/eE9OuXJZGR18uYMS/sX3e1DB786P6cnSXduk2TsWNX7F/3E/Oe
yc3NDfYhALBYWVmZaReLjo422ZqdnS2LFi0ynx3z5s2TGTNmSGxsrMnj0tJS
18pB5sIGmrmjRt0nXbrk73/dF+/P0VVy9NEbpUePtfu/j74qJ5xQYtb17Vu0
P5ffkE6dXpETTyzdX/edLvfee695vwBAY9LS0iQhIUGqq6sb3aampmb/59Ao
ycrKOuT979y5U7744otmlyFDhsjatWvbcihAm2nmXn755aaNJyMjw9RdL7vs
Mjn55JOlZ8+ecsstt5h1F1xwgZx++unSvXt3877Q9uY77rhDbrzxxmAfAgCL
xcfHy/z585vdLicnR+Li4g55/88995wcc8wxzS7dunWTv/zlL605BCBgPvzw
Q5OpERER5n99Xfbq1cv83KlTJ986zV/92TkXo+v03O7q1auDfQgALKbf5VNT
U5vdbuLEiZKSkuJ+gQAA8KjCwkKJjIyU0aNHm7rsunXrpLi4WEpKSqSgoEAW
L14sycnJ5vs83+EBAGgbzdfExERfe1r9JSkpSfLz84NdTAAAPGP37t0mf/Py
8mT58uVSVFTEmEMAAAAAAAAAAAAAQEhatmyZXHfddWb+rnBe/vSnP5l5iYNd
DhuWSZMmyV133RX0cgR70Tm5dCxisMsR7GX27NnMTwYEyMyZM8389zqfVzgv
On5bx5wFuxw2LH369JFLLrkk6OUI9jJ06FAzj06wyxHsRa+Hcfzxxwf7owrw
hKeeekomTJgQ7GIE3datW6Vv377BLoYVzjnnHNmwYUOwixF0v//972XWrFnB
LkbQ6TzyOp88gLYjcw8gc39A5h5A5h5A5gKBQ+YeQOb+gMw9gMw9gMwFAofM
PYDM/QGZewCZewCZCwQOmXsAmfsDMvcAMvcAMhcIHDL3ADL3B2TuAWTuAWQu
EDhk7gFk7g/I3API3APIXCBwyNwDyNwfkLkHkLkHkLlA4JC5B5C5PyBzDyBz
DyBzgcD5+uuv5fPPPw92MYJu79698t577wW7GFbQ62Hu3Lkz2MUIui+//NJ8
Fwt3O3bskNLS0mAXAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADq
qK2tDXYRrNGa52Lfvn0ulKT9tfZ14MXXTzi/Dvx58W8LBMvbb78tV155pURF
RckJJ5xwyNdL2b59u5x44omSlpbmUgnbx7Zt2yQzM1NOPvlkOfzwwyUlJUUq
KyubfIwe+4033ijHHHOMdOzYUY4//nj54x//KHv27GmnUgdOa14HrXnObBfu
rwN/CxculJ/+9KfSvXt3GTZsmPzrX/86pMdfe+21XJML8KPXBdG8vOKKK8xn
rl6/r0ePHnLnnXe2eB9Tp06VDh06hHzmXnfddXLSSSdJXl6evPbaa3L22WfL
oEGDmvyOP378eDniiCPM56te1+yWW26Rzp07y8yZM9ux5G3X2tdBa54z24Xz
68CfHnvXrl3l4YcflsLCQrnmmmtM9m7cuLFFj8/PzzffP8hc4Ad/+MMfpHfv
3rJr1y7futtvv12OOuooqa6ubvbxr7zyivzoRz8y3+9DOXPfeecdiYiIkBde
eMG37v333zffJV5++eWDPubbb781j8nIyKiz/qKLLgq5z5nWvA5a85zZLtxf
B/4GDBgg48aNq7PuzDPPlEmTJjX72O+//15iY2PljDPOCOnnAAg0vd70ZZdd
VmddUVGR+YxZu3Ztk4/V91VMTIw8/fTT5r2o7Uih6v777zff4Xfv3l1n/Smn
nGLqPQdTVVUljz32mHz88cd11s+YMUMiIyNDqq7XmtdBa54z24X768Ch183W
v/3f/va3OutvvfVWOfroo5t9/FVXXSW/+MUvzPc2Mhf4gdZj0tPT66z76quv
zPvt+eefb/KxkydPljFjxpifQz1zp0yZItHR0Q3WjxgxQi699NIW70f7zxx3
3HHmcaGkNa+DQD1nNgn314FD24X1b6/t5P4eeeQR6dSpU5P9xFauXGnOg5eX
l5O5QD16vkbPQfnTfh/6fsvOzm70cStWrDBtkZ999pm5HeqZq21oet6uPu0/
o31IWkr73mg7Y0FBQQBL577WvA4C9ZzZJNxfB44XX3zR/O0//PDDOutzc3PN
+oqKioM+TtvZ+/fvL48//ri5TeYiXNXU1Mgnn3xSZ9F1PXv2lNmzZ9fZdu/e
veZ9NXfu3IPu65tvvjHf4R999FHfulDJ3MaehwkTJsjgwYMbbH/hhRfKueee
26J933HHHeZ5mzNnTqCL7brWvA4C8ZzZJtxfB45ly5aZYygpKamz3slcrcMe
jD5/SUlJvttkLsLVpk2bzHvFf9G+Ido/s37fDx0Xofc/8cQTB92XtinrWJJX
X33VjB3QRftLjB071vzs3w/HNo09DzfddJM5hvpGjhwpP/vZz5rdr567033d
c889bhTbda15HbT1ObNRuL8OHNp3XY9j/fr1ddZr27Ku174c9WmbsvZTfvLJ
J32fC5rB2s6sPzttYkA40DYffS/4L7ouPj5efv3rX9fZ9r///a95XzU2Fm/o
0KENcst/KSsra4cjap3GnocHH3zQ1PW0budP+27qOb6m6LhMbUfUfjShqjWv
g7Y8Z7YK99eB44svvjB/+6VLl9ZZn5WVZc79H4x+z2jqc+Hee+9tj6IDVtMx
In369KnzGXP33Xebc7UH+y6rtmzZIp9++mmdRft1pqammp/rf16Fgnfffdd8
LujYJ8dHH33UbF8y/ZzRz9nnnnuuPYrpmta8Dlr7nNks3F8H/nScz9VXX11n
3ZAhQxrtS/bdd981+Fy44YYbTEbrz3o/EO70+2yXLl3M2Nqvv/5aVq9ebcbb
PvDAA75t9JyOvs+0L2NjQuV8blO0/VCPo7i42JyvSkxMlISEhDpjPXT+D6ev
kW6j80ZovX/+/PkNFj1PHCpa+zpoyXMWasL5deDvz3/+sxk3peOFNC/1fL/e
1u8gjpycHPOa2Llz50H3wflcoKGXXnrJfBfV7/L6Oatj6/zrO9r3sqnzesoL
maufneedd545Vp1D6Pzzzzfnev3pnH7OeT1th2yqLS3Uvte35nXQkucs1IT7
68Chf3sdP6bfxfQ4tH1dx+L7c85fN9YWQuYCB6ff4bUPb6jPDxsIOi5V5zkI
R619HXjxOfPiMbWG9onUtmEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAA3pWWlibDhw+X7777zrfu9ttvl4SEBPnqq6+CWDIAALzl/fff
l27dusm0adPM7TfeeEMiIiLkgQceCHLJAADwnrvuuks6deok//73v+WUU06R
xMREqa2tDXaxAADwnL1798rQoUOlZ8+eEhUVJZ9++mmwiwQAgGc9++yz0qFD
Bxk3blywiwIAgGft3LnTtCnHxMSYc7l6ThcAAAReenq69OrVy7QpjxgxwuSv
5jAAAAic+v2Ui4uLTT9mzWEAABAYu3btMnXaYcOGyb59+3zrZ82aRRszAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAE/7fxUq7Jk=
    "], {{0, 411}, {477, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyNVV1s21QUPomvU6QWP5V1dFJnxs+qqavSDUGraYP8LclW0shtOjYhgePc
xKZubGwnXac9TUggXijwhiYh/t4qISExjZ9pGw/sZWhIU0e7VUggHjbxI6RJ
e4EuHF87tdelDEe+/vyd755z7vHJvY+VDakaBQD7IRwkeS5hWfL8JMGX5LxD
yxEEy104QNeybJp6VASYrTuWlE2KLx49JnatQBQehW7oh25Zsc1EsTjuql0t
3HfduQauQ7i6u7P9P6/uCrUVgIibqFGxlVnExwH404ppOZhfL/Kjc47pYjeH
XgsTRPyKi2sedlxc9vCbTDMlpRCfRiwoqlxBvIh4qBziayHs5cCu3iytU0tT
RLcWRcuoajoNpfsA8/+8ZvVGO952vHvsmcnD+BzEtb9ekdMuHka8qMiZScRP
IL7e1KYLPr5rOkkJ8VMA0R2NmVIC8S7Euap1sOT5iVpqI9fG759Qp44g3oL4
23q5MOHPXVbsFNYMdiC+q9K8W98BAE7UnPyUN5c7YBnShBeXq1ZoOuPWEfFb
M8ZhyfPJnbGbk5m2zxNqquDzl1+VDxUR9yP+hepZyYvF/WM6RT8HMlDXC+Ne
LJKmNlsv4x11KufFJbqDH9SbSxaq2sG8r/9ctXKSj6+bOutRzI2PWg2p5On5
YdnKZD2ffJHWS75/vgnTERkoGFDGUYE6rIEIEmQhiU8TLLRUQQMdGYpWigzF
t7ZmN5tnwwzyGjSZzcaxyJTezMBfjfm4ybQKpAY+hQayKvyOrBrSpfCtgVxt
Ez9eLrd8PwbpI3GyF+99ZJzsJ6NkDETyHHmeHCBpZMfIvvW5xdCK3Hxurft5
DSNSpptG3UW0OyDj+DMqDFxTx6os9DcGA8sp62VNufL2X6Faaaw2QbXCFZ14
UM35X/mb/BKOK/xqoOBv8Kv4W7lnLcZ9Vabt6mxYc2dVAm0642bx1pjFDuUd
8nHp5DdbAz9L5OxLV3sunazWF/oD1q0CfaNwpwCnhgI2/mP8j/hS/MP4J/Hf
uPe4L7hz3JfcV9xlELkL3EXuPPcd9xn3dehbbd5D69+eZd7O27V0qjV2pZAU
tgmPC2lhu/CkMB74E/qEESEn7ETLtvXvFo4Xrp4GR3Fs16dzLE8X6oDIw9gB
2ib/qhKqNJhjSpv1Wx3mN2j8mWSAjJD8hu4edXu+rYhlYulYAsTYrthYbCR2
yMXtqLGdaBvDMXNPdyqbrJQ69Lh7nkDKMOctraY64p54/FkxgUcbFfN1ZXhI
lHVdZCZbtKhNrSatDIN7bnpb+m2JnYeRLVcCznkBYP+fuPf9EHDHGgCLNkDf
0wE3iHvlIx8AnH1GaVhN/4yIRL7Ho7y6d4/31pPE/eunVus27mNd7wKsvdNq
/f1Rq7X2MfpfBbig/wvsj4TS
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{477, 411},
  PlotRange->{{0, 477}, {0, 411}}]], "Graphics",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.697407148428637*^9}],

Cell[TextData[{
 "On the other hand, if \[Sigma] is too big, then we will generate ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "\[Prime]"], TraditionalForm]]],
 " that has a sparse distribution  in ",
 Cell[BoxData[
  FormBox[
   RowBox[{"(", 
    RowBox[{
     RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], ")"}], 
   TraditionalForm]]],
 " from ",
 Cell[BoxData[
  FormBox[
   RowBox[{"q", "(", 
    RowBox[{
     SuperscriptBox["x", "\[Prime]"], "|", "x"}], ")"}], TraditionalForm]],
  CellChangeTimes->{{3.696898151369616*^9, 3.69689818116542*^9}, {
   3.696898263958959*^9, 3.696898269959021*^9}}],
 ". Among all the ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["x", "\[Prime]"], TraditionalForm]]],
 ", only those ",
 Cell[BoxData[
  FormBox[
   RowBox[{"|", 
    SuperscriptBox["x", "\[Prime]"], "|", 
    RowBox[{"\[LessTilde]", 
     RowBox[{"|", "x", "|"}]}]}], TraditionalForm]]],
 " will be likely to succeed, for those not succeed, we set ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["x", "\[Prime]"], "=", "x"}], TraditionalForm]]],
 ", so the histogram of ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]]],
 " will be very sparse with high peaks around a few values, which means the \
chain does not move very well. This is demonstrated in the following \
histogram for the choice of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Sigma]", "=", "100"}], TraditionalForm]],
  FormatType->"TraditionalForm"]
}], "TextNoIndent",
 CellChangeTimes->{
  3.697406789737459*^9, {3.6974069060828876`*^9, 3.697406906800661*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3Qm8TfX+//FjjMjRIJQpypBMGbpyfjIW3XtliAZliCs3RZ1wUzRIhoso
Q+VelFm3JEmmJKKUsZQMiQwhMsTBMXz+5/Pd/7XbZ1jn7LOttcfX8/FY5ayz
9t7fffbe672/3/UdbnikV+tuOePi4p7Ol/Kf1p3/1TAxsXO/NrlTfmjUr/c/
HsmV8o//5IiL+yll050CAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAADk1VdflYYNG5rtp59+Svf7Tz75xPv7jz/+2Lt/
2LBh3v0XLlwI+PF37twpx44dC/j2EPP379evn1StWlWuuuoqqVOnjixZsiTU
xQIApNG9e3eJi4sz26ZNm9L9ftKkSd7f/+c///Hu79Spk3f/+fPns/24J0+e
lOeee07y5csn27dvv6TnEOsGDRrkfS2sbeXKlaEuFgAgjUAz97XXXpMWLVqY
LZB67osvvui9XzL30vztb38zf8fcuXPLxo0bZdeuXZKcnBzqYgEA0gg0c7Oi
7cU//vijHDx4MMNM9jdztQ6t7c/+1KUPHTokR48e9buMVjlPnDiRbr/u27p1
q3nspKQkv+5rz549cvbs2VT7Ll68KLt37w6oLUD58/xr1Khh/o4333xzQI8B
AAiOQDP30UcflQIFCpjNNw9mzpwpZcuWTdXOWbRoUVMvtrRu3Vry5Mnj/X3+
/PmlWLFiqR5XryM3a9ZMrrjiCnPMZZddJk2aNDE5mNbnn38u5cuXN8flzJlT
brvtNpNTV199tSnfK6+84j1W64S6r1WrVvLvf/9bcuXKZcpiHbNlyxapV69e
qvLnzZtXOnbsKKdPn/bejz6G3s9jjz0ms2bNkuuvv94cq23l3bp1M98zxo0b
J9dcc43ZX6hQIXnyySf9fl38ef5Lly41ZdDnbD13/bl+/foZ3qe+ltZrptfh
9fuAWr16tRQsWNDs12vBab83AACc4Zu5w4cPl3fffTfV9s9//tPv67maATly
5DD7ihQpYrKrcOHC5mfdv2zZMnPc3Xffne76o2aSZcGCBSbn0h5j5fOKFSu8
x65Zs8bkpu/96P81w639Wqe2aG5Z5bPKqtv8+fNNTmrmWPuuu+46b57p1qFD
B+/9aH8l63H0/9p3SXPROvaWW24x/7eev7WNGTMmy9fE3+e/aNGiDI+pXbu2
7X3//e9/9x6n3wm0Dn/TTTd5c/3bb7/NsnwAgMD4Zm5WW1aZq/U7K6usOtSZ
M2ekQYMG0rx5cxk7dqzZt2/fPnniiSe8t9c+tlaf6V9++cXUFXV/yZIlZfLk
yaZ9WvtJa11M92tGWO29Wqez7uett94y1zG13lahQgXv/hdeeMFbbitzdbv9
9ttl8eLFpr577tw5U1+uVKmSqfda3w+OHz8upUqV8pbHYmWulema19qG7Ju7
ffr0MX+btWvXmmutuq9NmzaZvh7Zef5a79bjtU1Z91esWNH8fODAAdv71/Z3
63uC1qEfeOABb3l92yIAAM7zzVyt06XdfOuCWWWuZoy1r2bNmvLSSy/JF198
keG1SLvrub5t2aNGjUp1G61nWr9buHChaQO16qGasb6GDBmSZeZ+8803Gf5N
rP5Hev9a/ltvvdWbURYrc3Wf7/VqzWyrXq/fNyxWXVL/LpnJzvO3VK9e3eyr
UqVKpvdt0dv6vq666Xci63sSAMAdTo4V0uzUNtu09WNtd3388cdNHctil7m+
uaLXZH29//773t9pO7he27R+7tGjR6pj161bl2nmar1T67Zp7d27V4YOHWrq
z751Vt20nmmxMjdt1lv5rNewfVm5qG3OmcnO80973/5mrvJtZ9DnlVndGADg
DKfH52r7qtZ3y5Qpky57q1Wr5s05u8zVvlnWfr0vX3PmzEmVOdu2bfP+3KtX
r1THaptxZpmr11nT+u6770xW6u/1eqped9a6ZtOmTc0+32vOVubqc/Kl9Vjd
r/VdX/5mbnaef9r79jdztT7rW9/Xbfbs2X7dFgAQOKcz9/Dhw95rs1pPe/PN
N1NdW7X66Phmrman5e233/buf/3111OVxfcxtX1U226tflJp22x79uyZaeZe
e+216Z5r165dze+0frtjxw7v/nvuuSddTmeVuWnH7fibudl5/mnv29/MHT16
tPd+rDbmK6+80tTxAQDucTJzrXGi8fHxsn//fu+xiYmJ3mN1DKvSsTnWPu2v
9Ouvv5r9mnXWNVodc6R9p3WsrPa/svok33jjjd4+VO3atfPej45B0vvq27ev
GfeSWeYWL1483XO1+mNdfvnlcuTIEW95rMfVvlUWtzI3u8/f9779ydzNmzd7
+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
VuudBQtqJog8/bTIggWebAzkEmSg13MPHBD57DORsWNF7rlHJD5epHJlT334
gw9Ejh4lcwFErw4dOkjz5s29P0+aNMnkbOPGjWXixIkyatQoqVOnjuTPn182
bNjgWjnIXOf8/rvm2Vy58catUqCASK1anoz96CORY8eceQyn+lBduOCpUw8b
JnLXXZ7vBJUrn06pE4+Xb791oKAZIHMBhErazK1bt67Jv7Rq1KghHTt2dK0c
ZO6l0ZxN+bok+lIWKiRSqdL3cu+9s0z7sBvc6res9fLp03enZO4bUqqUSMWK
nmvM2k/LKWQugFBJm7mVKlWSsdrwl8b48eOlunascQmZm32ap74526aNyKxZ
IidPRs9YIe0X/dRTItdd5+m/pW3kO3Zc2v2TuQBCRTO3QYMGKfWLZPOznov6
9euX7rguXbpIE70g6BIy139ff62vh+daqPZ7snLWV7RkrkWvOet16ccfFyle
XOT220WmTPGMY8ouMhdAqGh7sV6/1XNo7dq1pWnTplKgQAFZv369+f2ePXuk
e/fukjdvXpkwYYJr5SBzM3fihGfMjTY1lC0rMnRo5mNvoi1zfWn+zp0r0qyZ
ZwxTYqLexv/7J3MBhMrZs2dN36jJkydLz549pX79+in1p3jv+fTNN980mdyj
Rw+5oB1eXELmZmztWpF//MMzVvbee0WWLPGvn3E0Z64vnadD4/Paa0UaNRJ5
913PNeHMkLkAws25/z8wU+fT0bqu28jcP1n1OB3TqnXalIgwY2yyI1Yy16I5
q23sDRp42p71uq/2K8sImQsg1pG5IklJnvbjG28UqV3bU2cLdPreWMvc1LcX
6dzZ0zag4351DLIvMhdAuDtx4kRKJiRl+3affvqptGrVKsvtyiuvlNmzZ7tQ
8vCn12U1HosUEWnRQmTFiku/z1jOXIvOAa3RqnNRtmvnaadXZC6AcFc4pdLQ
VjvJZtPu3btlzpw5WW7ly5d3fa6rcKP1r+7dPfUxnQsxO/2AskLm/umPP0RG
jRIpWdLT9typ0ywyF0BYGzBggEzRwRkuiaW2Zc1WnV5E618ai/7O/Z8dZG56
2kVh+nS93ntAihbda+aadGPpPTIXgL90/c9DKSFw5MiRoD5uLGTud9951uzR
8S0vv+zcPIwZIXPtadty69bvmHmndZ4NvaThZJd8MhdAZvbu3St9+/aV0qVL
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
8XffiVy4EOpSBh+Zi2Aic51F5tojc8OL1nP1o6/rIT30kGdeSs3h+vVFevcW
0bfZjz9Gfw6TubHp4sWLcujQITly5EhQH5fMdRaZa4/MDX/HjoksWSLyyiue
vtFly4pcfrlnjiydr2P8eJFVq0ROngx1SZ1D5saOvXv3St++faV06dKSO3du
71zDhQoVkqpVq0piYqL8oYuTuIjMdRaZa4/MjUwnToisXCkydqxnjUIdJ6zX
hm+4QeSvf/XUiSdN8qyZpMdGGjI3NuzatUtKlCghJUuWNNk6NuUNPWPGDJk5
c6aMGzcu5X3cW8qUKWPyeMeOHa6Vg8x1Fplrj8yNHtrevG2byNy5njkqH37Y
M1+l1omvv94zZkn7T2uf6fnzPW3UycmhLnXGyNzY0CPlDZmQkCBnMuk8mJzy
Jm3cuLGr53Ay11lkrj0yN/pdvOhZo2HBApHXXhN54glP/ur6hXnzeurGd97p
yeNhw0RmzxZZs8Yz10eokLmxoV69ejJhwoQsj5s6darU0QHvLiFznUXm2iNz
Y5vOFb19uyePtZ1a55DW8cNaP9Z1HfLlE6lY0ZPROr5p4EBPm/WiRSLffy9y
/Lg75SJzY0OfPn2kY8eOWR7XuXNnadWqlWvlIHOdRebaI3ORGe2XtXmzpy36
jTdEnntORE+RTZp4slivIet2880iDRuK3H+/yJNPigwdKvL22yILF3rm3zp4
MHvzf5C5sWFDypsjf/78Kd/pmpm67OrVq805b3vKF8E1a9bI7NmzpUWLFqZv
1XKdTNUlZK6zyFx7ZC4uldZ1f/hBZOlSkenTRUaO1PqL53qyzvdRtapIsWIi
uXJ51iTW+bjq1RNp2dLT/6tfP881Zq0/67XoFStEatXqlPKZWiWnTztfXjI3
vGi+NmrUSHLmzOnts+y7NUn5grdMJ4xxEZnrLDLXHpmLYNHryrrukp5GtM+1
zompl/J0DFRiokinTpJSpxFJSNB+XztTcvFMymdLpHRpZ8tB5oans2fPmvxd
smSJLFiwQDZu3Gheq2Agc51F5tojcxGOfNuWna7rkrmR58SJE5KUlJTt2+lt
9u/fn+V26623pnwPXJmt+9bMHTBggOzbt8+VrUiRIub7x86dO13ZtF3frfvu
1auXyRW3/jZ6rWH69Omu3Pe3334rxYoVc+1vo+PfdFycW38bHVc3d+7ciHzf
6LZu3TrX7nv9+vWulj2S/zb6XW3hwoWuvCd1TGg+7RyGiFG4cGFp27Zttm83
a9YsKV68eJab1pum6UTo2aD1Ym379uf+A9m0TBm1tUfS5tbfJm/evGZz4771
u06k/21C/bqzRe7mxnuyaNGi0qBBg2yfvxE6Wp+cMmVKqIsBAAAAAEC2XAzR
GgcAAMSCcFjjAACAaBcuaxwAABDtwmWNAwAAol24rHEAAEC0C5c1DqJBu3bt
TNt8LGydOnWSYcOGhbwcwdgef/xxM1Yu1OUIxqbzqFjXmKJ9e/nll6Vbt24h
L0cwtlGjRvl1nof7wmWNg0h3/vx50+9M2+pjYdN55O6///6QlyMYW/ny5c2c
46EuRzC222+/XapXrx7ycgRj0/Oa9mUJdTmCsXXp0oV5qMJIOKxxEOkuXLhg
/n6xokqVKmaOxljw0EMPme+jsWDEiBHytC4oGwOWLl1q+qnEAp1v+eqrrw51
MZBGKNc4iHRkbvQic6MTmQtELjI3epG50YnMBSIXmRu9yNzoROYCkYvMjV5k
bnQic4HIReZGLzI3OpG5QOQic6MXmRudyFwgcpG50YvMjU5kLhC5yNzoReZG
JzIXiGyxkkFq27Ztcvr06VAXIyh++eUXOXr0aKiLERS//fab7N+/P9TFCApd
n3Tnzp2hLkZQ6Dx533//faiLAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAACBMXbx4MdRFcFWgzy9S/y6RWu5A6Py7Z8+ezdZtIvnvk5SUFOoiBIWu
tZJdkfy6Ija8/fbbcscdd0i+fPmkdu3a8tlnn2V5m65du0qFChXSbSdPnnS/
wNm0fv16efDBByU+Pl5uuOEGGThwYJa30fni+/btKzfeeKMULlxYWrVqZdYy
CXeBlFtvU7FixXSvpb7GkUDPy3fffbd07NjRr+MDeb+Hk4kTJ8rll1/u17GR
9Dm1aNl0LajixYtLjhw5pFSpUvLKK6/IuXPnMr1dIJ9zINg+//xzyZs3r4wZ
M0Y2bNgg3bt3N+eiTZs2ZXq7EiVKyJ133ikDBgxItWW3ruG2U6dOSdmyZeWB
Bx4wn8nJkyeb89WgQYMyvd0TTzwh5cqVkyVLlpi/UbVq1aR69eph/x06kHJ/
+eWXEhcXJ08++WSq1/Kdd94JYskDc+bMGfOe1fL7k7mBvt/DxQcffGDKnz9/
fr+Oj5TPqa8OHTrIlVdeaXJW35vPPvus5M6dW/r37297m0A/50CwVapUSdq3
b59q3y233CKPPPKI7W2OHDliznEff/yx28W7ZC+88IIUKlQo1Tp9L730klxz
zTXmfJ0RXcNQ1w6eO3eud98PP/xgnvPChQtdL3OgAi33W2+9JQULFgyoHS+U
1q5dKzfffLOpz1977bV+ZW4g7/dwcPz4cVNufS3Lly/vV+ZG0ufUcuzYMfMe
7tOnT6r9bdq0Ma+xnUA+50Cw7dmzx3wm33vvvVT7n3vuOSlWrJjt7ZYvX25u
Z61LGs7n6r/85S9y3333pdq3ceNGU/6VK1dmeJuRI0eauk/auoCe67QeGa4C
Lfdjjz0mCQkJ5t/h/FqmpXXUpk2bys8//2xe56wyN9D3ezhYtmyZlC5d2nyf
evXVV/1qW46kz6lFvyfod8C06wD37t3bfM+wa68J5HMOBJt+jvU9qe03vsaP
Hy+5cuWy/Yy+9tprUqBAAdNGpe2YV1xxhbRt21YOHToUjGJni37PTUxMTLVP
1zHX5/2///0vw9v885//lJIlS6bb36BBA2nXrp0r5XRCoOXWvNXrm5pZ+lpq
e+TQoUPD/hzt+37zJ3MDfb+HA63/Wd+l/M3cSPqcZkZfl+uvv968j+0E8jkH
gu3DDz8078lt27al2j9z5kyz3+6z2aVLF/N77a8wbdo0c67T+pVeO9T+o+FE
r33pdSFf2hdDyz927NgMb6NtePpc0tL+SJpN4SrQcmubnJ6bX3zxRdM/p169
eubvo21zkcKfzA30/R5u/M3cSPqcZkb7BGp785o1a2yPCeRzDrhp7969pg3O
2o4ePWqu8+h7cvv27amOtc5BepuMaFvNrFmzUu0bN26cuc3s2bNdew6B0CwZ
PHhwqn16vtGyjho1KsPbdOrUSWrUqJFuf+vWraVu3bqulNMJgZRbz0vTp0+X
r7/+OtV+rVPo+TlSxqT4k7mBvt/Djb+ZG0mfUzsvv/yyKe/w4cMzPS6Qzzng
Ju0nou8/a9M6jPbv039/8803qY7Vtjbdf+LECb/v/8CBA+a7aL9+/Zwu+iXR
NrW0/TF07Iw+v//+978Z3uaZZ56RMmXKpNvfsGFDueuuu1wppxOcLLd1bta+
vZHAn8x18v0eSv5mbkbC9XOaEb2Gq6/LsGHDsjw2kM854CYdYzBp0iTvpudS
7Vuh78l58+alOvb5558310fsrFu3Ll1dQfs+aH9+7T8YTrSd9OGHH06177vv
vjPP225cpnUdLG37m/Z51Wum4SqQcmvOrFq1yvSL9aVtzPo32rx5s2vldZI/
mRvo+z3c+Ju5kfQ5TUvH5+p3A+1P5Y9APudAKFSuXFkeffTRVPtuvfXWTPvc
6Dm8atWqqfbpeLiMzmehpueWIkWKpMoh7R+k1zDt6jWaM/pcli5d6t33008/
hX1/jEDKbd1G2/B86RwTOrdApIyz8CdzVSDv93Djb+ZG0ufUl9ZrNW/Ttotn
JpDPORAKb7zxhrlup+MntK6j10T0Zz1XW3QsiW//BB2Top9bfZ9rvxMdJ3nT
TTdJzZo1w27OCK3b5MmTR3r06CG///67GT9x1VVXyejRo73HaF1Az7nar9Wi
7bHaHr9161Zzna9Ro0amf2+4Pb+0sip3Rs9Vr/Xq2Mc5c+aY85Oel/VvNmTI
kFA9jWyzy9y0711/3u/hzi5zp06dal5b6xp8JH1OLfqe1edWq1YtmTBhQrot
OTnZHJf2ufrzOQfCgX4v1D72+n7Vz6d+N047/5DOveZ7PVA/r3rtUPsK6m20
rervf/+7ea+Ho/nz55u2Qy2rfg67deuW6vuw9odMe91HP/u333679/npOFCd
XyLcZVXujJ7rL7/8Yo6zrvXrmBKtI0QSu8xN+9715/0e7uwy17r+adXrIu1z
qvT6iG+/k7SbdQ0k7XNVWX3OgXCi87fs3r07W7fR8YJan9J518Kdnn+0v3ZW
c7ampWP89BpYpAmk3NqXXevB4TxO1SmBvN8jVSR9Ti9VoJ9zAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBb16NFD6tevL8ePH/fue+ml
lyQhIUF+++23EJYMAIDo8sMPP8hll10mPXv2ND+vWrVKcubMKaNHjw5xyQAA
iD5DhgyRXLlyyZdffinly5eXRo0aycWLF0NdLAAAos758+elVq1aUqBAAYmP
j5fdu3eHukgAAESt6dOnS1xcnLRv3z7URQEAIGolJSWZNuXSpUuba7l6TRcA
ADgvMTFRChYsaNqUGzRoYPJXcxgAADgnbT/lrVu3mn7MmsMAAMAZp0+fNnXa
2rVry4ULF7z7Bw4cSBszAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgKj2/wDpc7cL

    "], {{0, 411}, {477, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyNVV1s21QUPomvU6QWP5V1dFJnxs+qqavSDUGraYP8LclW0shtOjYhgePc
xKZubGwnXac9TUggXijwhiYh/t4qISExjZ9pGw/sZWhIU0e7VUggHjbxI6RJ
e4EuHF87tdelDEe+/vyd755z7vHJvY+VDakaBQD7IRwkeS5hWfL8JMGX5LxD
yxEEy104QNeybJp6VASYrTuWlE2KLx49JnatQBQehW7oh25Zsc1EsTjuql0t
3HfduQauQ7i6u7P9P6/uCrUVgIibqFGxlVnExwH404ppOZhfL/Kjc47pYjeH
XgsTRPyKi2sedlxc9vCbTDMlpRCfRiwoqlxBvIh4qBziayHs5cCu3iytU0tT
RLcWRcuoajoNpfsA8/+8ZvVGO952vHvsmcnD+BzEtb9ekdMuHka8qMiZScRP
IL7e1KYLPr5rOkkJ8VMA0R2NmVIC8S7Euap1sOT5iVpqI9fG759Qp44g3oL4
23q5MOHPXVbsFNYMdiC+q9K8W98BAE7UnPyUN5c7YBnShBeXq1ZoOuPWEfFb
M8ZhyfPJnbGbk5m2zxNqquDzl1+VDxUR9yP+hepZyYvF/WM6RT8HMlDXC+Ne
LJKmNlsv4x11KufFJbqDH9SbSxaq2sG8r/9ctXKSj6+bOutRzI2PWg2p5On5
YdnKZD2ffJHWS75/vgnTERkoGFDGUYE6rIEIEmQhiU8TLLRUQQMdGYpWigzF
t7ZmN5tnwwzyGjSZzcaxyJTezMBfjfm4ybQKpAY+hQayKvyOrBrSpfCtgVxt
Ez9eLrd8PwbpI3GyF+99ZJzsJ6NkDETyHHmeHCBpZMfIvvW5xdCK3Hxurft5
DSNSpptG3UW0OyDj+DMqDFxTx6os9DcGA8sp62VNufL2X6Faaaw2QbXCFZ14
UM35X/mb/BKOK/xqoOBv8Kv4W7lnLcZ9Vabt6mxYc2dVAm0642bx1pjFDuUd
8nHp5DdbAz9L5OxLV3sunazWF/oD1q0CfaNwpwCnhgI2/mP8j/hS/MP4J/Hf
uPe4L7hz3JfcV9xlELkL3EXuPPcd9xn3dehbbd5D69+eZd7O27V0qjV2pZAU
tgmPC2lhu/CkMB74E/qEESEn7ETLtvXvFo4Xrp4GR3Fs16dzLE8X6oDIw9gB
2ib/qhKqNJhjSpv1Wx3mN2j8mWSAjJD8hu4edXu+rYhlYulYAsTYrthYbCR2
yMXtqLGdaBvDMXNPdyqbrJQ69Lh7nkDKMOctraY64p54/FkxgUcbFfN1ZXhI
lHVdZCZbtKhNrSatDIN7bnpb+m2JnYeRLVcCznkBYP+fuPf9EHDHGgCLNkDf
0wE3iHvlIx8AnH1GaVhN/4yIRL7Ho7y6d4/31pPE/eunVus27mNd7wKsvdNq
/f1Rq7X2MfpfBbig/wvsj4TS
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{477, 411},
  PlotRange->{{0, 477}, {0, 411}}]], "Graphics",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.697406946551673*^9}],

Cell["The exact value of the integral is 0 by symmetry", "TextNoIndent",
 CellChangeTimes->{{3.696905601027247*^9, 3.696905617320436*^9}, {
  3.696905758127706*^9, 3.6969057666374407`*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"I", "=", 
   RowBox[{
    RowBox[{
     RowBox[{"\[Integral]", 
      RowBox[{"x", " ", 
       RowBox[{"\[Pi]", "(", "x", ")"}], 
       RowBox[{"\[DifferentialD]", "x"}]}]}], "\[Proportional]", 
     RowBox[{
      SubsuperscriptBox["\[Integral]", 
       RowBox[{"-", "\[Infinity]"}], "\[Infinity]"], 
      RowBox[{"x", " ", 
       FractionBox[
        RowBox[{"exp", "(", 
         RowBox[{
          RowBox[{"-", 
           FractionBox["1", "2"]}], 
          SuperscriptBox["x", "2"]}], ")"}], 
        RowBox[{"1", "+", 
         SuperscriptBox["x", "2"]}]], 
       RowBox[{"\[DifferentialD]", "x"}]}]}]}], "=", "0"}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696905623258271*^9, 3.6969056920942583`*^9}, {
  3.6969057326780157`*^9, 3.6969057525858393`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"N", "[", 
  RowBox[{
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      SuperscriptBox["x", "2"], 
      RowBox[{
       RowBox[{"Exp", "[", 
        RowBox[{
         FractionBox[
          RowBox[{"-", "1"}], "2"], 
         SuperscriptBox["x", "2"]}], "]"}], "/", 
       RowBox[{"(", 
        RowBox[{"1", "+", 
         SuperscriptBox["x", "4"]}], ")"}]}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}], 
   "/", 
   RowBox[{"Integrate", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"Exp", "[", 
       RowBox[{
        FractionBox[
         RowBox[{"-", "1"}], "2"], 
        SuperscriptBox["x", "2"]}], "]"}], "/", 
      RowBox[{"(", 
       RowBox[{"1", "+", 
        SuperscriptBox["x", "4"]}], ")"}]}], ",", 
     RowBox[{"{", 
      RowBox[{"x", ",", 
       RowBox[{"-", "\[Infinity]"}], ",", "\[Infinity]"}], "}"}]}], "]"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.696946240449676*^9, 3.6969462900143347`*^9}}],

Cell[BoxData["0.3963471254147167`"], "Output",
 CellChangeTimes->{{3.696946263649727*^9, 3.696946291519594*^9}}]
}, Open  ]],

Cell[TextData[{
 "By choosing ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Sigma]", "=", "1"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", we find"
}], "TextNoIndent",
 CellChangeTimes->{{3.6974060974283543`*^9, 3.697406106976378*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"I", "=", 
   RowBox[{"-", "0.04562668"}]}], TraditionalForm]], "DisplayFormulaNumbered",\

 CellChangeTimes->{{3.697406147124236*^9, 3.697406147702175*^9}}],

Cell[TextData[{
 "The sampling histogram for ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "1000"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " compared with pdf is given as follows:"
}], "TextNoIndent",
 CellChangeTimes->{{3.697406153754668*^9, 3.697406168933689*^9}, {
  3.6974063531887693`*^9, 3.6974063588005877`*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3Qd8FNXax3GqgPRLlxb1KqKIgILXS0QEvGIDUbChUvQqghc1EiwIUhRB
VBTBgoB0xCsWRFTwIiqgNAmISkQE6VWkE9rz7jP77rpJNtmSnTOT3d/38xlN
Zmf3nCXJ/PfMnHJm14duuq9QgQIFHi3u+c9NXR67MiWlyxM3F/F80+KJXv/u
WtjzxVsFCxRY59l0pwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAHnppZfkyiuvtLZ169Zle/zTTz/1P/7JJ5/49w8d
OtS//+TJk1GX/9tvv8mff/4Z9fMh1r//E088IfXr15e//e1v0qRJE5k7d67T
1QIAZNGtWzcpUKCAta1cuTLb4+PGjfM//tZbb/n3d+7c2b//xIkTEZd78OBB
6dOnjxQvXlzWrl2bp/eQ6J555hn/z8K3ffPNN05XCwCQRbSZ+8orr0ibNm2s
LZp2bv/+/f2vS+bmzfXXX2/9OxYpUkTS0tJkw4YNcuzYMaerBQDIItrMDUWv
F69Zs0Z27NgRNJPDzVxtQ+v153Da0jt37pS9e/eGXUdfPffv359tv+5LT0+3
yj58+HBYr7Vp0ybJyMjItO/UqVPy+++/R3UtQIXz/hs2bGj9O55//vlRlQEA
MCPazL3//vulZMmS1haYB9OmTZOzzjor03XOKlWqWO1in5tuukmKFi3qf7xE
iRJStWrVTOXqfeTWrVtL6dKlrWOKFSsmrVq1snIwq6+++krOPfdc67hChQrJ
pZdeauVUhQoVrPo9++yz/mO1Taj72rVrJ88//7wULlzYqovvmJ9//lmaNm2a
qf6nnXaadOrUSY4cOeJ/HS1DX6d79+7yzjvvSPXq1a1j9Vr5fffdZ33OGDVq
lFSsWNHaX6ZMGXn44YfD/rmE8/6/+OILqw76nn3vXb9v1qxZ0NfUn6XvZ6b3
4fXzgFq0aJGUKlXK2q/3grN+bgAAxEZg5g4bNkzefffdTNsDDzwQ9v1czYCC
BQta+ypVqmRlV7ly5azvdf+8efOs46699tps9x81k3xmz55t5VzWY3z5/PXX
X/uPXbx4sZWbga+j/9cM9+3XNrWP5pavfr666jZr1iwrJzVzfPvOOOMMf57p
dvfdd/tfR/sr+crR/2vfJc1F37H16tWz/u97/77t1VdfDfkzCff9f/7550GP
ady4cY6vfcMNN/iP088E2oY/55xz/Lm+atWqkPUDAEQnMHNDbaEyV9t3vqzy
taGOHj0qzZs3l2uuuUZGjhxp7duyZYv85z//8T9f+9j6+kxv3LjRaivq/po1
a8rbb79tXZ/WftLaFtP9mhG+673apvO9zptvvmndx9R2W506dfz7n376aX+9
fZmr2z//+U+ZM2eO1d49fvy41V6uW7eu1e71fT7Yt2+f1KpVy18fH1/m+jJd
81qvIQfmbmpqqvVvs2zZMuteq+67+eabc/15RPL+td2tx+s1Zd1/3nnnWd9v
3749x9fX6+++zwnahr799tv99Q28FgEAiL3AzNU2XdYtsC0YKnM1Y3z7Lr74
YhkwYIAsWLAg6L3InO7nBl7LHj58eKbnaDvT99hnn31mXQP1tUM1YwM999xz
ITN36dKlQf9NfP2P9PW1/o0aNfJnlI8vc3Vf4P1qzWxfu14/b/j42pL675Kb
SN6/T4MGDax9F154Ya6v7aPPDfy56qafiXyfkwAA9ojlWCHNTr1mm7V9rNdd
H3zwQauN5ZNT5gbmit6TDTRjxgz/Y3odXO9t+r7v0aNHpmOXL1+ea+Zqu1Pb
tllt3rxZhgwZYrWfA9usumk708eXuVmz3pfPeg87kC8X9ZpzbiJ5/1lfO9zM
VYHXGfR95dY2BgDERqzH5+r1VW3vJiUlZcveiy66yJ9zOWWu9s3y7dfXCvT+
++9nypxffvnF//1DDz2U6Vi9Zpxb5up91qx++OEHKyv1cb2fqvedta151VVX
WfsC7zn7MlffUyBtx+p+be8GCjdzI3n/WV873MzV9mxge1+36dOnh/VcAED0
Yp25u3fv9t+b1XbaG2+8keneqq+PTmDmanb6jB8/3r9/xIgRmeoSWKZeH9Vr
t75+Ulmv2fbs2TPXzK1cuXK293rvvfdaj2n79tdff/Xvb9u2bbacDpW5Wcft
hJu5kbz/rK8dbua+/PLL/tfxXWMuX7681cYHANgnlpnrGydatmxZ2bp1q//Y
lJQU/7E6hlXp2BzfPu2vtG3bNmu/Zp3vHq2OOdK+0zpWVvtf+fok//3vf/f3
obrlllv8r6NjkPS1evfubY17yS1zq1Wrlu29+vpjnX766bJnzx5/fXzlat8q
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
+fLlPa/fX37++eeYbt99l+7J1ROyYsWaoI/feeed8iYdrYCEQebCTXLL3Isu
EvnmG3vK/dvf/ibPPfecLa/dsqVITrdv/v3vf5O5gANOnTolO3fulD2GB/SR
uXCTnDL3t99EKle2bz5FOzN31CiRu+4K/hiZC5izefNm6d27t9SuXVuKFCni
X0+oTJkyUr9+fauP04FYTrYTBJkLN8kpc196KTZr0+fEzszdutW7lv3/DwPM
hMwFzNiwYYPUqFFDatasaWWrzrU8depUmTZtmudz8Sjp1auXJCUlWXkcyRre
kSJz4SY5Ze7ll4t88ol95dqZuUqXLwnWLZrMBczQ+aWSk5Pl6NGjOR6jczHr
2n79+vWzrR5kLtwkWObu3OmdRzEjw75y7c7c558X6dYt+34yFzCjadOmYc2j
PGnSJGsdXbuQuXCTYJk7ZozILbfYW67dmatvqUoV7beReT+ZC5iRmpoa1rq4
Xbp0kXbt2tlWDzIXbhIsc6+7TmTaNHvLtTtz1YUXiixcmHkfmQuYoesblChR
Qlq3bm21ZRctWiTp6emydu1aWbx4sUyfPl3atGlj9a2aP3++bfUgc+EmWTNX
uxCWKqXzsdlbronMffppkUcfzbyPzAXM0Xxt0aKFFCpUyN9nOXDT+ejmzZtn
ax3IXLhJ1sz1fPSUa66xv1wTmbtypciZZ2beR+YC5um6fpq/c+fOldmzZ0ta
Wprs3r3bSNlkLtwka+befruZ9fBMZK7SuSt1DksfMhdILGQu3CQwc48dEylb
VmT7dvvLNZW5vXqJBA5DIHOBxELmwk0CM/fTT7V/v5lyTWXuokUi9er99T2Z
CyQWMhduEpi5998vMmyYmXJNZa6OFapaVftyeL8nc4HEQubCTXyZq9mk8yub
WubOVOaqBx4QGTrU+zWZCyQWMhdu4stcHceq41lNMZm5c+eKXHqp92syF0gs
ZC7cxJe5qam6drS5ck1mrq51UL68yJYtZC6QaMhcuIkvc88+W+eNMVeuycxV
nTt71/gjc4HEQubCTTRzZ8/eKLVrmy3XdObOmCHyr3+RuUCiIXPhJpq5jzyy
Rx56yGy5pjP34EHvnJadOj1I5gIJhMyFm2jm1qt3VL7+2my5pjNXtW4t0rLl
62QukEDIXLhJrVqXSdmyJ+TECbPlOpG5ej/3nHMWkblAAiFz4SYVKz4lbdva
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
a+WGu1QmmZuzl14SufdemysExEh6eroUKVJE7r//fqutq//X9fsWLVokPXv2
lBo1ahiv0zbPCWnEiBHWnJS+NQT79etn1Us/C1SrVs1qh9uJzIWdXn9dpGPH
8I8nc3P2228ilSqFd18ccNrEiROlTp06/u/POOMMue+++6yv9dqyZpxmoCla
lp5f9HPA6aefLuXLl5fRo0dL8eLFPeeojvLyyy9bc2dpG3zp0qW21YPMhZ2u
vlrkv/8N/3gyN3cXXiiycKGNFQJiZPjw4ZKcnGx9vXLlSitjZ+jCYh7r16+3
sm/fvn3G6qNrCOravVu2bLHGMt1xxx1WnbSdG0gz8ZZbbrGtHmQugtH52/Qz
aV62zp17ev6ujkiXLg+G/RzNPr0mZVp+ydy+fUVSU22sEBAj8+bNs9qQun7Q
3XffLSVKlJD9+/dbOXvvvfdK06ZNjdanWbNmVlvWR9fw1cz98ccfMx33+uuv
ez7bXmhbPchcBKO/i2+88Uaetq5d53p+dzdE9JxChQrJ//73P+PvN79kblqa
yN//bmOFgBhq3769dS7RTcfuqi5dulj3T99//32jddF5KLXsQMOGDcvWd0o/
+7ds2dK2epC5CEb/RvK65odenhkzJrLn6PUmMjd3557rnUsTcDs9h2h7clPA
Ih3Lli0zek3ZZ8GCBVK0aFHp3LmzbNy4MdvjWscHH3xQTjvtNOs6n13IXAST
18zNyPD2V9ZxpZEgc0PT208pKTZVCIhjH3zwgZx//vlBzzFDhgyRggULyqOP
PmrrGoNkLoLJa+Z6frXlyisjfx6ZG9pPP4lUr07/ZbjfwoULrfV0L7vsMmv9
+qybE3QsboY2CrLQa8wm+lGTuQgmr5mr15VHj478eWRueOrV02tlNlQIiBG9
flu6dGlrHK7m7j333JNtcyPt53VYFxaJ0N69e+WHH34IudWvX1++/PLL2Fcc
+VpeMvfgQZEyZUT27In8uWRueAYN0j4hNlQIiJG3335bypYtK3/88YfTVYmI
zpWlnxEipdet63k+DIfatP/2JBYsQRZ5ydwpU0Suuy66csnc8KxdK1KlisjJ
kzZUCoiBcePGyQUXXOB0NSLWt29faz4Pu3BtGcHkJXNvuCH6defI3PA1bCjC
JSq4lc57oW067beMv5C5CCbazNXLSGXL6j2R6Molc8M3ZIhIt24xrhAQI9of
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
GjtW5PLLDVcISBBkbmLSZTMmTsz5cTLXDDdm7smTIhdeKPLBB4YrBSQAMjfx
TJkicskl3rXLc0LmmuFk5t5www0yefLkoFvv3l9IlSr7ZMKEKTkeE+22b98+
4+8XcAsyN7EcPixSs6bIggW5H0fmmuFU5upaZfozvuOOO3LcqlZd6fls9nau
x0S6lStXTm699Vbj7xdwCzI3sWi/1FtuCX0cmWuGU5l79dVXy6WXXprrMTov
WeXKIrFslr7zzjue378wfgGBOEXmJo6tW71jgzZsCH0smWuGmzNXde0q8vjj
sSuXzEWiI3Pd6/Dhw9KyZUtp0qRJTLaKFT+WatXGh3UsmWuG2zN3yxbvPBk6
ljsWyFwkOjLXvdavXy+VK1eW7777Ls/b+PGrPOfODE+eLQnreM3ck9qB1TAy
14xwM1c984zINdfEplwyF4mOzHUvzdzatWvn+XW0uZqcLPLmm+E/h8w1Iz9k
7okTIo0bi7z+et7LJXPhlIsvvlhKlCgR1mbn3ySZ616xytwBA0T+9a/cxwZl
ReaakR8yV61ZI1Khgsi6dXkrl8yFU77++mupVKmSlC1bVoYNGyYvvvhijtvH
H39sWz3IXPeKRebqHH7a91Tvy0WCzDUjv2SuGj7ce70kL78WZC6clJ6ebrVj
hwwZ4lgdyFz3ymvm6ryOf/+7yHvvRf5cMteM/JS5ep2kWTORF16IvlwyF057
wfMLXKpUKdm9e7cj5ZO57pXXzNX1UDt1iu65ZK4Z+Slzla7zp2vb//hjdOWS
uXDaiRMnZN68ebJjxw5Hyidz3Ssvmau3I5KSRPbvj65sMteM/Ja56q23RBo1
Ejl+PPLnkrlIdGSue0WbufrxrWrV0PM75obMNSM/Zq7SsUP9+0f+PDIXbrff
01DRuRHsQua6V7SZe911In365K1sMteM/Jq5OqdZpUoiy5dH9jwyF26nc4J3
6NAh4udpX+fGjRuH3EqWLGmt9QH3iSZz33hDx6GJHDuWt7LJXDPya+aqqVNF
zj9f5OjR8J9D5sLt+vbtKxNzW+g0B7t27ZIlS5aE3OrVq2fdT4b7RJq5v/zi
HUOpYynzisw1Iz9nrvZjbtdO5OGHw38OmYtEx7Vl94okc7U/i55CdQxlLJC5
ZuTnzFUHDnjXt3/xxfCOJ3PhFjqf/M6dO2XPnj1GyyVz3SvczNVovP766McF
BUPmmpHfM1dt2iRyxhkiH34Y+lgyF07avHmz9O7d2zqv6rlGz3O6lSlTRurX
ry8pKSmez5EHbK0Dmete4WZut27euR3zeg83EJlrRjxkrtK+VHpfI1SfKjIX
TtmwYYPUqFFDatasaWXryJEjZerUqTJt2jQZNWqU9OrVS5KSkqxz7q+//mpb
Pchc9wonc3UKM8/Hs6jH4eaEzDUjXjJXaTtX27va7s0JmQun9OjRQ5KTk+Vo
Lp3+jnkaLrp+ar9+/WyrB5nrXqEyV/uNej6yRTyXcjjIXDPiKXOVzgupnwFz
ujxH5sIpTZs2ldGjR4c8btKkSdYa4nYhc90rt8z98su8zcEXCplrRrxlrtI5
R6+91rsGYFZkLpySmpoqncLo9NKlSxdppx3ybULmuldOmbt6tXc+As1du5C5
ZsRj5mof+quu8vbry4rMhVNWrFhhrSnUunVrqy27aNEia52htWvXyuLFi2X6
9OnSpk0b6xw0f/582+pB5rpXsMzdvFmkRg2RadPsLZvMNSMeM1fptWXPr5A8
+WTm/WQunKT52qJFCylUqJC/z3Lg1qpVK9vnqyBz3Str5m7b5r2ePHSo/WWT
uWbEa+aqgwdFzjlH5Omn/9pH5sINMjIyrPydO3euzJ49W9LS0oyt7Ufmuldg
5np+Pax2w7vvmimbzDUjnjNX7dwp0rChSPfu3nHkZC4SHZnrXr7MXbrUu05Q
GF3uYobMNSPeM1fpOLbmzUVuu01k8uTpZC4SGpnrXpq5lSt3sq4n63q4JpG5
ZiRC5iodEnnjjTqOaJvcdNNdxsoF3IbMda/nn98lhQrtlO++M182mWtGomSu
0rFDzZuv8/xb/yKGp7gFXIPMdadBg7R/8jE544wrHCmfzDUjkTJX6f3c8877
UOrW1bXPjBcPOI7MdRcd2/jMM95+J0uW/B7VmvWxQOaakYiZq/dzdb4qnUPN
gR814Cgy1z1+/tm73rzndGiNb4xmzfpYIXPNSNTMVbNne+dnTk3VsRvGqwI4
gsx1nq79/coret4XeeONv+bMI3PNIXPNyDpWSIdEtm3rva6zZo3x6gDGkbnO
0jVYWrTQn4PIunWZHyNzzSFzzchpfO6bb3rXAtT/A/GMzHXOpEne88zgwd75
ArIic80hc83IbU4Mbec2aOBt99q8bDjgGDLXvO3bRW6/XeSCC0TS0nI+jsw1
h8w1I9Q8VMeOee/v6pziOgdMsLWJgPyMzDVn717vnO/ly3vPK7ksnWwhc80h
c80Id+5HPSVdeaVYY4pmzjRQMcAQMtd+hw+LDBniXZ/gnnu893DDQeaaQ+aa
Eel8y5984r0e1KyZyOLFNlYMMITMtY+OtX3tNe9cyR06iKSnR/Z8MtccMteM
aNY40F/DsWNFqlcX0adu3GhT5QADyNzQdu3aJeeff740aNAgrO3CCy+TGjUG
yGmn/S6lSy+Uc8+9NeznBm5nnXWW5/mlHXnPZK4ZZG749HrRs896+x3qS9i4
rDgSwKlTp2Tnzp2yx/BEpGRuaJoB+u/0/fff57pNnfqz3HTTLilV6rhceeVe
eeut9JDPyW2bMWOGFC5c2JH3TOaaQeZGTvtFvPqq916v56OwjBzpXbsICGXz
5s3Su3dv6/qhnmt8a9WXKVNG6tevLykpKXLA5k7zZG5omgFXaoeOIPTHo2MK
df6oWrW8n8N1bflY+Oabb8hcQ8hcM2K9fu6XX3rv25QrJ9Ktm8hPP8XspRFn
NmzYIDVq1JCaNWta2TrS82Ft6tSpMm3aNBk1apT06tVLkpKSrDz+9ddfbasH
mRta1szVnH3vPZGuXUXKlhVP21bks8+880nFEplrDplrhl1r1m/dKjJggPee
b716Ik89Jda604BPjx49JDk5WY7mMmDk2LFj0rJlS+nXr59t9SBzQ/NeW77N
mp/xqqtESpb0zoms17R0rK1dyFxzyFwz7MpcH/2VXbRIpHdvkTp1vPM5d+8u
8vnn3j6NSFxNmzaV0TroO4RJkyZJkyZNbKsHmRucXh+eMUPkscdEatc+KEWL
7rXate+/L3LwoJk6kLnmkLlm2J25WencVjpO77LLROrXN1YsXCg1NVU6deoU
8rguXbpIu3btbKsHmev9/Kvrwg8fLnLrrd77sjpvxXXXiQwcqO3ZJdK8efD7
uXYic80hc80wnbmBWK83sa1YsUJKlCghrVu3ttqyixYtkvT0dFm7dq0sXrxY
pk+fLm3atLHOQfNt7BSfSJl75Ij+u4tMnSrSt6/IzTd7+z16fgzWPK8PPCAy
YYLIL79kfl5ufajsROaaQ+aa4WTmApqvLVq0kEKFCvn7LAdurVq1knnz5tla
h/yWud95GqRfffVV0G3OnG9k4sQl8sILqyQ1NV3uvnuD59yyTRo23CvVqx+W
okVPyplnHvS0WXdKp04b5Omnf5Jx45Z5nvd1jq+p23BPA/jyyy83/l7JXHPI
XDM0c/W8ltvfm13bH3/8Yfz9wp0yMjKs/J07d67Mnj1b0tLSZLcuLGmAGzNX
u5Xt2OFtb2rfwy++8N5bffjhlZ4seERq1JgsVarM8pwnF0rp0j9K8eJbPNl0
yPPZ5YinzbpRypVbaj1eq9ZYOeecwVKv3kNyySW3S3LyFVZ2Rrrp9YjyerHZ
MDLXHDLXjL59+1q/W9H8HeZlq1Spkud8UEsee+wx45ud1ykRe/v375fDOgFL
hPQ5W7duDbk1atTIOrdHYtWqVVKwYEGpU6dOzLdzz63r+ZvM8GTNHk+7dIMU
K/aDnH76t1Kq1BxPmeOlZs3p8sQT+zxt2b3y9tu7ZebMnbJw4XZZs2arbNmy
xZZt8ODB1nxQdr1+TtsXng8beg3EdLm66XlRx4+bLlff76effmq83FKlSsnA
gQONl6s5cOuttxovV8dDXHLJJcbL7d69u5xxxhnGy9X+qvp5rn///ka3Pn36
WH9LyD/KlSsnHXTQd4T0Gk61atVCbsWKFZPJkydH9NraLtbfI80hk5vvGnw4
7yuWm/4MtGzT5VasWNH6+ZguV7fTTjvNkXL1/ZYsWdJ4uU79bvnuI5ku9/TT
T3ekXP07dqJcvY5RtGhR4+VWqVJFmjdvHvH5G87RazETJ050uhoAAAAAAETE
qTUOAABIBG5Y4wAAgHjnljUOAACId25Z4wAAgHjnljUOAACId25Z4yAaY8aM
se5D6/XwRNieeeYZue+++xyvh8lNx4Q7XQeTm/58Bw0a5Hg9TG369/voo486
Xg9Tm84xpvfwkLjcssZBNPR8rPPG6fXxRNjatm0r1atXd7weJjfty+d0HUxu
2rdC/96croepTed81TnonK6Hqa19+/bWzxiJzQ1rHETjySeflGeffdbpahij
8//qzymRJNp8dfq3pvOdJwpt9z3++ONOV8OYJUuWSOPGjZ2uBlzCyTUOokHm
xj8yN76RuUD+QebGPzI3vpG5QP5B5sY/Mje+kblA/kHmxj8yN76RuUD+QebG
PzI3vpG5QP5B5sY/Mje+kblA/kHmxj8yN76RuUD+QebGPzI3vpG5QP6xfft2
2bFjh9PVMObgwYOybt06p6th1MqVK52uglG//fZbQq2bqWt1b9u2zelqGHP4
8GFrDgQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAyMmpU6ecroJR
J0+edLoKxp04cUIyMjKcroatEu33WOnPVH+2iSIR/3YRH44dOyYvvfSSXHrp
pXL66adLs2bN5LvvvnO6WraaOnWqXHDBBVKkSBEpX7683HLLLbJp0yanq2U7
PU9de+210qlTJ6erYovx48fLFVdcIcWLF7fWnfnyyy+drpIRuqZDhQoVZNas
WU5XxVY//vijXHPNNVK6dGkpVqyYXHzxxTJnzhynqwVEZOTIkVK2bFkZNWqU
LFy4UG699VYpWbKk/Pzzz05XzRYff/yxtbad5s78+fNl9OjRctZZZ8mFF14Y
1+2/o0ePSrdu3fzvPd589dVXctppp8mrr74qK1assN6rZm+8r6mkeVuvXj3r
5xrPmbtnzx6pXr26NGrUSKZMmSKff/65XHfddVK0aFFZvny509UDwqJrYlWt
WlV69+7t37dv3z4rc+N1Td3WrVtLUlJSpuuP77zzjnXO0vN2PFq2bJmcf/75
Uq5cOalcuXJcZm7dunWlY8eOmfZpFnXt2tWhGtnvtddes/5W69SpE/eZO3bs
WOs96tq5PnquKlWqlDz44IMO1gyIzK5du2T//v3+7zds2GBdc33++ecdrJV9
ZsyYYX1GDrR48WLr73nmzJkO1cpe2ua76qqrZP369fKPf/wj7jJX7wvoz++9
997LtL9Pnz7WZ8p4pe0+Xate14OO98zVaxevv/56tv36+fmuu+5yoEZA3uh9
XW3n6f2SatWqWefnRNGzZ0/rc8bWrVudrootdE1zn3jM3Hnz5lmZ8+2332ba
r+3AwoULx21/G9/P1feZI54zN5hvvvnGet96XwzIb4YOHWr9/uqm13ESxYIF
C6z+GIHX1+NZPGbuRx99ZP3e/vLLL5n2T5s2zdof+JkjHiVi5uq1ufr168t5
550X1/0wkH9t3rzZarv6tr1792Z6fOPGjbJq1SpJTU21+qIMGjTIoZrGhr6/
wPer7z8rbRdpv2Xt63rkyBEHahk7ep0i8P3qpvuyisfM/eSTT6zMWbt2bab9
vswN9rOPJ4mWuXof9/LLL7f6J6SlpTldHSAoX99G3zZgwIAcj23Xrp11fTk/
j3McOHBgpver7z/Q//73P6v/yZVXXikHDhxwqJaxo/3MA9+vbj/99FO24+Ix
c7///nvr/S5dujTTfr22rPsD+yvEo0TK3N27d1t9l3VsVNafN+AmH3zwgYwb
N86/aZ+EP//80/o71f8H0vsj+jesbd/8Sj//Br5fff8+ev+vRIkS0rZt23zf
vvXRn2Hg+9Ut689VxWPm6n34YH3g+vXrJxUrVnSoVuYkSubqeKEGDRpIjRo1
rLG6QH6zZs0a62/1ueeey7Rf503Q+THicV6b1atXW+/t9ttvj8v3F0o8Zq7S
OU7uv//+TPu0PaTzncS7RMhc7QfXpEkTqV27tjW2Asiv9F5mlSpVrH4oW7Zs
kf79+1t9Pfv27et01WzRqlUrq407YsQIaz6MwE0/g8S7eM1cHUeic2DoeCG9
3zd48GDrex1HE+8SIXPffPNN6z3quLesf7ezZ892unpA2PS6nM4T4bsHqH14
dVxjsP43+Z3vGmRO25gxY5yuou3iNXP1mkVKSoo1L5H+LHWOjAkTJjhdLSMS
IXObNm2a49/t1Vdf7XT1gIjpvRJt58Vj1iJx6P3533//3elqAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACC6NGjhzRr1kz27dvn3zdg
wABJTk6WXbt2OVgzAADiy08//STFihWTnj17Wt8vXLhQChUqJC+//LLDNQMA
IP4899xzUrhwYfn222/l3HPPlRYtWsipU6ecrhYAAHHnxIkTcskll0jJkiWl
bNmy8vvvvztdJQAA4taUKVOkQIEC0rFjR6erAgBA3Dp8+LB1Tbl27drWvVy9
pwsAAGIvJSVFSpUqZV1Tbt68uZW/msMAACB2svZTTk9Pt/oxaw4DAIDYOHLk
iNWmbdy4sZw8edK/f+DAgVxjBgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABDX/g+q
MgmK
    "], {{0, 411}, {477, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyNVV1s21QUPomvU6QWP5V1dFJnxs+qqavSDUGraYP8LclW0shtOjYhgePc
xKZubGwnXac9TUggXijwhiYh/t4qISExjZ9pGw/sZWhIU0e7VUggHjbxI6RJ
e4EuHF87tdelDEe+/vyd755z7vHJvY+VDakaBQD7IRwkeS5hWfL8JMGX5LxD
yxEEy104QNeybJp6VASYrTuWlE2KLx49JnatQBQehW7oh25Zsc1EsTjuql0t
3HfduQauQ7i6u7P9P6/uCrUVgIibqFGxlVnExwH404ppOZhfL/Kjc47pYjeH
XgsTRPyKi2sedlxc9vCbTDMlpRCfRiwoqlxBvIh4qBziayHs5cCu3iytU0tT
RLcWRcuoajoNpfsA8/+8ZvVGO952vHvsmcnD+BzEtb9ekdMuHka8qMiZScRP
IL7e1KYLPr5rOkkJ8VMA0R2NmVIC8S7Euap1sOT5iVpqI9fG759Qp44g3oL4
23q5MOHPXVbsFNYMdiC+q9K8W98BAE7UnPyUN5c7YBnShBeXq1ZoOuPWEfFb
M8ZhyfPJnbGbk5m2zxNqquDzl1+VDxUR9yP+hepZyYvF/WM6RT8HMlDXC+Ne
LJKmNlsv4x11KufFJbqDH9SbSxaq2sG8r/9ctXKSj6+bOutRzI2PWg2p5On5
YdnKZD2ffJHWS75/vgnTERkoGFDGUYE6rIEIEmQhiU8TLLRUQQMdGYpWigzF
t7ZmN5tnwwzyGjSZzcaxyJTezMBfjfm4ybQKpAY+hQayKvyOrBrSpfCtgVxt
Ez9eLrd8PwbpI3GyF+99ZJzsJ6NkDETyHHmeHCBpZMfIvvW5xdCK3Hxurft5
DSNSpptG3UW0OyDj+DMqDFxTx6os9DcGA8sp62VNufL2X6Faaaw2QbXCFZ14
UM35X/mb/BKOK/xqoOBv8Kv4W7lnLcZ9Vabt6mxYc2dVAm0642bx1pjFDuUd
8nHp5DdbAz9L5OxLV3sunazWF/oD1q0CfaNwpwCnhgI2/mP8j/hS/MP4J/Hf
uPe4L7hz3JfcV9xlELkL3EXuPPcd9xn3dehbbd5D69+eZd7O27V0qjV2pZAU
tgmPC2lhu/CkMB74E/qEESEn7ETLtvXvFo4Xrp4GR3Fs16dzLE8X6oDIw9gB
2ib/qhKqNJhjSpv1Wx3mN2j8mWSAjJD8hu4edXu+rYhlYulYAsTYrthYbCR2
yMXtqLGdaBvDMXNPdyqbrJQ69Lh7nkDKMOctraY64p54/FkxgUcbFfN1ZXhI
lHVdZCZbtKhNrSatDIN7bnpb+m2JnYeRLVcCznkBYP+fuPf9EHDHGgCLNkDf
0wE3iHvlIx8AnH1GaVhN/4yIRL7Ho7y6d4/31pPE/eunVus27mNd7wKsvdNq
/f1Rq7X2MfpfBbig/wvsj4TS
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{477, 411},
  PlotRange->{{0, 477}, {0, 411}}]], "Graphics",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.6974061867874413`*^9}],

Cell[TextData[{
 "If we choose ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"q", "(", 
     RowBox[{
      SuperscriptBox["x", "\[Prime]"], "|", "x"}], ")"}], " ", "=", " ", 
    RowBox[{"N", "(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "\[Prime]"], "|", " ", 
       RowBox[{"\[Minus]", " ", "x"}]}], ",", " ", 
      SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], TraditionalForm]]],
 ", the sampling becomes more symmetric around ",
 Cell[BoxData[
  FormBox[
   RowBox[{"x", "=", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " according to the following histogram:"
}], "TextNoIndent",
 CellChangeTimes->{{3.697407418300827*^9, 3.697407470077114*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3Qm8TPX/x3FbluzZZbkUoiiJFjfJUrSItt/PjxItSAnhV4ofEpWKym2R
JOqiopJUlEQpIVSKULLFRWXfff7z+c5/xtx1tnPO3DPzej4ep+49c+Z+v+Pe
mff5nvNdanR74MZ78uXJk+fBwp7/3Nj1v1f269f14ZsKeL5p8XD/u7vl93zx
at48eTZ4Nt0pAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAABAnn32WbnyyivNtmHDhkyPf/zxx/7HP/roI//+J5980r//
xIkTEZf/22+/yT///BPx8yHm3//hhx+WBg0ayBlnnCFNmjSRefPmxbpaAIAM
evToIXny5DHbqlWrMj0+ceJE/+Ovvvqqf/8dd9zh33/8+PGwy92/f7888sgj
UrhwYVm3bl1UryHRjRgxwv+78G2LFi2KdbUAABlEmrnPPfectGvXzmyRtHOH
Dh3q/7lkbnSuu+468+9YoEABWblypWzcuFGOHj0a62oBADKINHOD0evFa9as
kR07dmSZyaFmrrah9fpzKG3ptLQ0+fvvv0Ouo6+ee/fuzbRf961du9aUffDg
wZB+1ubNm+XIkSPp9p08eVL++OOPiK4FqFBef8OGDc2/Y7169SIqAwDgjEgz
t3v37lK0aFGzBebB1KlTpWbNmumuc1aoUMG0i31uvPFGOe200/yPFylSRCpW
rJiuXL2P3KZNGylevLg5plChQtKqVSuTgxl9+eWXUrt2bXNcvnz55OKLLzY5
VaZMGVO/xx9/3H+stgl1X4cOHeSpp56S/Pnzm7r4jvnll1+kadOm6epfsGBB
6dKlixw6dMj/c7QM/Tn33nuvTJs2Tc4880xzrF4rv+eee8x5RkpKipQtW9bs
L1GihPTp0yfk30sor/+zzz4zddDX7Hvt+n2zZs2y/Jn6u/T9zvQ+vJ4PqMWL
F0uxYsXMfr0XnPG8AQBgjcDMHT16tLz99tvptp49e4Z8P1czIG/evGZfuXLl
THaVKlXKfK/758+fb4675pprMt1/1EzymTNnjsm5jMf48nnhwoX+Y5csWWJy
M/Dn6P81w337tU3to7nlq5+vrrrNnj3b5KRmjm9f5cqV/Xmm2+233+7/Odpf
yVeO/l/7Lmku+o4977zzzP99r9+3vfDCC0F/J6G+/k8//TTLYxo3bpztz77+
+uv9x+k5gbbha9Wq5c/1H374IWj9AACRCczcYFuwzNX2nS+rfG2ow4cPS/Pm
zaVt27Yybtw4s2/r1q1y//33+5+vfWx9faY3bdpk2oq6v2rVqvL666+b69Pa
T1rbYrpfM8J3vVfbdL6f88orr5j7mNpuq1Onjn////73P3+9fZmr22WXXSZz
58417d1jx46Z9nLdunVNu9d3frBnzx6pVq2avz4+vsz1ZbrmtV5DDszdAQMG
mH+bZcuWmXutuu+mm27K8fcRzuvXdrcer9eUdf8555xjvt++fXu2P1+vv/vO
E7QN3bFjR399A69FAACsF5i52qbLuAW2BYNlrmaMb1+jRo1k2LBh8tVXX2V5
LzK7+7mB17LHjBmT7jnazvQ99sknn5hroL52qGZsoFGjRgXN3KVLl2b5b+Lr
f6Q/X+t/4YUX+jPKx5e5ui/wfrVmtq9dr+cbPr62pP675CSc1+9zwQUXmH31
69fP8Wf76HMDf6+66TmR7zwJAGAPK8cKaXbqNduM7WO97nrfffeZNpZPdpkb
mCt6TzbQjBkz/I/pdXC9t+n7vlevXumOXb58eY6Zq+1ObdtmtGXLFnniiSdM
+zmwzaqbtjN9fJmbMet9+az3sAP5clGvOecknNef8WeHmrkq8DqDvq6c2sYA
AGtYPT5Xr69qezcpKSlT9p5//vn+nMsuc7Vvlm+//qxAM2fOTJc5v/76q//7
Bx54IN2xes04p8zV+6wZ/fjjjyYr9XG9n6r3nbWt2bp1a7Mv8J6zL3P1NQXS
dqzu1/ZuoFAzN5zXn/Fnh5q52p4NbO/rNn369JCeCwCInNWZu2vXLv+9WW2n
vfzyy+nurfr66ARmrmanz6RJk/z7n3/++XR1CSxTr4/qtVtfP6mM12x79+6d
Y+aWL18+02u96667zGPavl2/fr1//w033JApp4NlbsZxO6FmbjivP+PPDjVz
x44d6/85vmvMpUuXNm18AIB9rMxc3zjRkiVLyrZt2/zH9uvXz3+sjmFVOjbH
t0/7K/35559mv2ad7x6tjjnSvtM6Vlb7X/n6JJ999tn+PlS33nqr/+foGCT9
WQMHDjTjXnLK3EqVKmV6rb7+WKeffrrs3r3bXx9fudq3yseuzA339Qf+7FAy
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
ACJB5sIukWSurr1XubLImjXhlxdJ5h4/LlKpksiPP4ZXFpkLIBJkLuwSSebq
9C8XXBBZeZFkrho2zLu2fTjIXACRIHNhl0gyV/sqjxoVWXmRZu62bSKlSons
3Rv6c8hcAJEgc2GXcDNXr/OWLSvy+++RlRdp5qqbbxZJSQn9eDIXQCTIXNgl
3MzVdW2jWUIrmszVKVbPPTf048lcAJEgc2GXcDO3WzfvfI+RiiZzlQ63DXVu
ZzIXQCTIXNglnMw9elSkdGmRLVsiLy/azB07VuSuu0I7lswFEAkyF3YJJ3M/
/FDk8sujKy/azN2wQaRChdDW+CNzgfhw4MABWbZsmfz6669yXDuV2IzMhV3C
ydzOnfX46MqLNnOV3tP99tvgx5G5gLs8/fTT8uijj6bbN3LkSClUqJB//dyz
zjpLPv30U1vrQebCLqFm7qFDIiVKiKSlRVeeFZmraysMGhT8ODIXcJfbb79d
2rZt6/9+4sSJJmdbtmwpr732mowZM0aaNGli5m1fsWKFbfUgc2GXUDP33Xe9
8x5Hy4rM1TZuKP2XyVzAXTJm7qWXXmryL6OGDRtKly5dbKsHmQu7hJq5t9wi
8uqr0ZdnRebqvVy9p6v3dnNC5gLukjFz69ataz6jMnrxxRflgkgnwwsBmQu7
hJK5+/eLFC8u8tdf0ZdnReYq7bs8ZkzOx5C5gLto5jZv3lyO6iAJj4ceekge
1ptJGdx5553SyooLb9kgc2GXUDI3NVXkmmusKc+qzNU+1J63Zo7IXMBd9Hqx
3r/VPlONGzeW1q1bS9GiReX77783j2/evFl69OghBQsWlPHjx9tWDzIXdgkl
c9u1E5k82ZryrMpc7dMVrO1N5gLucuTIEdM36vXXX5fevXtLs2bNpGTJkvLO
O++Yx19++WWTyb169ZITusCZTchc2CVY5v7zjzfbwllbICdWZa664QaRN9/M
/nEyF4gPx44dM//funWraevajcyFXYJlrud0Uzp0sK48KzN34kRv367skLkA
IkHmwi7BMvfqq0WmT7euPCszV8cKlyyp16OyfpzMBeLT3r175eDBg2E/7/ff
f5e333476FarVi355JNPbKg5El1OmevrrxzBn3a2rMxcddllItlNSUPmAvGp
VKlScktOF7my8cUXX5jnBdvOOOMMk72A1XLK3PfeE2nd2tryrM7cJ54Q6dUr
68fIXCA+DR48WCZb1bEzC1xbhl1yytzu3UWeecba8qzO3F9+EalSJevHyFwA
kSBzYZecMrdqVW+mWcnqzFW1aon8//C9dMhcwN1OnjwpaWlpsnv3bkfLJXNh
l+wyd/VqkerVrS/Pjsx98EGRoUMz7ydzAffZsmWLDBw40PP5U10KFCjgX0+o
RIkS0qBBA+nXr5/s27fP1jqQubBLdpn79NMiPXpYX54dmbtwoc55nnk/mQu4
y8aNG6VKlSpStWpVk636+ZSamipTp06VlJQU6d+/vyQlJZk8Xr9+vW31IHNh
l+wyt2VLkQ8+sL48OzJXl7AuU0bnhUu/n8wF3EXnl0pOTpbDhw9ne4zOxaxr
+w0ZMsS2epC5sEtWmatjhIoW9f7fanZkrrr9dvGcB6ffR+YC7tK0adOQ5lGe
MmWKWUfXLmQu7JJV5mr7Vtu5drArc2fMELnqqvT7yFzAXQYMGBDSurhdu3aV
DlZOkJcBmQu7ZJW5eh9X7+fawa7M1TZ5sWLp54UmcwF30fUNihQpIm3atDFt
2cWLF8vatWtl3bp1smTJEpk+fbq0a9fO9K1asGCBbfUgc2GXrDK3WjWRn3+2
pzy7MlfpUteBU8eQuYD7aL62aNFC8uXL5++zHLjpurnz58+3tQ5kLuySMXM1
azVz7WJn5r7yikjnzqe+J3MB99J1/TR/582bJ3PmzJGVK1fKrl27HCmbzIVd
Mmauzjul80/Zxc7M3bpV5IwzRHzLapK5ACJB5sIuGTO3VSuR99+3rzw7M1dp
xC5Z4v2azAUQCTIXdgnM3AMHvGOE7Jzixe7M7ddP5LHHvF+TuQAiQebCLoGZ
O2uWSIsW9pZnd+bqun7Jyd6vyVwAkSBzYZfAzO3ZU2T0aHvLsztzDx3yjhna
s4fMBRAZMhd2CczcpCSRn36ytzy7M1fp3Bi69i+ZCyASZC7s4svcNWuyX4fW
Sk5krva91nk9yFwAkSBzYRdf5o4ZI3L33faX50Tm/vijSM2aZC6AyJC5sIsv
c/V67MyZ9pfnROaqypVFZs9eQ+YCCBuZC7to5t5zzwNmjFDgXMV2cSpzu3YV
efjhLWQugLCRubCLZu4116RI8+bOlOdU5k6dKp7XtIfMBRA2Mhd20cw977wF
8uSTzpTnVObqtKxFix6Xc8+9wPayAMQXMhd20cwtXnyn6XfkBKcyV5177gGp
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
abJ7925HyyVzEcz994s89VT4zyNzM/PNKxJu90gyF26jfYD1nm2ZMmXM58DI
kSPlySefTLc5TfsmDxw4UKpXr27mwfKNHS5RooQ0aNBA+vXrJ/tsnjCOzEVO
9BZipUo6X3n4zyVzs9axo8j48eE9h8yF2+ia9ZplOW1O2rhxo+nPVbVqVZOt
+vmkfZmmTp1q1j/S+ZiTkpJMHusaSHYhcxOLzsem55uhbt27vyEVKqSF9Rzf
dv311/vnNHeCWzJ32jRvn7RwkLlAdHr16mXmfz58+HC2xxw9etTM+5hx3QMr
kbmJQ8ec6XWUhx56KOTtoosWef5O54b1HN+m93Lq1q3r2OtzS+bqFDzaJ+3A
gdCfQ+bCzfbv32/WOdDrtjllnp10fufxIVxgmjJlijRp0sS2epC5ieOA50Ne
czBUel25alWRDMtuhEzHuIU7hjUabslc1bq1SDjTzZK5cCOd81H73Pvumy5Z
skQeeOABM7/igXBOOi0wYMAA6RLCJAM6H3SHDh1sqweZmzjCzdxvvxWJpplK
5mZPp3u/447Qjydz4TY6v2LDhg3Nuni6rp++PzVz9b2j43bvvvtuR+uzYsUK
8/nXpk0b05ZdvHixrF27VtatW2fqNX36dGnXrp3pW6VrIdmFzE0c4WZu//46
Pjzy8sjc7OmyJmXKiJw4EdrxZC7c5qOPPpLy5cvLP/8/sF/7TC35/wnb586d
K5UqVXJ8nhfN1xYtWki+fPn8be/ArVWrVqbPi53I3MQRbuZWr67zLUVeHpmb
swsuEFm0KLRjyVy4ja4Pf+WVV/q/D8zcv//+22Tcb7/9FpO6aRtc83fevHlm
zsaVK1fKrl27HCmbzE0c4WTu0qUitWtHVx6ZmzNdF1GvJYSCzIXbfPDBB2Yt
Wp13QgVm7ksvvWSu4Wa1vk+8I3MTRziZ+9//igwaFF15ZG7Oli8P/byGzIXb
aB/lmjVrykUXXWTGwRYrVkzefPNNefTRR82a9bfffnusqxgTZG7iCCdzdf2b
FSuiK4/MDe7MM0XWrAl+HJkLN9LxQdqPKuN90/bt25vry4mIzE0coWbu99+L
nHVW9OWRucH16hXavJpkLtzqxIkT8t1338lbb70l77zzjvz888+xrlJMkbmJ
I9TM1WvKem05WmRucF984e1LFQyZC7dZvny5f/7Xf/3rX57PlP+aNfIO6UJl
CYzMTRyhZm6tWiLLlkVfHpkbnA6VqFxZJNipP5kLt9D57nr37i158+Y1m65x
ULFiRf915QoVKsjMcCaEiTNkbuIIJXN1bJCOEbICmRuaAQOC91cjc+EW2qbV
bH3sscfSrZOnnz869lX7VGmf5a+//jqGtYwdMjdxhJK5OgdGqONXgiFzQ7Ny
ZfDzHDIXbqDzOul8EyNGjMj2GF1HoE6dOmZOyERE5iaOUDJX53rUOR+tQOaG
rl49kZxO+8lcuIGui6dtXN/cU9nRdXuqVavmUK1yFzI3cQTLXF3LQNc0sGo6
NjI3dI8/LpLTUsNkLtzghRdeMHMpBzNhwgQ57bTTHKhR7kPmJo5gmTtsmH62
W1cemRu6jRu98y8fO5b142Qu3ODpp5828ygHo3NkaHs4EZG5iSNY5mo8Wtmt
gcwNT9OmIrNnZ/0YmQs3IHODI3MTR06Zu3atiL5VrFzmg8wNz4svinTsmPVj
ZC7cQDNX51i+4oorctzq1q1L5iLu5ZS52s3w/vutLY/MDY8ua1KihMj+/Zkf
I3PhBtqHKjk5OeQtEZG5iSOnzNW5kL780tryyNzwXXutyJtvZt5P5gLWyWnd
Xp3TQze7kLmJI7vM1XkwtNu+1ctHk7nhS00Vads2834yF4iefj4kJSWZ69+a
fV999VWmY3T9Bf3ssguZmziyy1y9pqxruVqNzA2f51ckOtTi/5cc9SNzgejM
nTvX3EPW+8mPPPKInHXWWWb+Dh3fFIjMhVWyytzDh71jVHSsitXI3Mh07qzj
HNPvI3OB6Oi8V1dffbX/e72+PHjwYJPDkyZN8u8nc2GVrDJXr2VedZU95ZG5
kZkzR+TSS9PvI3OB6Og8zxnbtGrQoEFmfo558+aZ78lcWCWrzG3ZUmT6dHvK
I3Mjo/NilC8vsmHDqX1kLhCddu3aSYcOHbJ87LbbbjPzZ61atYrMhWUyZu5v
v4mULSty5Ig95ZG5kbvvPpHHHjv1PZkLRGfatGlmPaO77rpLvv/++3SPHfOc
6N5www1SqlQpc5+XzIUVMmbuI4+I9O1rX3lkbuT0LXnOOae+J3OB6A0fPty8
b/tm8cF3+PBhueOOO8z9XTIXVgjM3OPHvWul67oGdiFzo1OjhojvdJzMBaxx
6NAh+fPPP7N9/Ntvv5UPPvjAtvLJ3MQRmLk6r6/nV28rMjc6upZxv37er8lc
wBl79+6NaE6M3bt3m2vWwbb69evLF198YX3FkesEZm779rqelr3lkbnRWbPG
Owf2iRNkLuAUvacbybVlbRs3bNgw6KafU1OmTLGh5shtfJm7fbv+XYns22dv
eWRu9Fq18s4FSeYCztAxu5MnT7bt53NtOXH4MvfJJ0XuvNP+8sjc6M2aJdKk
CZkLxAsyN3H4MrdWLW+/WLuRudHT68pJSSL//vczZC5gIZ2HKi0tzdyHdRKZ
mzg0cwsWbCn16jlTHplrjaef1nFDS8lcIEpbtmyRgQMHSvXq1c1YXR0XpFuJ
EiWkQYMG0q9fP9ln8003MjdxaObmz/+mOPXRTeZa4++/xVPWQRk27GVHygPi
0caNG6VKlSpStWpVk63jxo2T1NRUs+ZvSkqK9O/f36w5pHm8fv162+pB5iaO
P/884Dmn22PWRncCmWud+vW/lquv/tqx8oB406tXL0lOTjZzX2Tn6NGj0rJl
SxkyZIht9SBzE8dzzx3xtHNnOFYemWud2257QooX32/mYgYQvqZNm8r48eOD
HqfjeJpox0WbkLmJo2HDE1Kw4HWOlUfmWkf7LZ999iaZOtWxIoG4MmDAAOnS
pUvQ47p27ZrtWghWIHMTw6pVIlWrnpDChU93rEwy1zqauXfc8YFcdpljRQJx
ZcWKFWbcRps2bUxbdvHixbJ27VpZt26dLFmyRKZPn27WHtK+VQsWLLCtHmRu
Yrj1VpFRo45kWsvPTmSudTRzn356jFSrJrJ8uWPFAnFF87VFixaSL18+f5/l
wK1Vq1Yyf/58W+tA5sa/X3/1rtmXlpZ5/Vw7kbnW8c2JofOZhHB5DEAOjhw5
YvJX16mfM2eOrFy5UnY51LmUzI1/3bqJDBuW9Zr1diJzrePLXB2+X7KkyM6d
jhUNwEJkbnzbvFmkdGmRv/4ic60Uq8xVOm/n4487VjQAC5G58a13b+2v5/2a
zLVOLDNX+8OdeaYwbghwITI3fun1R10/yLc8M5lrnVhmrmrWTOTttx0rHoBF
yNz49cgjIj16nPqezLVOrDP3nXdELr/cseIBWITMjU979oiccYbI77+f2kfm
WifWmavXlRk3BLgPmRufRo0S6dw5/T4y1zqxzlw1YYLIlVc6VgUAFiBz48+h
QyLly4usXp1+P5lrndyQucePi9SuLTJ3rmPVABAlMjf+jBsncsMNmfeTudbJ
DZmr9L5uo0a6/rZjVQEQBTI3vuh9vqpVRb77LvNjZK51ckvmqgsv9GYvgNyP
zI0vkyaJtGyZ9WNkrnVyU+bqtWW9xqzXmgHkbmRu/NDri3XqiHz+edaPk7nW
yU2Zq7QvlfapApC7kbnxY8YMkUsvzf5xMtc6uS1zlywRqVLF238OQO5F5saH
w4dFatTIuQ8rmWud3Ja5qn17kWeecahCACJC5saH4cNFbrwx52PIXOvkxszV
sWE6RkznQwGQO5G57rdxo3fOqT/+yPk4Mtc6uTFzla6tO2SI/fUBEBky1/30
muKIEcGPI3Otk1sz13f+lZbmQKUAhI3MdbdPPhGpWVPkyJHgx5K51smtmat0
/cYHHrC5QoDLNGrUyHz+hbJ16tTJtnqQue6lOXvWWSIffxza8WSudXJz5mob
t3Tp4PcagESycOFCKVeunJQsWVJGjx4tzzzzTLbbhx9+aFs9yFz3evzxrOd4
zA6Zax2nM7d9+/aSJ08eKVu2bEjb6ac/IQULfhTy8Rm3SpUqec7pQrh4ArjI
2rVrzWfgE088EbM6kLnutGlT5rX6giFzreN05jZs2FCuu+46Txs2LaRt27Y0
z7/9MRk7dk/IzwncihUrJn///bdjrw9wytNPP23+vnft2hWT8slcd7rpJpFh
w8J7DplrnVhk7g3hXNTw+OEHkTJlRLZsCb88vf5G5iIeHT9+XObPny87duyI
SflkrvvMmyeSlOSdByMcZK513JC5SvuzX3VV+OWRuYA9yFx3OXpUpFYtkdmz
w38umWsdt2Surnug6w69+mp4zyNzkaj27t0rBw8eDPt5e/bskV9//TXodv75
58uCBQtsqDnsoLf+r7susueSudZxS+YqnZ9KrzGH04+ZzEWiKlWqlPnsCteM
GTM87aFaQbfChQvL5MmTbag5rKb353Ruv/XrI3s+mWsdN2WuGjUq+zUes0Lm
IlENHjzY1kzk2rI76Mef3sP1fNRHjMy1jtsyV68xN24s8vLLoR1P5gL2IHNz
P10X9/rrdV6E6H4OmWsdt2Wu+uUX7zXmUMaXkbmIdyc9H6w6Lm737t2Olkvm
5n56D1fXxdX+U9Egc63jxsxVo0eLNG/uPY/LCZmLeLRlyxYZOHCgVK9eXQoU
KGDmmdGtRIkS0qBBA+nXr5/s27fP1jqQubnbl1+KVKggsnlz9D+LzLWOWzP3
xAl9z4uMG5fzcWQu4s3GjRulSpUqUrVqVZOt4zxvgtTUVJk6daqkpKRI//79
JSkpyeTx+kg7zYSAzM29tm8XqVjROx7XCmSuddyauWrdOu953GefZX8MmYt4
06tXL0lOTpbDOUxscPToUWnZsqUMsXFBTDI3d9I+L82ahT/XVE7IXOu4OXPV
okUiZcuK/Phj1o+TuYg3TZs2lfHjxwc9bsqUKdKkSRPb6kHmxtbYsWPN/QT9
jAvcChV6VgoUmC8lSpTM9Fikm2ZS3rx5HXttZK51rM5cNW2aSJUqItu2ZX6M
zEW8GTBggHTp0iXocV27dpUOHTrYVg8yN7Y0l958803z+ebbpk7dJ5Urn5AN
G/5Jtz/abdOmTSbfnXxtZK417MhcpeN2zz9fZP/+9PvJXMSbFStWmOt8bdq0
MW3ZxYsXm3WG1q1bJ0uWLJHp06dLu3btTN8qO+eJInNj69Zbb/W0N6b5v9d7
bTrvhR2/8p07d5K5FomXzFV33SVyzTXe+xk+ZC7ikeZrixYtJF++fP4+y4Fb
q1atzPoHdiJzYyswc1etEilXTucQs6csMtc68ZS5mrWtW4v07HlqH5mLeKZr
Q2v+zps3T+bMmSMrV650bG0/Mje2fJlrd94qMtc68ZS5Sock1q/vHQuuyFzA
HmRubGnmPvnkx7bnrSJzrRNvmat0nd1ixUS0ayeZC9iDzI2tq67qL8WLH7I9
bxWZa514zFyVliaifyJFivQgcwEbkLmxo9eTCxX6R/r2/cqR8shc68Rr5qqf
fhLJm3eTDB4c/hqiAHJG5sbGypXe/smXXfZMun7LdiJzrRPPmauKF6/t+d0d
k+7d0/dnBhAdMtd5Oude0aLedfkyjhWyE5lrnXjPXL2fu3nz33LVVd5xRBnH
7wKIDJnrrMGDvffLtJ2ryFzrkLnW8fWh0jbunXeKXHCByJ9/OlY8ELfIXGdo
d5T27UUuukjXtzi1n8y1DplrnYz9lh9/XKRaNZHffnOsCkBcInPtt3SpSI0a
Ir17Z14Dl8y1DplrnazGCr35pnc9onfecawaQNwhc+31wgs5z3VB5lqHzLVO
duNzdT2iOnVEdAp4XWsSQHjIXHton5Obbxa58EKRDRuyP47MtQ6Za52c5sQ4
ckTkkUe8awE69M8NxA0y11onToi89prImWeK3HuvSA7LIxtkrnXIXOuEMg/V
ihXeNYnatBHZtMmhigEuR+ZaR8cANWggkpws8t13oT2HzLUOmWudUOd+PHZM
ZMQIkTJlRF591YGKAS5H5qZ38OBB6dGjh3Tu3Dnk7frrB0rlyiukWLEd0qzZ
2LCem5SUJJMmTXLktZG51iFz0/v5Z/0sEWnUSOS990ROnrSxcoCLkbnpffzx
x9K4cWOZPHly0O2ll6ZKixZrPFl7SP7zn+9k4sQpIT0vcCtfvrz01g7NDiBz
rUPmZqY5q3mruXvuuSKpqcxhhdzrpOcPNi0tTXbv3u1ouWRuepq5V199dY7H
LF/uXef7jDNE+vQR+euvyMurWrUqmWsRMtc60a4r9Mkn3nssZ58tMmFC5jFy
QCxs2bJFBg4cKNWrV5cCBQr416ovUaKENGjQQPr16yf7dGFLG5G56WWXuQcP
irz+ukiTJuL5fYmMHCmydWv05ZG51iFzrWPVWn5ffilm/sgqVbzj5nbssKBy
QAQ2btzo+TusYj5zNVvHjRsnqampMnXqVElJSZH+/fube32ax+vXr7etHmRu
ehkzV+fd0bas9hG59lqR2bO9fZOtQuZah8y1jtXr5+q8MJ07i6c9IdK6tff8
dc8ey348EFSvXr0kOTlZDucwmOTo0aPSsmVLGTJkiG31IHPT++ijjz1t2b7y
0EMiGhc6786gQenna7QSmWsdMtc6dq1Zf+iQyNtve+dBLV5c5MYbvWt9cO0Z
dmvatKmMHz8+6HFTpkzxZEAT2+pB5ors3SsydapIp04ixYod9XwWbDBj/vWf
xe4+IGSudchc6+j9raWexunatWtt25YtWyePP/6nXHrpASlV6qRZv+ipp7xt
YiuvJQFqwIAB0qVLl6DHde3aVTroRGs2SbTM1b6VOq5Bh+fonBW65oCeb193
ncjLL+s5zvygfaisROZah8y1jv6dVKpUSWrVqmX7pmV16dLftHfvu8/b51mv
Qeu9nKef9s69oeOAgWis8PwhFSlSRNq0aWPasosXLzbnfuvWrZMlS5bI9OnT
pV27dqZv1YIFC2yrRzxnrs6/qO9XnZP9v/8VufJKbceKnHWWSMeOImPGiHz9
dfq5okLpt2wlMtc6ZK519O9ko103VDKYOXOmtNeLzQHS0rzvWz0v1gwuXNg7
55XeE9a2sOdtKtu2OVI9xBHN1xYtWki+fPn8fZYDt1atWsn8+fNtrYObM1ev
P2nfYb0WNWuW95z4nntEmjf3zr3oOaWR+vW98x4PH+4dvxBsXA+Zax0y1zrx
nrnNmjWTefPmZbvNnv25jBv3rTz44E9y441/eP49dnvawkekePGjnr+xvzyf
o396zqN/kz59VsuoUcvl9de/lo8++izLn6VtGiS2I0eOmPzVv4c5c+bIypUr
ZdeuXY6UndsyV9cqWb3au36J5qheA372WZFHH/We83qa/uZ6cOXKIgUKiFSs
6F1H4Prrvf2LX3zROwfjH39ENhcOmWsdMtc68Zy5I0aMMOVpf9Fwt+Tkmzzv
/wekXr1RUrPm61Kp0hwpXXq553x7q+TNe0wKFtwpxYpt8OxbJhUqfO55v83w
lDVIBg5c5/mcdeTlwWX27t1r5iMMlz5n27ZtQbcLPYG1SAMuDKtWrTLvETvu
7RQosFVOO22dFC68TIoWne85j53ped+keM5pR0u5ckM876menvfNTZKUlCxn
n32O5eXr53bt2rU97eetjmzlypXznEvc60hZeu9Cf29OvTbth3DOOec4Vl7B
ggVlwoQJjpSlY/pOO+00x16b/k1ee+21jpWnfyc//PCDI2X17dvXzMdm9c/d
smWrrFjxp8ydu8Pz+9rlaSf/JUOH/iMlS6ZI/vwTzeeJ3feqdaynnf1xYL1S
pUqZ9kK4dN587QMRbNNz9Td1MeowaLvYN3eHE5uWlT9/fkfK0s/tvHnzhvRv
Z8Xmu4/gRFkVKlQwr8+p11a0aFHHXptumoHa/8GJssqUKWPKi8e/E930c+GM
M85wpCzfe9zpf0snPk+KFStm5jeCewwePNjMywsAAAAAgJvEao0DAAASQW5Y
4wAAgHiXW9Y4AAAg3uWWNQ4AAIh3uWWNAwAA4l1uWeMgEjrvgN6H1uvh8bYN
Hz5cunfvHvN62LE999xz8u9//zvm9bBr69atm4waNSrm9bBj03kjHn744ZjX
w45t6NCh0rNnz5jXw45tzJgxIX3Ow365ZY2DSOgcHRdffLG5Ph5v23XXXSfV
qlWLeT3s2O655x7z9xTreti16Zxe+rcZ63rYsWmfSr0XFet62LG1bdtWatSo
EfN62LHdeeedUlgXaECukBvWOIjEoEGD5PHHH491NWyh8y3reVA8OnDggJnb
Ml41atRIli1bFutq2KJPnz6mzRSPdI2D3HYtzyo6b77OWYbcJZZrHESCzHUn
Mte9yFx3InNhBTLXnchc9yJz3YnMhRXIXHcic92LzHUnMhdWIHPdicx1LzLX
nchcWIHMdScy173IXHcic2EFMtedyFz3InPdicyFFchcdyJz3YvMdScyF1Yg
c92JzHUvMtedyFxYYfv27bJjx45YV8MWunbib7/9Futq2ELXaP7xxx9jXQ3b
6Bj3gwcPxroatti2bZvs3Lkz1tWwxZ49e8w6a/Ho+PHjsnr16lhXAwAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAIdA7feHXixIlYV8FWOhfskSNH
Yl0Ny8Tz36LS35X+zuJRvL7X4v1vEs44evSoPPvss3LxxRebdWqaNWsm3377
bayrZZnU1FQ599xzpUCBAlK6dGm59dZbZfPmzbGulqX0M+6aa66RLl26xLoq
UZs0aZJcccUVUrhwYWncuLF88cUXsa6S5XTdDV2fZvbs2bGuimV07v+2bdtK
8eLFpVChQmZdqLlz58a6WpbYsGGD9O3bV6pUqSIVKlSQzp07m7UcgEiMGzdO
SpYsKSkpKfL111/Lv/71LylatKj88ssvsa5a1D788EPJkyePyaIFCxbI+PHj
pWbNmlK/fv24aRMePnxYevTo4X+dbvbll19KwYIF5YUXXpAVK1aY16XZu2rV
qlhXzTKat+edd575fcVL5u7evVvOPPNMufDCC+Wtt96STz/9VK699lo57bTT
ZPny5bGuXtS0HaLnfx999JHMmDFDzjnnHLnkkktiXS24kK6VVrFiRRk4cKB/
n56/aebGw5q6unZuUlJSumtC06ZNM593+vnudrq+bL169aRUqVJSvnx512du
3bp1pVOnTun2aT5169YtRjWy1osvvmjeW3Xq1ImrzH3ttdfM6/nuu+/8+/Rz
pFixYnLffffFsGbR0/MHfW1Lly7175s6darZ9+uvv8awZnArXcdz7969/u91
7Uu9DvvUU0/FsFbW0HNSfc8EWrJkiXm/zJo1K0a1so62A1u3bi2///67Oe92
c+bq9X79vbz77rvp9j/yyCPmvDAeaFvwoYceMtcq4ylz9ZrESy+9lGm/nu/e
dtttMaiRdfR8Xd9fgcaOHWt+fxn3A+HQ+7ra9tN7MpUqVYrbv6fevXubcwpd
N9zt0tLS/F+7PXPnz59vPse++eabdPu1bZg/f/646Jfj+335zi/iJXOzsmjR
IvMa9Z5VvPjrr79MG7dy5crSrl27WFcHLvfkk0+a94hueq0oHn311Vemf0fg
tfR44fbM/eCDD7K8Xue7jhd4fuF28Z65et2sQYMG5r5nvPSbUNovTH9v2hfz
jz/+iHV1kMtt2bLFtF19299//53u8U2bNskPP/wgAwYMMP1YHnvssRjVNHz6
WgJfm77WjLT9pO8V7RN76NChGNQyMnr9IfC16ab7MnJ75mr/FP08W7duXbr9
vszN6nfqVvGcuXof9/LLLzd9DFauXBnr6ljq559/lnnz5pl+Ivr69D4VkB1f
X0nfNmzYsGyP7dChg7m+7JbxaMOHD0/32vS1Bvr8889N35Urr7xS9u3bF6Na
Rkb7jwe+Nt30vZ+R2zP3+++/z9RXRem1Zd0f2OfA7eI1c3ft2mX6Lus4qIy/
x3iif4s6rvL++++PdVWQi7333nsyceJE/6b9Hv755x/zvtf/B9J7MPqZoG1f
N9Dz6cDXpq/VR+8TFilSRG644QZXtW999HcT+Np0y/j7Um7PXL2/nlXftiFD
hkjZsmVjVCt7xGPm6nihCy64wIxh1bG68ULvdWTsh6maN29u5jQAwrFmzRrz
3h81alS6/Tq/gp7HuX2enJ9++sm8jo4dO7r+tQTj9sxVOndJ9+7d0+3TdpPO
YxJP4i1ztX9bkyZNpHr16mbcQzzRe2z58uVL189A+1JpvxCdGwMIl97f1LlV
tA/L1q1bZejQoaaf6ODBg2Ndtai1atXKtHGff/55Mx9G4KbnG/EkHjJXx5vo
HBg6XkjvC44cOdJ8r2Nr4km8Ze4rr7xiXo+OXcv4PpszZ06sqxcV/dvTccZX
X321/Pjjj+aa+fXXX2/GPuj9ECBcek1P+wT47hXq+ZuOicyqn46b+K5VZrdN
mDAh1lW0VDxkrl6L6Nevn5m/SH9HOkfGG2+8EetqWS7eMrdp06bZvs80q9xO
ry1rG973mqpVqxY3vzvEjt6P0baf27MW7qf33RmLgdxE+5PqdfN4m6sdAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcFqvXr2kWbNmsmfP
Hv++YcOGSXJysuzcuTOGNQMAIL78/PPPUqhQIendu7f5/uuvv5Z8+fLJ2LFj
Y1wzAADiz6hRoyR//vzyzTffSO3ataVFixZy8uTJWFcLAIC4c/z4cbnooouk
aNGiUrJkSfnjjz9iXSUAAOLWW2+9JXny5JFOnTrFuioAAMStgwcPmmvK1atX
N/dy9Z4uAACwXr9+/aRYsWLmmnLz5s1N/moOAwAA62Tsp7x27VrTj1lzGAAA
WOPQoUOmTdu4cWM5ceKEf//w4cO5xgwAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAg
rv0f1Of/6A==
    "], {{0, 411}, {477, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyNVV1s21QUPomvU6QWP5V1dFJnxs+qqavSDUGraYP8LclW0shtOjYhgePc
xKZubGwnXac9TUggXijwhiYh/t4qISExjZ9pGw/sZWhIU0e7VUggHjbxI6RJ
e4EuHF87tdelDEe+/vyd755z7vHJvY+VDakaBQD7IRwkeS5hWfL8JMGX5LxD
yxEEy104QNeybJp6VASYrTuWlE2KLx49JnatQBQehW7oh25Zsc1EsTjuql0t
3HfduQauQ7i6u7P9P6/uCrUVgIibqFGxlVnExwH404ppOZhfL/Kjc47pYjeH
XgsTRPyKi2sedlxc9vCbTDMlpRCfRiwoqlxBvIh4qBziayHs5cCu3iytU0tT
RLcWRcuoajoNpfsA8/+8ZvVGO952vHvsmcnD+BzEtb9ekdMuHka8qMiZScRP
IL7e1KYLPr5rOkkJ8VMA0R2NmVIC8S7Euap1sOT5iVpqI9fG759Qp44g3oL4
23q5MOHPXVbsFNYMdiC+q9K8W98BAE7UnPyUN5c7YBnShBeXq1ZoOuPWEfFb
M8ZhyfPJnbGbk5m2zxNqquDzl1+VDxUR9yP+hepZyYvF/WM6RT8HMlDXC+Ne
LJKmNlsv4x11KufFJbqDH9SbSxaq2sG8r/9ctXKSj6+bOutRzI2PWg2p5On5
YdnKZD2ffJHWS75/vgnTERkoGFDGUYE6rIEIEmQhiU8TLLRUQQMdGYpWigzF
t7ZmN5tnwwzyGjSZzcaxyJTezMBfjfm4ybQKpAY+hQayKvyOrBrSpfCtgVxt
Ez9eLrd8PwbpI3GyF+99ZJzsJ6NkDETyHHmeHCBpZMfIvvW5xdCK3Hxurft5
DSNSpptG3UW0OyDj+DMqDFxTx6os9DcGA8sp62VNufL2X6Faaaw2QbXCFZ14
UM35X/mb/BKOK/xqoOBv8Kv4W7lnLcZ9Vabt6mxYc2dVAm0642bx1pjFDuUd
8nHp5DdbAz9L5OxLV3sunazWF/oD1q0CfaNwpwCnhgI2/mP8j/hS/MP4J/Hf
uPe4L7hz3JfcV9xlELkL3EXuPPcd9xn3dehbbd5D69+eZd7O27V0qjV2pZAU
tgmPC2lhu/CkMB74E/qEESEn7ETLtvXvFo4Xrp4GR3Fs16dzLE8X6oDIw9gB
2ib/qhKqNJhjSpv1Wx3mN2j8mWSAjJD8hu4edXu+rYhlYulYAsTYrthYbCR2
yMXtqLGdaBvDMXNPdyqbrJQ69Lh7nkDKMOctraY64p54/FkxgUcbFfN1ZXhI
lHVdZCZbtKhNrSatDIN7bnpb+m2JnYeRLVcCznkBYP+fuPf9EHDHGgCLNkDf
0wE3iHvlIx8AnH1GaVhN/4yIRL7Ho7y6d4/31pPE/eunVus27mNd7wKsvdNq
/f1Rq7X2MfpfBbig/wvsj4TS
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{477, 411},
  PlotRange->{{0, 477}, {0, 411}}]], "Graphics",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.697407484403178*^9}],

Cell[TextData[{
 "This is due to the even nature of ",
 Cell[BoxData[
  FormBox[
   RowBox[{"\[Pi]", "(", "x", ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ", ",
 Cell[BoxData[
  FormBox["x", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox[
   RowBox[{"-", "x"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " should have equal probability of being accepted in the choice of ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"q", "(", 
     RowBox[{
      SuperscriptBox["x", "\[Prime]"], "|", "x"}], ")"}], " ", "=", " ", 
    RowBox[{"N", "(", 
     RowBox[{
      RowBox[{
       SuperscriptBox["x", "\[Prime]"], "|", " ", 
       RowBox[{"\[Minus]", " ", "x"}]}], ",", " ", 
      SuperscriptBox["\[Sigma]", "2"]}], ")"}]}], TraditionalForm]]],
 ". The integral is evaluated to be"
}], "TextNoIndent",
 CellChangeTimes->{{3.697407488522324*^9, 3.6974074895026207`*^9}, {
  3.697407538560471*^9, 3.697407625015836*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{"I", "\[TildeTilde]", "0.004607338"}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.697407633404237*^9, 3.697407637279594*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["Problem 3", "Section",
 CellChangeTimes->{{3.694280622276155*^9, 3.694280624070117*^9}, {
  3.6942806873450603`*^9, 3.694280687468246*^9}, {3.694280883874523*^9, 
  3.694280883968631*^9}}],

Cell["Suppose a posterior density is given by", "TextNoIndent",
 CellChangeTimes->{3.696873068010024*^9}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"f", "(", 
    RowBox[{"\[Theta]", "|", "data"}], ")"}], "\[Proportional]", 
   RowBox[{
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{"\[Theta]", " ", "a"}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", "n"}], " ", 
      SuperscriptBox["\[ExponentialE]", "\[Theta]"]}]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      SuperscriptBox["\[Theta]", "2"]}]]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696873071112515*^9, 3.6968731112347107`*^9}}],

Cell[TextData[{
 "for some ",
 Cell[BoxData[
  FormBox[
   RowBox[{"a", ">", "0"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and ",
 Cell[BoxData[
  FormBox["n", TraditionalForm]],
  FormatType->"TraditionalForm"],
 " integer, ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"and", "\[Minus]", "\[Infinity]"}], "<", "\[Theta]", "<", 
    RowBox[{"+", "\[Infinity]"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 ". In fact this is a Poisson model with mean ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["e", "\[Theta]"], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " and standard normal prior for \[Theta]."
}], "TextNoIndent",
 CellChangeTimes->{{3.696873124124358*^9, 3.696873163570684*^9}}],

Cell[TextData[{
 "Find a Markov chain for sampling from ",
 Cell[BoxData[
  FormBox["f", TraditionalForm]]],
 " and implement it."
}], "TextNoIndent",
 CellChangeTimes->{{3.6968731727929583`*^9, 3.6968731766516333`*^9}}],

Cell[TextData[{
 "Solution: We want to find ",
 Cell[BoxData[
  FormBox[
   RowBox[{"p", "(", 
    RowBox[{
     SubscriptBox["\[Theta]", 
      RowBox[{"n", "+", "1"}]], "|", 
     SubscriptBox["\[Theta]", "n"]}], ")"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " such that"
}], "TextNoIndent",
 CellChangeTimes->{{3.69687924222099*^9, 3.696879267359864*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"f", "(", 
    RowBox[{
     SubscriptBox["\[Theta]", 
      RowBox[{"n", "+", "1"}]], "|", "data"}], ")"}], "=", 
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"p", "(", 
      RowBox[{
       SubscriptBox["\[Theta]", 
        RowBox[{"n", "+", "1"}]], "|", 
       SubscriptBox["\[Theta]", "n"]}], ")"}], 
     RowBox[{"f", "(", 
      RowBox[{
       SubscriptBox["\[Theta]", "n"], "|", "data"}], ")"}], 
     RowBox[{"\[DifferentialD]", 
      SubscriptBox["\[Theta]", "n"]}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696879250602766*^9, 3.6968793045599003`*^9}}],

Cell["By Metropolis-Hastings algorithm, we can choose", "TextNoIndent",
 CellChangeTimes->{{3.696938112343275*^9, 3.6969381239177017`*^9}, {
  3.697405911447007*^9, 3.697405911752583*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"q", "(", "x", ")"}], "=", 
   RowBox[{
    FractionBox["1", 
     SqrtBox[
      RowBox[{"2", "\[Pi]"}]]], 
    SuperscriptBox["\[ExponentialE]", 
     RowBox[{
      RowBox[{"-", 
       FractionBox["1", "2"]}], 
      SuperscriptBox["x", "2"]}]]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696938125965685*^9, 3.696938155042925*^9}}],

Cell[BoxData[{
 FormBox[
  RowBox[{
   RowBox[{"p", "(", 
    RowBox[{
     SuperscriptBox["x", "\[Prime]"], "|", "x"}], ")"}], "=", 
   RowBox[{
    RowBox[{"min", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       FractionBox[
        RowBox[{
         RowBox[{"\[Pi]", "(", 
          SuperscriptBox["x", "\[Prime]"], ")"}], 
         RowBox[{"q", "(", "x", ")"}]}], 
        RowBox[{
         RowBox[{"\[Pi]", "(", "x", ")"}], 
         RowBox[{"q", "(", 
          SuperscriptBox["x", "\[Prime]"], ")"}]}]]}], "}"}], 
     RowBox[{"q", "(", 
      SuperscriptBox["x", "\[Prime]"], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"r", "(", "x", ")"}]}], ")"}], 
     StyleBox["1",
      FontWeight->"Bold"], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "\[Prime]"], "=", "x"}], ")"}]}]}]}], 
  TraditionalForm], "\[IndentingNewLine]", 
 FormBox[
  RowBox[{"=", 
   RowBox[{
    RowBox[{
     RowBox[{"r", "(", "x", ")"}], 
     RowBox[{
      OverscriptBox["q", "~"], "(", 
      RowBox[{
       SuperscriptBox["x", "\[Prime]"], "|", "x"}], ")"}]}], "+", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{"1", "-", 
       RowBox[{"r", "(", "x", ")"}]}], ")"}], 
     StyleBox["1",
      FontWeight->"Bold"], 
     RowBox[{"(", 
      RowBox[{
       SuperscriptBox["x", "\[Prime]"], "=", "x"}], ")"}]}]}]}], 
  TraditionalForm]}], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696898053305533*^9, 3.696898139076777*^9}, {
  3.696898438837309*^9, 3.696898473086046*^9}, {3.6969381936628437`*^9, 
  3.696938201011867*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{
    OverscriptBox["q", "~"], "(", 
    RowBox[{
     SuperscriptBox["x", "\[Prime]"], "|", "x"}], ")"}], "=", 
   FractionBox[
    RowBox[{
     RowBox[{"\[Alpha]", "(", 
      RowBox[{
       SuperscriptBox["x", "\[Prime]"], ",", "x"}], ")"}], 
     RowBox[{"q", "(", 
      SuperscriptBox["x", "\[Prime]"], ")"}]}], 
    RowBox[{"r", "(", "x", ")"}]]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696898483698138*^9, 3.696898508927021*^9}, {
  3.696938211777643*^9, 3.696938212008375*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"r", "(", "x", ")"}], "=", 
   RowBox[{"\[Integral]", 
    RowBox[{
     RowBox[{"\[Alpha]", "(", 
      RowBox[{
       SuperscriptBox["x", "\[Prime]"], ",", "x"}], ")"}], 
     RowBox[{"q", "(", 
      SuperscriptBox["x", "\[Prime]"], ")"}], 
     RowBox[{"\[DifferentialD]", 
      SuperscriptBox["x", "\[Prime]"]}]}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.696898151369616*^9, 3.69689818116542*^9}, {
  3.696898263958959*^9, 3.696898269959021*^9}, {3.6969382227063723`*^9, 
  3.696938223133155*^9}}],

Cell[BoxData[
 FormBox[
  RowBox[{
   RowBox[{"\[Alpha]", "(", 
    RowBox[{
     SuperscriptBox["x", "\[Prime]"], ",", "x"}], ")"}], "=", 
   RowBox[{"min", 
    RowBox[{"{", 
     RowBox[{"1", ",", 
      FractionBox[
       RowBox[{
        RowBox[{"\[Pi]", "(", 
         SuperscriptBox["x", "\[Prime]"], ")"}], 
        RowBox[{"q", "(", "x", ")"}]}], 
       RowBox[{
        RowBox[{"\[Pi]", "(", "x", ")"}], 
        RowBox[{"q", "(", 
         SuperscriptBox["x", "\[Prime]"], ")"}]}]]}], "}"}]}]}], 
  TraditionalForm]], "DisplayFormulaNumbered",
 CellChangeTimes->{{3.69689818446203*^9, 3.696898195207716*^9}, {
  3.69693822768292*^9, 3.696938230881961*^9}}],

Cell[TextData[{
 "Here we choose ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    RowBox[{"a", "=", "10"}], ",", 
    RowBox[{"n", "=", "20"}]}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 " for MCMC sampling. The histogram ",
 Cell[BoxData[
  FormBox[
   RowBox[{"n", "=", "1000"}], TraditionalForm]]],
 " compared with the pdf is given as follows:"
}], "TextNoIndent",
 CellChangeTimes->{{3.6974059190695267`*^9, 3.697405944477537*^9}, {
  3.697406367957831*^9, 3.697406373097028*^9}, {3.697408062520523*^9, 
  3.697408078374257*^9}}],

Cell[BoxData[
 GraphicsBox[
  TagBox[RasterBox[CompressedData["
1:eJzt3Qm8TPX/x3H7EiE7ka1IZcn2+wnZf9HvT9b6lUJRKaUSolBKKEQ/S1Io
ZMmPsiRLSbYIkVS2StmyVS6u3ec/nzPNmHvnLnNmzjlz75nX8/H41r1nzsz5
nnHuvOd7zvd8v2UeeqrNI5kyZMjwbA7Pf9o8+FzDnj0f7Nc2i+eXRv16PfxQ
Zs8P72TMkOEnT9GFAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAA5I033pCGDRsa5aeffgp6/NNPP/U//sknn/iXv/ba
a/7lly5dCnv7P//8s/z1119hPx9ivP/9+vWTypUrS/78+aVWrVqyfPnyaFcL
AJBIt27dJEOGDEb59ttvgx6fPHmy//F33nnHv7xz587+5RcvXjS93VOnTskL
L7wgOXLkkN27d0e0D7Fu8ODB/n8LX1m9enW0qwUASCTczH3zzTelZcuWRgmn
nfvSSy/5X5fMjcz//d//Ge9jlixZZOvWrbJ37145f/58tKsFAEgk3MxNjZ4v
3rFjhxw+fDjJTA41c7UNreefQ2lLHzlyRP7888+Q6+irZ1xcXNByXbZz505j
2/Hx8SG91r59++TcuXMJll2+fFl+/fXXsM4FqFD2/9ZbbzXex5tuuimsbQAA
nBFu5j766KOSK1cuowTmwcyZM6Vs2bIJznMWKVLEaBf7tGnTRrJmzep/PGfO
nFK0aNEE29XryM2aNZOrr77aWCd79uzSpEkTIwcT+/LLL6V8+fLGepkyZZJ/
/OMfRk4VKFDAqN+rr77qX1fbhLqsdevW8vrrr0vmzJmNuvjW+fHHH6VOnToJ
6p8tWzbp1KmTnDlzxv86ug19nccff1xmzZol1157rbGunit/5JFHjO8Z48aN
k4IFCxrL8+TJI08//XTI/y6h7P9nn31m1EH32bfv+vvtt9+e5Gvqv6Xv30yv
w+v3AbVu3TrJnTu3sVyvBSf+3gAAsEZg5g4fPlw+/PDDBOWxxx4L+XquZkDG
jBmNZYUKFTKyK1++fMbvunzFihXGenfeeWfQ9UfNJJ/FixcbOZd4HV8+r1q1
yr/uhg0bjNwMfB39v2a4b7m2qX00t3z189VVy6JFi4yc1MzxLStevLg/z7R0
7NjR/zraX8m3Hf2/9l3SXPSte8sttxj/9+2/r4wZMybVf5NQ93/p0qVJrlOz
Zs1kX7tFixb+9fQ7gbbhb7jhBn+ub9u2LdX6AQDCE5i5qZXUMlfbd76s8rWh
zp49Kw0aNJDmzZvL2LFjjWUHDhyQJ5980v987WPr6zP922+/GW1FXV6yZEmZ
MmWKcX5a+0lrW0yXa0b4zvdqm873Om+//bZxHVPbbRUqVPAvf/HFF/319mWu
lttuu02WLVtmtHcvXLhgtJcrVqxotHt93w9OnDgh1113nb8+Pr7M9WW65rWe
Qw7M3d69exvvzaZNm4xrrbqsbdu2Kf57mNl/bXfr+npOWZffeOONxu+///57
sq+v59993xO0DX3vvff66xt4LgIAYL3AzNU2XeIS2BZMLXM1Y3zLqlevLoMG
DZI1a9YkeS0yueu5geeyR40aleA52s70PbZkyRLjHKivHaoZG2jo0KGpZu7G
jRuTfE98/Y/09bX+1apV82eUjy9zdVng9WrNbF+7Xr9v+Pjakvq+pMTM/vtU
rVrVWFapUqUUX9tHnxv476pFvxP5vicBAOxh5b1Cmp16zjZx+1jPuz7xxBNG
G8snucwNzBW9Jhto7ty5/sf0PLhe2/T93r179wTrbt68OcXM1Xantm0T279/
vwwbNsxoPwe2WbVoO9PHl7mJs96Xz3oNO5AvF/Wcc0rM7H/i1w41c1XgeQbd
r5TaxgAAa1h9f66eX9X2bunSpYOyt0qVKv6cSy5ztW+Wb7m+VqB58+YlyJxd
u3b5f3/qqacSrKvnjFPKXL3Omth3331nZKU+rtdT9bqztjWbNm1qLAu85uzL
XN2nQNqO1eXa3g0Uauaa2f/Erx1q5mp7NrC9r2X27NkhPRcAED6rM/fYsWP+
a7PaTpswYUKCa6u+PjqBmavZ6fPee+/5l//3v/9NUJfAber5UT136+snlfic
bY8ePVLM3MKFCwfta9euXY3HtH27Z88e//K77rorKKdTy9zE9+2Emrlm9j/x
a4eauaNHj/a/ju8c8zXXXGO08QEA9rEyc333iebNm1cOHjzoX7dnz57+dfUe
VqX35viWaX+lQ4cOGcs163zXaPWeI+07rffKav8rX5/k66+/3t+H6u677/a/
jt6DpK/Vp08f476XlDK3WLFiQfvq64911VVXyfHjx/318W1X+1b52JW5Zvc/
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
bKsHmQuYR+YC6cuqVaukUKFCxthTw4cPl5EjRyZbFi5caFs9yFzAPDIXSH/0
Xh1txw4bNixqdSBzAfPIXCB9GjFihOTOnVuOHTsWle2TuYB5ZC6QPl28eFFW
rFghhw8fjsr2yVzAPDIXQDjIXMA8MhdAOMhcwDwyF0A4yFzAPDIXQDjIXMA8
MhdAOMhcwDwyF0A4yFzAPDIXQDjIXMA8MhdAOMhcwDwyF0A4yFzAPDIXQDjI
XMA8MhdAOMhcwDwyF0A4yFzAPDIXQDjIXMA8MhdAOMhcwDwyF0A4yFzAPDIX
QDjIXMA8MhdAOMhcwDwyF0A4yFzAPDIXSNmqVauM43br1q3RrkqaQuYC5pG5
QMr0b6RixYqSIUMGqVKliowaNUqOHDkS7WpFHZkLmEfmAqHZuHGjPPnkk1Kw
YEHJmjWr3HXXXTJv3jw5f/58tKsWFWQuYB6ZC5ijGbtw4UJ56KGHJE+ePEYG
P/XUU/Ljjz9Gu2qOInMB88hcwJw9e/bIyy+/LFWrVjXON9eqVcvIn4wZM0r/
/v2jXT3HkLmAeWQukLqjR4/K2LFjjZzRnC1SpIj06tVLtm/f7l/nww8/NB7b
vHlzFGvqHDIXMI/MBVL25ZdfGtdvtbRu3VoWLFggFy5cCFrv1KlTRuYuXrw4
CrV0HpkLmOd05j766KNSo0YN6datmyPlrbfeksuXLzu2f3Cf1atXy0svvZRk
X+X4+HhZuXKl8bPm8O+//+509aKGzAXMczpz9RpYgwYNZPz48Y4UbXf8+eef
ju0f3GfRokVSvXr1JB/Te3f1GDt+/LjDtYo+Mhcwz+nMvfXWW417LJySN29e
MhemnTlzRtq3by/Nmzc3zsvocaQ/B5ZmzZpJ6dKljb7LsXguhcwFzLMyc/W0
2ptvirz1lsjo0SKvvy7yyisiAwaI9Omj13JFihUbIy1atLVke6EgcxGuSZMm
Gd8PNVvy5ctn/BxYWrVqJffff78sX7482lWNCjIXMM+KzL140ZuxBQro9Vpv
6dFDpFcvkRdeEBk0SGTYMBHtOnXNNYslV66DsmiRRTuQCjIXkdqwYYMxFgYS
InMB8yLN3NWrRSpVEmnSRGTHjtTX13PLtWu/JBUqiDRvLrJzZ9ibDgmZC9iD
zAXMCzdz9TzyAw+IlCih9yWG/jzf9VwdLm/kSJH8+UWefVbkxAnTVQgJmYtw
aNt26NChcuzYMWMMDP05pRKLyFzAPLOZq+eR9ZptwYIizz2n9ySa217iPlR6
+0WXLiJFi4pMnmzutUJB5iIcY8aMMa7h7tixQ5YsWWL8nFKJRWQuYJ6ZzNXb
IW68UaRhQ5Fwh5ZNrt/ypk0iGTKI3HabN9etQubC7bTPtN477PT9SmQuYF6o
mbt/vzcThw+PbHsp3SukWfuvf4k88khk2whE5sIqgfcDHT58WD7++GM5ePBg
VOqy3/MH2adPHylVqpRkyZLFuEdYi963VLlyZenZs6ecPHnS1jqQuYB5oWTu
sWPe9m2keatSuz9XPyY8q4hVl8jIXFhh3Lhxnr+BG42f9fqunk/WjMucObN8
+umnjtZl7969UqJECSlZsqSRrToO9IwZM2TmzJlGPXUcaL1vWPNY62oXMhcw
L7XM1QysWVOkXz9rthfKmBjadPB8nMisWZFvj8xFpHbu3Gm0JXXcUm3r6v91
/r5169ZJjx49jPxzUvfu3aVu3bpy9uzZZNfR+QYbN24sAwcOtK0eZC5gXkqZ
e+6cSKNG1p7rDXUcqu++8/bTWrMmsu2RuYjU1KlTpYLe3Pa34sWLe/4mvH8U
em5Z27uHDh1yrD516tSRiRMnprretGnTjHkG7ULmAuYll7mXLom0aSPSrp33
Z6uYGftx2TKRwoVFdu8Of3tkLiI1atQoo12pvv32WyNj586da/z+yy+/GG3g
E3bd7JaE3r17S6dOnVJd78EHHzTmQbILmQuYl1zm6v07TZt627pWMjve8rvv
ipQr572mHA4yF5FasWKF5MiRw5g/qGPHjpIzZ06Ji4szcrZr165Gu9NJW7Zs
Meqg4z1rW1bPcev5792eL6d6X/Hs2bOlZcuWxncB35xHdiBzAfOSyty+fb3X
cM3eexuKcOY4eP557z1EZ86Y3x6ZCyu0a9fO3zdY791V2o7U67rz5s1zvD6a
r40aNZJMmTL56xVYmjRpYnxXsBOZC5iXOHN1bCi9dGXXrX7hZK7eovGf/4jc
fbf3ZzPIXFhB+05t375d9u3b51+2adMmR88pJ+XcuXNG/uo8C4sXL5atW7ca
Y2c5gcwFzAvMXO0nXKZM+OdxQxHuXH46VqSe69Y2uBlkLmAPMhcwz5e5On5y
kSIi69bZu71I5s/VOmpf5u+/D/05ZC6ssHbtWmM+3dq1axvz1ycuaZFec46P
jzf9PN1X7ZedWilcuLC/LxmA0Pgy9847Rfr3t397kc5ZP368SL16oZ9jJnMR
qd9++02uvvpq4z5czd0uXboElbRIx+3Q+pql/bHefvvtVEuZMmXkk08+saHm
gHtp5hYvPkiqVRO5cMH+7UWauXrfkt5yGOp8CGQuIjVlyhTjOPrjjz+iXRVT
BgwYYNxbbBfOLQPmLVq0QzJn/iukuW+tEGnmqi1bvPfthnLdmcxFpCZ7vuDd
fPPN0a5GmkPmAubonAI333xaihUb7Ng2rchc9cwzeq9G6uuRuYiUjnuh98Nq
v2VcQeYC5gwapH83cWHNWR8uqzJXx4HWYW5XrUp5PTIXkdJxHfWabYECBeTx
xx+XIUOGyGuvvZagxCIyFwjdxo3ePsCff/5DusxcpV0mb7rJex9RcshcRErn
rNc58lIqsYjMBUJz+rTIDTeIzJljbs56K1iZuerf/0553j8yF26j9ybpue5Q
SocOHWyrB5kLhObxx0Xuv9/7c3rP3F9+ESlQwPv/pJC5sNKpU6eMeQ50PviU
5tKz06pVq6RQoULGsT18+HAZOXJksmXhwoW21YPMBVKn02vr3LS+IevSe+Yq
bedqezcpZC6soGM+tm3b1j+esc4l8NRTT8mzzz4rp/XEkcP0Hlptxw4bNszx
bfuQuUDKdAzl4sUT9jtyQ+bq9Vy9rpvUkDhkLiKlYxrrcVupUiVjXr+rrrrK
yNz//e9/xvH18MMPR6VeI0aMkNy5czs2vnJiZC6Qsq5dxfPdPOEyN2Su0u8R
2o9Z+zMHInMRKR1rScc5/Ouvv4zftc+UZq5atmyZFCtWzJgDwWkXL1405g46
fPiw49tWZC6QvPXrRYoW1TFYEy53S+YqbW707JlwGZmLSI0ePVoaNmzo/z0w
c/XY0nPNP//8c7SqFzVkLpA0HfuiShWRmTODH3NT5h46JHLNNSIHDlxZRuYi
UvPnz5ds2bLJkSNHjN8DM/ett94y5obX88+xhswFkvbmmyKNGiX9mJsyV/Xp
I9Kt25XfyVxESvsoly1bVmrUqCEzZswwrqFOnz5d+vfvb8xZ37Fjx2hXMSrI
XCCYtv3y59d+jkk/7rbM1X5iur++U31kLqyg9wfpsevrt+wrrVq1itnji8wF
gt17r8jzzyf/uNsyV730koiv6UHmwiqXLl2Sr7/+Wj744AOZM2eO/PDDD9Gu
UlSRuUBCn38uUqqUSErTVrsxc7WfWKFCIvqRSOYiUps3b5axY8caYy3fc889
8txzzxlz5J05cybaVYsqMhe4Qrt0VKggsmBByuu5MXPV66+LtGtH5iJ88Z4v
qz169JCMGTMaRec4KFq0qP+8cpEiRWTevHnRrmbUkLnAFa++KtKyZerruTVz
tW1frJhI7tz1yFyERdu0mq2vvPKKHNeOAn/Tcaf0vljtU6V9lteuXRvFWkYP
mQt4+cYg3rs39XXdmrlq7FjxfCYuJXNhmo6tmClTJhk8OPm5pc+fPy8VKlQw
xoSMRWQu4NWihciQIaGt6+bM1fPrGTP+KkuWxKW+MhBg5syZRhvXN/ZUcgYO
HCjXXXedQ7VKW8hcQO/f917HTWlO2UBuzlyVM+fjUqdOiG8G8LcxY8YYfQFS
8+6770rWrFkdqFHaQ+Yi1un0JtpPecWK0J/j9szNk+caKVfuoixf7tgm4QI6
f4COo5waHSND28OxiMyFWxw9elSWLl1qutx//25p2PCgqedMmDBBbrzxRsf2
zenM1bbK5MmnpGZNxzYJFyBzU0fmwi203VmyZElp2rRpyKVu3fslS5YTUq/e
f0w9r0SJEo6eG4tG5v7xx59SubL3vDsQCs1cHWO5fv36KZaKFSuSuUA6V716
ddm4caOp57RpI5JCF8tk6Ryg2bNnN//EMEUjc7Xf8sKF+l1GJApTriEd0j5U
devWDbnEIjIXbmE2cz/7TKRMGZGzZ81vK1YyV9WuLTJ7tmObBlyNzIVbmMnc
CxdEbrpJ5OOPw9tWLGWufjfRPt2XLjm2ecC1yFy4hZnM1Xn6mjYNf1uxlLlK
27qzZjm2ecC1yFy4RaiZe/Sod7ypH38Mf1uxlrmffipy881c1wUiRebCLULN
3IcfFnnmmci2FWuZq2rUEJk717EqAK5E5sItQsnczZtFihQROXEism3FYubq
XEtVqjhWBcCVyFy4RSiZq9clJ02KfFuxmLlK79fV+4cAhIfMhVuklrnTp+s6
1lyTjNXM1XPLeo4ZQHjIXLhFSpl78qRI8eIi69dbs61YzVz9vqL3WC1Z4lhV
AFchc+EWKWVu374iHTtat61YzVyl9wzpOXoA5pG5cIvkMnfPHpFChUQOHbJu
W7GcuTo2RvnyIp9/7lh1ANcgc+EWyWXuHXeIjBxp7bZiOXPVtGkit9/uWHUA
1yBz4RZJZa72+dGxHHSsRyvFeuZevChStqzIqlWOVQlwBTIXbpE4c3Uu+pIl
Rb780vptxXrmKr3nqkkThyoEuASZC7dInLn9+ol06GDPtshc77mD664T4eMD
CB2ZC7cIzNwdO0QKFrS231QgMtdrwgSR5s0dqBDgEmQu3CIwc/Wc5+jR9m2L
zPU6d07k2mtFNm1yoFKAC5C5cAtf5n74oUilSt5+PnYhc68YN06kRQubKwTY
5PTp057vjJtk165dns8MGz80/kbmwi00c1et2my0u9assXdbZO4Vvrbu11/b
XCkgAiNGjJD+/fsnWDZkyBDj7zhDhgxGKVeunCxdutTWepC5cAvN3AceOCSd
Otm/LTI3obfeEmnWzMYKARHq2LGjNA/ofDB58mQjZxs3biyTJk2SUaNGSa1a
tSRnzpyyZcsW2+pB5sItbrqprScrzsvhw/Zvi8xN6Px5731ZfJQgrUqcubVr
1zbyLzH9W+tk4xd3MhducfXVG6V3718d2RaZG+ydd7hfF2lX4sytWLGijB07
Nmi98ePHS9WqVW2rB5kLN5g5UyRnzh2yfn3K8+daxe2Zmzt3bpk6darMnTs3
5PLhh/OkUKHTMnjwF6aep+XEiROO7Rtik2ZugwYN5LyelBGd96Sv9NOb+BPp
0qWL57ujfV8eyVykdzpPn57XrFChc6pz1lvF7Zmr17nq168vrVu3NlWqVRsj
BQtuM/UcbVO3adPGsX1DbNLzxXpc699tzZo1pWnTppIrVy755ptvjMf37dsn
3bp1k2zZssnEiRNtqweZi/TukUe8JbU5660UC5m7d+9e08/TWy3KlDE33ua8
efOkVatWprcFmHHu3Dmjb9SUKVOkR48ecvvttxvf9+bMmWM8PmHCBOO47969
u1zSybNsQuYiPdP55EqUEImLI3OtFG7mqvffNzfnEJmLaLrw9wQoBw4cMNq6
diNzkV6dOiVSurTIp596fydzrRNJ5mpb94YbQp9fl8xFLCFzkV716KH9Iq78
TuZaJ5LMVdOni9SpE9q6ZC7Skri4OImPjzf9vJ9//llmzJiRarn++utlyZIl
NtQcsI+OM1WsmMgff1xZRuZaJ9LM1cthFSqILFuW+rpkLtKSfPnySfv27U0/
b+XKlXLvvfemWgoUKCAf6gC1QDpx5oxI+fL6WZ1wOZlrnUgzV82aJfKPf6S+
HpmLtGTAgAHGfXJ24dwy0ps+fUTuvjt4OZlrHSsy9/JlHXfgyvX25JC5iCVk
LtITnTOuUCGRI0eCHyNzrWNF5iq9DaNGjZTXIXMRDZc9XwqPeD5Ijh8/7uh2
yVykFzp8zM03i8yYkfTjZK51rMpcVbmyyCefJP84mQun7N+/X/r06SOlSpWS
LFmy+OcTypMnj+c4rSw9e/aUkzrIjo3IXNjpzTfflKFDh1pSGjdeLTfeuCvZ
x8uWLUvmWsTKzF20SDz/bnofZNKPk7lwgh7PJUqUkJIlSxrZqmMtaz/imTNn
yrhx46RXr15SunRpI4/37NljWz3IXNjFN67Lc889F3F56KFRkiPHKenefXCy
6+i2pk2b5si+kbnmNG0qMmZM0o+RuXCCji9Vt25dOXv2bLLr6FjMOrffwIED
basHmQu76PfIxx9/POLX0TEWPJEjkyenvN5VV10l7+sgSA4gc83Zvl2kYEGR
pKYqInPhhDp16oQ0jrJ+b9d5dO1C5sIuVmWu9lNu2TL19chc61iduapbN5Gn
nw5eTubCCb179w5pXtwHH3zQmHvDLmQu7GJF5uq1QJ0zKJSuhWSudezI3KNH
RfLnF9m1K+FyMhdO0PkNcubMKc2aNTPasuvWrZOdO3fK7t27ZcOGDTJ79mzP
d/uWRt8qHd/CLmQu7BJp5upw43pfkOdPIyRkrnXsyFz1+uvB5yzIXDhF87VR
o0aSKVMmf5/lwKLz5q5YscLWOpC5sEskmat9XGvX9n5Gh4rMtY5dmXvunHeu
v8D5D8hcOE3n9dP8Xb58uSxevFi2bt0qx44dc2TbZC7sEknm6jXcO+/0jmUU
KjLXOnZlrpo7V6RSJe+YzIrMRSwhc2GXcDPX87XTmBPX7NdOMtc6dmauqldP
5J13vD+TuYglZC7sEk7m6jXcwoVF1q41vz0y1zp2Z+4334gUKaLzppG5iC1k
LuxiNnP1Gq7OuTpsWHjbI3OtY3fmqs6dRfr2JXMRW8hc2MVs5j73nEjz5uau
4QYic63jROYePOi9d2jChCVkLmIGmQu7mMlcne9Nr+HqPZzhInOt40Tmqlde
Ebnttv1kLmIGmQu7hJq5eg23WDGRL76IbHtkrnWcylwd+rZgwdNSr95ztm8L
SAvIXNgllMzVeXCvv17k7bcj3x6Zax2nMlf16fOV5Mp1UE6fdmRzQFSRubBL
apmrn7E1a4oMGGDN9shc6ziZudqHqmTJL6R7d0c2B0QVmQu7pJS5OleQ9pd6
6CHrtkfmWsfpzP33v+8zxtVetsyRTQJRQ+bCLillbpcu3sxNbh7zcJC51nE6
c7UP1WefefvRJTXfH+AWZC7sklzmvvSSSPXqIqdOWbs9Mtc60chc9cQTIvff
78hmgaggc2GXpDL33XdFypYVOXzY+u2RudaJVubGx3v71OmYzIAbkbmwS+LM
/eQT73h/u3fbsz0y1zrRyly1YYN3/M/ff3dk84CjyFzYJTBzdfzkggW9n6d2
IXOtE83MVS+8INKihSObBxxF5sIuvsxds0Y/w0UWLbJ3e2SudaKduefPi1Sp
IjJ5siNVABxD5sIumrktW75p5O3mzfZvj8y1TrQzV23fLlKggIhD1QAcQebC
Ll26LJYcOU7KqlXObI/MtU5ayFz1+usi9euHP+8FkNaQubDDhAkiefKckrvv
HuzYNslc66SVzD13TqR2bZHhwx2pCmA7MhdWGzTIez/QSy+9b3rO+kiQudZJ
K5mrtP+yHk96nxmQ3pG5sMqlS2KMmVu1qvf+W7Pz50aKzLVOWspcpfeX6f1D
er8ZkJ6RubCC5u0994g0aCASF+ddRuZaJ9YzV339tbdPlZ33mwF2I3MRKZ2P
b+BAkdatvfOh+pC51iFzvRYv9rZ3d+2yuVKATchcRGLpUu988z17etu6gchc
67g5c2fOnCmlSpWSBx54IKRSu/ZEyZXriLRr1z3k5wSWbt26yWkm60WUkLkI
h7Znn3nGOw/MypVJr0PmWsfNmdunTx8pUKCA8W8XamnTZotcd90xefvtD0w9
T8ttt90m8+fPd2TfgMTI3Niy0hOQr732WkSlZ893PG3bw3LLLTvkxRdHJ7ue
ZsQjjzzi2L6RudZxOnOL6ckSk/TQ+te/vGNWmdGiRQsyF1FD5saO+Ph447O0
d+/eYZemTedKjhyn5I47Pkx13Rw5cshNN93k2P6RudZJD5mr1zJ0TGa9vmtm
zAwyF9FE5sYOvYaVM2fOsJ6rfZFbthSpVi30/ivt27f3tIVvCWt74SBzrZMe
MlddvChSvLg3e3UewFCQuYgmMjd2hJO5+pn29tve67aej0ZT5/HIXOuQucnT
Y/K++/Q9Cm1sZjIX0UTmxg6zmfvxxyIVKog0aiQSziFC5lqHzE3dqFHe88yf
f57yemQuoonMjR2hZu769SJ164pUqiTy6afhb4/MtQ6ZGxrtQ1+kiMiIEcmv
Q+Yimsjc2JFa5up12rZtRa69VmTKlOD7bc0ic61D5obut9+8/Q7uvVeP+eDH
yVxEE5kbO5LL3B9+EOnRQ6RgQZFhw0TOnLFme2Sudchcc/T+8Y4dvedq9u9P
+BiZC3X58mU5cuSIHD9+3NHtkrmxIzBzdY606dNF6tUTKVpUpF8/kWPHrN0e
mWsdMjc8Y8d6j+/33rty3obMjV37PV/A9HjTcc+yZMliHOda8uTJI5UrV5ae
PXvKyZMnba0DmRs7NHOzZ79ZevXyjhWv4wnMnSty4YI92yNzrUPmhm/tWu93
y4oVdWxnMjdW6fFcokQJKVmypJGtOk7ejBkzjLFHx40b5/lc7CWlS5c28njP
nj221YPMdb8TJzQjdM6fi57P0iPGPT8//WT/dslc65C5kdP5EXSeybx5d8mg
QWtt3x7Slu7du0vdunXlbOBELImcP39eGjduLAN10habkLnu9OOP3r6bDRuK
5M4t0qyZnl87Kzly5HGsDmSudchca+h4VdWrv+bZ3knjHjjto4/YUKdOHZk4
cWKq602bNk1q1aplWz3IXHfQcQH0vp4nnhApW1akZEmRbt1EFi68Mj5PJONQ
hYPMtQ6Zax09tzxv3nx55x3vWC933y2ybJl911iQNuh4tJ06dUp1vQcffFBa
68SkNiFz0x/tC/LddyKTJ4votD01a3rbsnrNSvsdb9uW9PPIXOuQudaJRub6
rufqacY33hD5xz9E8ucX0Y9kfSiF049Ip7Zs2WJ8/jVr1sxoy65bt0527twp
u3fvlg0bNsjs2bOlZcuWRt+qlclNlmaBcDJX+1hPnz7dsaLvR6zSbuy6+zNm
eOeo1VzNlUukfHmRDh28Y++sWZP0fYiJkbnWIXOtE83MDbRvn8h//6v9HkTy
5PG2f2fNsu7eOUSf5mujRo0kU6ZM/j7LgaVJkyayYsUKW+sQTuYOHz7cqN99
993nSNFtHT582KZ3IJhm/NKlSx0pK1asM/oz6T+B56uXvPiid+xYvZxwzTXa
30OvP4n85z8iQ4eKfPaZyF9/hbdfZK51yFzrpJXMDXTkiBjnnps3F/n3vx2q
GBxz7tw5I3+XL18uixcvlq1bt8oxq2+WTEY4mfv888/L4MGDbapRMP17PHDg
gCPbWr9+vfF507RpU9OlceNmUr9+O7ntts6ezHxCqlXrK5UqDZaKFUfLDTdM
lOuu+58UKbLCk6VbPfnwm2TJcsqzrXNSoECcVK58Spo1+0MefviQvPLKXnnv
vZ2ePN5mnA+xqui5FJ1fzylkrnXIXOto/5hy5coZbZpQSsOG/xfyuolLA0+j
uX///o7tGyIXFxdnzHtqlj7n4MGDqZZq1arJ6tWrTb22Zu6AAQOMHAwsmzcf
kq+//t0oGzZcKevXe4v+/NVX3rJu3e+ydq23rFlzpaxa9bt8+aWWw7Jy5WH5
4ovDns+2W+WDD7bKp5/uk08+2S+LFu2XBQv2y8cf75ePPtov8+YdkLlzD8ic
OQdk1qwDMmPGQZk+/aDn8/egTJlySCZNOuT5znpI3nrrdxk79rCMHn1YRo48
IsOGHZFXXz0qgwYd9bQvj0m/fselTZvNUqrUe/L443HStetJ6djxlKeNeUra
tTstd94Z7/kbOuP5mz3rydJznr/b81K8+EVPhl7yZNklyZz5sufni1KmzAWp
UuWc1Kt3xvOdOl46dDhlvN6AAX95tv+HzJ591Ni3778/6Hl+cePz7cYbb7S9
6L1nuq3E/252Fe2HoNt1anvZsmWTd99915Ft6T19WbNmdWzfypcv72lv/dux
7elxsm3bNke29cwzz0jhwoUd27d8+fLJk08+KQsXLrS9zJs3TzJmzGj68xvR
o8eHthfMmjVrlvHdMbWi39X1mqkZ2i7Wv8nEr5U16ybJlGn/32Wfv2TO7Cu/
espvfxf9ee/f5Ze/yx5P+env/+/2lF2etuAuzzH7o2d733vKt3+XrZ7yjads
8pSNnrLBU9Z6yjpPWe0pKz1lhacs95QlnrLYU+Z7ykeeMsdTZnrKNE+Z7CkT
PWW8p4z2lBGe8qqnvChXX/2qpwyUPHn6St68z3pKd8+/RVdPpt4n+fO38rRN
75CCBet5PitqeNquN0vRoqVDer8TF991hHCea7YUKVLEyCUntqUlV65cju2b
9/jLavR/cGJbBQoUMLbn1L45eZxo0c+F/PnzO7ItHQPIyX1z+m9O27pIP7Q9
OXXq1GhXAwAAAAAAU6I1xwEAALEgLcxxAACA26WVOQ4AAHC7tDLHAQAAbpdW
5jgAAMDt0socB+lBly5d5I033jDOv1O8RY8dHYMz2vVIS+Whhx6SoUOHRr0e
aak8/PDDxphx0a5HWiqPPfaY6XGAkP6llTkO0gMdW6Fz587G+XiKt+TNm1c6
dOgQ9XqkpVKoUCFj/Jho1yMtFR3nrFWrVlGvR1oq2k9mzJgx0f5YQxSkhTkO
0gMdz0XHqcQVOhagfkfDFdWrV5dNmzZFuxppio6B9MUXX0S7GmmKznGwYMGC
aFcDURTNOQ7SAzI3GJkbjMwNRuYGI3OBlJG5wcjcYGRuMDI3GJkLpIzMDUbm
BiNzg5G5wchcIGVkbjAyNxiZG4zMDUbmAikjc4ORucHI3GBkbjAyF0gZmRuM
zA1G5gYjc4ORuUDKyNxgZG4wMjcYmRuMzAVSRuYGI3ODkbnByNxgZC6Qsh9+
+EEuXLgQ7WqkKTt27DDu68YVeo97fHx8tKuRpvz0009y6tSpaFcjTfnll18k
Li4u2tUAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAMuXbpk+jmX
L1+2oSZpC2MJBzP7nrj9OHH7/pkRznvB+4dYoeOwP/vss8YcQhkzZpTrrrtO
Xn311VTnNvjmm2/kvvvuk7x580qZMmXk5ZdfdqjGzpo0aZJcddVVIa3btWtX
qVChQlBx21j3Zt4Ttx8n7733ntSvX19y5MghNWvWDGkuITceJydPnpQ+ffrI
9ddfL/ny5ZPWrVvLsWPHUn1eOO8fkJ517NhRrrnmGiNnv/rqK3n++eclS5Ys
0r9//2Sfc/r0aSlbtqzce++9xmfqlClTjM/gwYMHO1hz+3300UeSLVs2yZkz
Z0jrlyhRQv71r3/JgAEDEhQ3zUNk5j1x+3Hy5ZdfGu/FmDFjZMuWLdKtWzcj
O7799tsUn+fG4+TJJ5+UcuXKyfLly433pUqVKlK1atUU26/hvn9AevXXX39J
pkyZpHfv3gmWt23bVgoXLpzs81588UXJkyePnDlzxr9s0KBBUrBgQTl79qxt
9XXKiRMnpEOHDpIhQwZjvtxQ8uX48ePG+p988okDNXReOO+J24+TihUrGu9J
oFtuuUUeeuihZJ/jxuNk27ZtxufIxx9/7F+m84Dqfi5ZsiTZ54Xz/gHpmf79
v/322/Lzzz8nWN6rVy/jMzW576j//Oc/5Z577kmwbOvWrcbf2OrVq22rr1NW
rFghpUqVMj5D3njjjZDOo65cudLY/4MHDxq/h3NtPC0L5z1x83Gyb98+Yz/+
97//JVj+wgsvSNGiRZN9nhuPk5EjRxrt08TtdP1upu3fpIT7/gFuo58B1157
rTRo0CDZdbSd0rNnzwTLjh49avwNzZkzx+4q2k7b/77Pj1Dz5c0335RcuXIZ
5wj1HNvVV18t7du3lyNHjthdXUeE8564+TjR7yC6H3o9JtD48eMlc+bMyWap
G4+Txx57TEqWLBm0XD9D7r777iSfE+77B7iN9oPQ80QbNmxIdh29BqPXfwNp
nyv9Gxo7dqzdVXRUqPnSpUsXY/+1v9D06dOlU6dOxnd/va518eJFB2rqnFDf
EzcfJ/Pnzzf2Y9euXQmWz5w501ieXIa68TjR88Na/8S0H5X2j0pKuO8fkF7s
379ffvnlF3/5888/g9Z55ZVXjON9+PDhKb6Wfk8fMmRIgmX6eaHPHTVqlKX1
tlMo70mo+aLnSmfNmpVg2bhx44z3ZPbs2ZbV2W5WviduPk70eqzux+7duxOs
68sMfU5S3HKcBOrcubPceuutQcvbtGkjtWvXTvI54b5/QHqhfRP0WPYV7csS
SK/h6vLXXnst1dfSc2KJ+13pfQH6/HfffdfSetsptfdEhZovSfn999+Ncwb9
+vWLtKqOsfI9cfNxov2w9eeNGzcmWFfPjeryuLi4kF8/PR4ngfr27SulS5cO
Wt6wYUO54447knyOle8fkBbpPR6TJ0/2F+2b76P35+rfvPanCkWdOnXkgQce
SLDsu+++M/5W0tP9dSm9Jz6h5svmzZuDvrNrHzW970r776YXVr4nbj5OtA+U
7seCBQsSrDtw4EDjOnZy3HKcBPJdo058blz7Jeu13qSE+/4B6Z22azVvE5/v
Sol+NhQqVCjB39iwYcOM+0Lc9v001HzRz5fKlSsnWKb3oyb1uZLehfqeuP04
ufnmm+XRRx9NsKxatWrJ9htSbjxOtm/fbtT/s88+8y/76aefUu0rF877B6Rn
es1EPztr1KghEydODCrnz5831ps2bZrxd+Ab70+/o2bNmlW6d+8uf/zxh3H/
Q/78+WX06NHR3B1bJJcvid8TvV9CP2M0Z7T/x6ZNm+SGG26Q6tWru25cu1Df
E7cfJ2+99ZbR/0nvd9H7l/Xatf6ueeMTK8eJnkfWc/A7d+40PlcaNWokdevW
9e+Ttu31fdD+yj6hvH+Am+g5ocDrVImL/h0o37XewLbJokWLjHNAulw/Rx95
5JF02+8yJcnlS+L3RD9b9LqW9tXV5XqusEWLFkbWuE2o74ly83Gi+6H3Qun3
Ct0/bcO+//77CdaJleNEc/a2227z71PTpk2NcTF89D6IxNfxQ3n/AFyhnx/a
jzO1sZljid7Dqt/1ddxDeLn9ONFxtn799VdTz3HrcaL3X+v1aTPCef8AAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA2K979+5y++23y4kT
J/zLBg0aJHXr1pWjR49GsWYAALjLDz/8INmzZ5cePXoYv69du1YyZcoko0eP
jnLNAABwn6FDh0rmzJnlq6++kvLly0ujRo3k8uXL0a4WAACuc/HiRalRo4bk
ypVL8ubNK7/++mu0qwQAgGt98MEHkiFDBunQoUO0qwIAgGvFx8cb55RLlSpl
XMvVa7oAAMB6PXv2lNy5cxvnlBs0aGDkr+YwAACwTuJ+yjt37jT6MWsOAwAA
a5w5c8Zo09asWVMuXbrkX/7yyy9zjhkAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACA
q/0/zPLdvA==
    "], {{0, 411}, {477, 0}}, {0, 255},
    ColorFunction->RGBColor],
   BoxForm`ImageTag["Byte", ColorSpace -> ColorProfileData[CompressedData["
1:eJyNVV1s21QUPomvU6QWP5V1dFJnxs+qqavSDUGraYP8LclW0shtOjYhgePc
xKZubGwnXac9TUggXijwhiYh/t4qISExjZ9pGw/sZWhIU0e7VUggHjbxI6RJ
e4EuHF87tdelDEe+/vyd755z7vHJvY+VDakaBQD7IRwkeS5hWfL8JMGX5LxD
yxEEy104QNeybJp6VASYrTuWlE2KLx49JnatQBQehW7oh25Zsc1EsTjuql0t
3HfduQauQ7i6u7P9P6/uCrUVgIibqFGxlVnExwH404ppOZhfL/Kjc47pYjeH
XgsTRPyKi2sedlxc9vCbTDMlpRCfRiwoqlxBvIh4qBziayHs5cCu3iytU0tT
RLcWRcuoajoNpfsA8/+8ZvVGO952vHvsmcnD+BzEtb9ekdMuHka8qMiZScRP
IL7e1KYLPr5rOkkJ8VMA0R2NmVIC8S7Euap1sOT5iVpqI9fG759Qp44g3oL4
23q5MOHPXVbsFNYMdiC+q9K8W98BAE7UnPyUN5c7YBnShBeXq1ZoOuPWEfFb
M8ZhyfPJnbGbk5m2zxNqquDzl1+VDxUR9yP+hepZyYvF/WM6RT8HMlDXC+Ne
LJKmNlsv4x11KufFJbqDH9SbSxaq2sG8r/9ctXKSj6+bOutRzI2PWg2p5On5
YdnKZD2ffJHWS75/vgnTERkoGFDGUYE6rIEIEmQhiU8TLLRUQQMdGYpWigzF
t7ZmN5tnwwzyGjSZzcaxyJTezMBfjfm4ybQKpAY+hQayKvyOrBrSpfCtgVxt
Ez9eLrd8PwbpI3GyF+99ZJzsJ6NkDETyHHmeHCBpZMfIvvW5xdCK3Hxurft5
DSNSpptG3UW0OyDj+DMqDFxTx6os9DcGA8sp62VNufL2X6Faaaw2QbXCFZ14
UM35X/mb/BKOK/xqoOBv8Kv4W7lnLcZ9Vabt6mxYc2dVAm0642bx1pjFDuUd
8nHp5DdbAz9L5OxLV3sunazWF/oD1q0CfaNwpwCnhgI2/mP8j/hS/MP4J/Hf
uPe4L7hz3JfcV9xlELkL3EXuPPcd9xn3dehbbd5D69+eZd7O27V0qjV2pZAU
tgmPC2lhu/CkMB74E/qEESEn7ETLtvXvFo4Xrp4GR3Fs16dzLE8X6oDIw9gB
2ib/qhKqNJhjSpv1Wx3mN2j8mWSAjJD8hu4edXu+rYhlYulYAsTYrthYbCR2
yMXtqLGdaBvDMXNPdyqbrJQ69Lh7nkDKMOctraY64p54/FkxgUcbFfN1ZXhI
lHVdZCZbtKhNrSatDIN7bnpb+m2JnYeRLVcCznkBYP+fuPf9EHDHGgCLNkDf
0wE3iHvlIx8AnH1GaVhN/4yIRL7Ho7y6d4/31pPE/eunVus27mNd7wKsvdNq
/f1Rq7X2MfpfBbig/wvsj4TS
      "], "RGB", "XYZ"], Interleaving -> True],
   Selectable->False],
  BaseStyle->"ImageGraphics",
  ImageSizeRaw->{477, 411},
  PlotRange->{{0, 477}, {0, 411}}]], "Graphics",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.697406053861423*^9}]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell["Appendix: R-code", "Title",
 CellChangeTimes->{{3.694362497110196*^9, 3.694362502269228*^9}}],

Cell["\<\
# problem 1
n<-1000
a<-array(dim=n)
b<-array(dim=n)
# initialize
a[1]<-1
b[1]<-1
# MCMC
for(i in 2:n){
  b[i]<-rgamma(1,shape=7,scale=1/(1+3*a[i-1]))
  a[i]<-rgamma(1,shape=5,scale=1/(1+3*b[i]))
}
I <- sum(a*b)/n
I
# integral vs n
I_N<- function(n){
  a<-array(dim=n)
  b<-array(dim=n)
  # initialize
  a[1]<-1
  b[1]<-1
  # MCMC
  for(i in 2:n){
    b[i]<-rgamma(1,shape=7,scale=1/(1+3*a[i-1]))
    a[i]<-rgamma(1,shape=5,scale=1/(1+3*b[i]))
  }
  return(sum(a*b)/n)
}

n = seq.int(100,5000,5)
results1 <- lapply(n,I_N)
plot(n, results1)

# problem 2
n<-1000
# pi(x)
pi <- function(x){
  return(exp(-1/2*x**2)/(1+x**2))
}
# normalized density
f <- function(x){
  result=integrate(pi,-Inf,Inf)$val
  return(pi(x)/result)
}
# q(x1|x2)
q <- function(x1,x2,sigma){
  return(dnorm(x1,x2,sigma))
}
# alpha(x1,x2)
alpha <- function(x1,x2,sigma){
  return(min(1,pi(x1)*q(x2,x1,sigma)/(pi(x2)*q(x1,x2,sigma))))
}

x<-array(dim=n)
u<-array(dim=n)
x[1]=-0.01
u[1]=0.1
sigma=1
for(i in 2:n){
  x[i]<-rnorm(1,x[i-1],sigma)
  u[i]<-runif(1,0,1)
  if(u[i]>=alpha(x[i],x[i-1],sigma)){
    x[i]=x[i-1]
  }
}
I <- sum(x)/n
I
hist(x,freq=FALSE)
xfit<-seq(min(x),max(x),length=40) 
yfit<-lapply(xfit,f)
lines(xfit, yfit, col=\[CloseCurlyDoubleQuote]blue\[CloseCurlyDoubleQuote])

# problem 3
n<-1000
# pi(x)
pi <- function(x){
  a<-10
  m<-20
  return(exp(a*x)*exp(-m*exp(x))*exp(-1/2*x**2))
}
# normalized density
library(cubature)
f <- function(x){
  result=integrate(pi,-50,50)$val
  return(pi(x)/result)
}
# q(x1,x2)
q <- function(x1,x2){
  #return(dnorm(x1,x2,1))
  return(dnorm(x1,0,1))
}
# alpha(x1,x2)
alpha <- function(x1,x2){
  return(min(1,pi(x1)*q(x2,x1)/(pi(x2)*q(x1,x2))))
}

x<-array(dim=n)
u<-array(dim=n)
x[1]=0
u[1]=0.1
for(i in 2:n){
  x[i]<-rnorm(1,0,1)
  u[i]<-runif(1,0,1)
  if(u[i]>=alpha(x[i],x[i-1])){
    x[i]=x[i-1]
  }
}
I <- sum(x)/n
I
hist(x,freq=FALSE,ylim=c(0,2))
xfit<-seq(min(x),max(x),length=40) 
yfit<-sapply(xfit,f)
lines(xfit, yfit, col=\[CloseCurlyDoubleQuote]blue\[CloseCurlyDoubleQuote])\
\>", "Program",
 CellChangeTimes->{{3.694373860735855*^9, 3.694373862780607*^9}, 
   3.694385372060495*^9, 3.6956498761711473`*^9, 3.6961842105237837`*^9, 
   3.6968727636802197`*^9, 3.697406823114498*^9}]
}, Open  ]]
},
WindowSize->{808, 699},
WindowMargins->{{224, Automatic}, {Automatic, 0}},
FrontEndVersion->"10.2 for Mac OS X x86 (32-bit, 64-bit Kernel) (July 29, \
2015)",
StyleDefinitions->"Cambria Article.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "eq: 1190041299861442990"->{
  Cell[11861, 402, 928, 30, 48, "DisplayFormulaNumbered",
   CellTags->"eq: 1190041299861442990"]},
 "eq: 2945818736449318105"->{
  Cell[12916, 437, 654, 20, 48, "DisplayFormulaNumbered",
   CellTags->"eq: 2945818736449318105"]},
 "eq: 5557865785081713160"->{
  Cell[18743, 617, 2193, 73, 97, "DisplayFormulaNumbered",
   CellTags->"eq: 5557865785081713160"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"eq: 1190041299861442990", 218474, 4634},
 {"eq: 2945818736449318105", 218604, 4637},
 {"eq: 5557865785081713160", 218734, 4640}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[580, 22, 188, 3, 77, "Title"],
Cell[771, 27, 98, 1, 58, "Author"],
Cell[CellGroupData[{
Cell[894, 32, 94, 1, 69, "Section"],
Cell[991, 35, 73, 1, 22, "TextNoIndent"],
Cell[1067, 38, 444, 13, 32, "DisplayFormulaNumbered"],
Cell[1514, 53, 295, 9, 22, "TextNoIndent"],
Cell[1812, 64, 293, 8, 33, "DisplayFormulaNumbered"],
Cell[2108, 74, 555, 16, 44, "TextNoIndent"],
Cell[2666, 92, 407, 11, 48, "DisplayFormulaNumbered"],
Cell[3076, 105, 162, 3, 22, "TextNoIndent"],
Cell[3241, 110, 2929, 95, 262, "DisplayFormulaNumbered"],
Cell[6173, 207, 111, 1, 22, "TextNoIndent"],
Cell[6287, 210, 385, 11, 49, "DisplayFormulaNumbered"],
Cell[CellGroupData[{
Cell[6697, 225, 530, 16, 33, "Input"],
Cell[7230, 243, 190, 6, 50, "Output"]
}, Open  ]],
Cell[7435, 252, 2626, 85, 261, "DisplayFormulaNumbered"],
Cell[10064, 339, 111, 1, 22, "TextNoIndent"],
Cell[10178, 342, 407, 11, 49, "DisplayFormulaNumbered"],
Cell[CellGroupData[{
Cell[10610, 357, 583, 17, 33, "Input"],
Cell[11196, 376, 191, 6, 50, "Output"]
}, Open  ]],
Cell[11402, 385, 456, 15, 23, "TextNoIndent"],
Cell[11861, 402, 928, 30, 48, "DisplayFormulaNumbered",
 CellTags->"eq: 1190041299861442990"],
Cell[12792, 434, 121, 1, 22, "TextNoIndent"],
Cell[12916, 437, 654, 20, 48, "DisplayFormulaNumbered",
 CellTags->"eq: 2945818736449318105"],
Cell[13573, 459, 204, 3, 22, "TextNoIndent"],
Cell[13780, 464, 1940, 59, 92, "DisplayFormulaNumbered"],
Cell[15723, 525, 181, 2, 22, "TextNoIndent"],
Cell[15907, 529, 565, 18, 48, "DisplayFormulaNumbered"],
Cell[16475, 549, 1867, 58, 92, "DisplayFormulaNumbered"],
Cell[18345, 609, 395, 6, 43, "TextNoIndent"],
Cell[18743, 617, 2193, 73, 97, "DisplayFormulaNumbered",
 CellTags->"eq: 5557865785081713160"],
Cell[20939, 692, 251, 8, 22, "TextNoIndent"],
Cell[21193, 702, 2547, 85, 172, "DisplayFormulaNumbered"],
Cell[23743, 789, 157, 2, 22, "TextNoIndent"],
Cell[23903, 793, 1063, 30, 100, "DisplayFormulaNumbered"],
Cell[24969, 825, 94, 1, 22, "TextNoIndent"],
Cell[25066, 828, 429, 13, 32, "DisplayFormulaNumbered"],
Cell[25498, 843, 119, 1, 22, "TextNoIndent"],
Cell[25620, 846, 196, 4, 32, "DisplayFormulaNumbered"],
Cell[CellGroupData[{
Cell[25841, 854, 545, 15, 33, "Input"],
Cell[26389, 871, 333, 10, 55, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[26759, 886, 561, 15, 33, "Input"],
Cell[27323, 903, 407, 13, 56, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[27767, 921, 145, 3, 46, "Input"],
Cell[27915, 926, 88, 1, 28, "Output"]
}, Open  ]],
Cell[28018, 930, 398, 13, 22, "TextNoIndent"],
Cell[28419, 945, 183, 4, 32, "DisplayFormulaNumbered"],
Cell[28605, 951, 130, 1, 22, "TextNoIndent"],
Cell[28738, 954, 56543, 933, 420, "Graphics"]
}, Open  ]],
Cell[CellGroupData[{
Cell[85318, 1892, 145, 2, 69, "Section"],
Cell[85466, 1896, 96, 1, 22, "TextNoIndent"],
Cell[85565, 1899, 416, 13, 57, "DisplayFormulaNumbered"],
Cell[85984, 1914, 524, 15, 24, "TextNoIndent"],
Cell[86511, 1931, 259, 5, 43, "TextNoIndent"],
Cell[86773, 1938, 223, 4, 22, "TextNoIndent"],
Cell[86999, 1944, 294, 8, 48, "DisplayFormulaNumbered"],
Cell[87296, 1954, 516, 16, 24, "TextNoIndent"],
Cell[87815, 1972, 207, 3, 22, "TextNoIndent"],
Cell[88025, 1977, 640, 21, 62, "DisplayFormulaNumbered"],
Cell[88668, 2000, 187, 2, 22, "TextNoIndent"],
Cell[88858, 2004, 1661, 55, 79, "DisplayFormulaNumbered"],
Cell[90522, 2061, 544, 17, 53, "DisplayFormulaNumbered"],
Cell[91069, 2080, 561, 16, 48, "DisplayFormulaNumbered"],
Cell[91633, 2098, 1028, 32, 54, "DisplayFormulaNumbered"],
Cell[92664, 2132, 3092, 107, 66, "TextNoIndent"],
Cell[95759, 2241, 1335, 30, 65, "TextNoIndent"],
Cell[97097, 2273, 16771, 281, 420, "Graphics"],
Cell[113871, 2556, 1562, 48, 87, "TextNoIndent"],
Cell[115436, 2606, 19114, 320, 420, "Graphics"],
Cell[134553, 2928, 189, 2, 22, "TextNoIndent"],
Cell[134745, 2932, 835, 24, 58, "DisplayFormulaNumbered"],
Cell[CellGroupData[{
Cell[135605, 2960, 1046, 35, 46, "Input"],
Cell[136654, 2997, 112, 1, 28, "Output"]
}, Open  ]],
Cell[136781, 3001, 247, 8, 22, "TextNoIndent"],
Cell[137031, 3011, 191, 5, 32, "DisplayFormulaNumbered"],
Cell[137225, 3018, 339, 9, 22, "TextNoIndent"],
Cell[137567, 3029, 23695, 395, 420, "Graphics"],
Cell[161265, 3426, 692, 21, 45, "TextNoIndent"],
Cell[161960, 3449, 24189, 403, 420, "Graphics"],
Cell[186152, 3854, 991, 31, 45, "TextNoIndent"],
Cell[187146, 3887, 186, 4, 32, "DisplayFormulaNumbered"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187369, 3896, 194, 3, 69, "Section"],
Cell[187566, 3901, 105, 1, 22, "TextNoIndent"],
Cell[187674, 3904, 622, 18, 40, "DisplayFormulaNumbered"],
Cell[188299, 3924, 736, 24, 43, "TextNoIndent"],
Cell[189038, 3950, 220, 6, 22, "TextNoIndent"],
Cell[189261, 3958, 373, 12, 23, "TextNoIndent"],
Cell[189637, 3972, 655, 20, 48, "DisplayFormulaNumbered"],
Cell[190295, 3994, 188, 2, 22, "TextNoIndent"],
Cell[190486, 3998, 413, 14, 53, "DisplayFormulaNumbered"],
Cell[190902, 4014, 1581, 52, 76, "DisplayFormulaNumbered"],
Cell[192486, 4068, 565, 17, 52, "DisplayFormulaNumbered"],
Cell[193054, 4087, 584, 16, 48, "DisplayFormulaNumbered"],
Cell[193641, 4105, 669, 20, 52, "DisplayFormulaNumbered"],
Cell[194313, 4127, 543, 16, 43, "TextNoIndent"],
Cell[194859, 4145, 20895, 349, 420, "Graphics"]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[215803, 4500, 99, 1, 77, "Title"],
Cell[215905, 4503, 2226, 117, 1606, "Program"]
}, Open  ]]
}
]
*)

(* End of internal cache information *)
